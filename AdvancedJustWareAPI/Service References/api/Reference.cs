//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdvancedJustWareAPI.api {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataContractBase", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Account))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.AccountStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.AccountType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.AddressType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Agency))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.AgencyType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.ApplicationPerson))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Name))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.NameAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.NameCorrespondence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CorrespondenceInvolvedName))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Email))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.NameEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.EventInvolvedName))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.NameDocument))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.NameNonCollectableFinancial))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.NonCollectableFinancialInvolvedName))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.NonCasePayment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.NonCasePaymentItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Transfer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Obligation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Case))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CaseAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CaseDocument))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.DocumentInvolvedName))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.OnlineDocument))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.OnlineDocumentAuthorizedName))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CaseInvolvedName))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CaseNonCollectableFinancial))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CaseRelationship))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CaseStatusHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Charge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.ChargeAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.ChargeAgency))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.ChargeEnhancement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.ChargeHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.ChargeInvolvedName))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Bond))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.BondAmendment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.BondCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Condition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Sentence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Exhibit))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Intoxicant))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Judgment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CaseEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.DocketInstance))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CalendarDocket))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Location))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CaseCorrespondence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CreditSuspend))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CaseNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.PhysicalLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CaseTask))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.TaskInvolvedName))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Payment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.NameNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.NameNumber))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.PendingTimeTrackingEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Phone))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.PrimaryNameRelationship))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.SecondaryNameRelationship))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.NameTask))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.BondConditionType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.BondStatusType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.BondType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CaseAttributeCodeListType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CaseAttributeType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CaseNoteType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CaseStatusType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CaseType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CategoryType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.ChargeAttributeCodeListType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.ChargeAttributeType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.ChargeEnhancementType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.ChargeHistoryType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.ChargeType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.ConditionType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CorrespondenceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CountyType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.CreditSuspendType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.DispositionType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.DocketInstanceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.DocumentType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.EmailType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.EventLocationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.EventStatusType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.EventType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.ExhibitStatusType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.ExhibitType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.IntoxicantType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.InvolveType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.JurisdictionType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.JusticeBrokerMessageQueue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.NameAttributeCodeListType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.NameAttributeType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.NameType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.NonCasePaymentItemType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.NonCollectableFinancialType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.NumberType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.ObligationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.PaymentStatusType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.PaymentType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.PhoneType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.PhysicalLocationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.PleaType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.RelatedCaseType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.RelationshipType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.SentenceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Statute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.StatuteAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.StatuteText))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.StatuteAttributeType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.StatuteCategoryType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.StatuteClassType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.StatuteSeverityType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.StatuteTextType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.TaskType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.TimeTrackingStatusType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.TimeTrackingType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.VoucherType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.VoucherStatusType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.Voucher))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.VoucherableAmount))]
    public partial class DataContractBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.OperationType OperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TempIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.OperationType Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((this.OperationField.Equals(value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TempID {
            get {
                return this.TempIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TempIDField, value) != true)) {
                    this.TempIDField = value;
                    this.RaisePropertyChanged("TempID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Account : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AgencyCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NameIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NumberIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerAgencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyCode {
            get {
                return this.AgencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyCodeField, value) != true)) {
                    this.AgencyCodeField = value;
                    this.RaisePropertyChanged("AgencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AgencyCodeIsChanged {
            get {
                return this.AgencyCodeIsChangedField;
            }
            set {
                if ((this.AgencyCodeIsChangedField.Equals(value) != true)) {
                    this.AgencyCodeIsChangedField = value;
                    this.RaisePropertyChanged("AgencyCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((object.ReferenceEquals(this.BalanceField, value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NameIsChanged {
            get {
                return this.NameIsChangedField;
            }
            set {
                if ((this.NameIsChangedField.Equals(value) != true)) {
                    this.NameIsChangedField = value;
                    this.RaisePropertyChanged("NameIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NumberIsChanged {
            get {
                return this.NumberIsChangedField;
            }
            set {
                if ((this.NumberIsChangedField.Equals(value) != true)) {
                    this.NumberIsChangedField = value;
                    this.RaisePropertyChanged("NumberIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerAgencyCode {
            get {
                return this.OwnerAgencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerAgencyCodeField, value) != true)) {
                    this.OwnerAgencyCodeField = value;
                    this.RaisePropertyChanged("OwnerAgencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountStatus", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AccountStatus : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AccountType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Address : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CityIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StateCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StreetAddressIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ZipIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ActiveDateIsChanged {
            get {
                return this.ActiveDateIsChangedField;
            }
            set {
                if ((this.ActiveDateIsChangedField.Equals(value) != true)) {
                    this.ActiveDateIsChangedField = value;
                    this.RaisePropertyChanged("ActiveDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CityIsChanged {
            get {
                return this.CityIsChangedField;
            }
            set {
                if ((this.CityIsChangedField.Equals(value) != true)) {
                    this.CityIsChangedField = value;
                    this.RaisePropertyChanged("CityIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCode {
            get {
                return this.StateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCodeField, value) != true)) {
                    this.StateCodeField = value;
                    this.RaisePropertyChanged("StateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StateCodeIsChanged {
            get {
                return this.StateCodeIsChangedField;
            }
            set {
                if ((this.StateCodeIsChangedField.Equals(value) != true)) {
                    this.StateCodeIsChangedField = value;
                    this.RaisePropertyChanged("StateCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetAddress {
            get {
                return this.StreetAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetAddressField, value) != true)) {
                    this.StreetAddressField = value;
                    this.RaisePropertyChanged("StreetAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StreetAddressIsChanged {
            get {
                return this.StreetAddressIsChangedField;
            }
            set {
                if ((this.StreetAddressIsChangedField.Equals(value) != true)) {
                    this.StreetAddressIsChangedField = value;
                    this.RaisePropertyChanged("StreetAddressIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ZipIsChanged {
            get {
                return this.ZipIsChangedField;
            }
            set {
                if ((this.ZipIsChangedField.Equals(value) != true)) {
                    this.ZipIsChangedField = value;
                    this.RaisePropertyChanged("ZipIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AddressType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Agency", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Agency : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AgencyCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyCombinedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte AgencyMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DuplicateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LeadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LeadIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NumberIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NumberTypeCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte NumberTypeMasterCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ActiveIsChanged {
            get {
                return this.ActiveIsChangedField;
            }
            set {
                if ((this.ActiveIsChangedField.Equals(value) != true)) {
                    this.ActiveIsChangedField = value;
                    this.RaisePropertyChanged("ActiveIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyCode {
            get {
                return this.AgencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyCodeField, value) != true)) {
                    this.AgencyCodeField = value;
                    this.RaisePropertyChanged("AgencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AgencyCodeIsChanged {
            get {
                return this.AgencyCodeIsChangedField;
            }
            set {
                if ((this.AgencyCodeIsChangedField.Equals(value) != true)) {
                    this.AgencyCodeIsChangedField = value;
                    this.RaisePropertyChanged("AgencyCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyCombined {
            get {
                return this.AgencyCombinedField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyCombinedField, value) != true)) {
                    this.AgencyCombinedField = value;
                    this.RaisePropertyChanged("AgencyCombined");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte AgencyMasterCode {
            get {
                return this.AgencyMasterCodeField;
            }
            set {
                if ((this.AgencyMasterCodeField.Equals(value) != true)) {
                    this.AgencyMasterCodeField = value;
                    this.RaisePropertyChanged("AgencyMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Duplicate {
            get {
                return this.DuplicateField;
            }
            set {
                if ((this.DuplicateField.Equals(value) != true)) {
                    this.DuplicateField = value;
                    this.RaisePropertyChanged("Duplicate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Lead {
            get {
                return this.LeadField;
            }
            set {
                if ((this.LeadField.Equals(value) != true)) {
                    this.LeadField = value;
                    this.RaisePropertyChanged("Lead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LeadIsChanged {
            get {
                return this.LeadIsChangedField;
            }
            set {
                if ((this.LeadIsChangedField.Equals(value) != true)) {
                    this.LeadIsChangedField = value;
                    this.RaisePropertyChanged("LeadIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NumberIsChanged {
            get {
                return this.NumberIsChangedField;
            }
            set {
                if ((this.NumberIsChangedField.Equals(value) != true)) {
                    this.NumberIsChangedField = value;
                    this.RaisePropertyChanged("NumberIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberTypeCode {
            get {
                return this.NumberTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberTypeCodeField, value) != true)) {
                    this.NumberTypeCodeField = value;
                    this.RaisePropertyChanged("NumberTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NumberTypeCodeIsChanged {
            get {
                return this.NumberTypeCodeIsChangedField;
            }
            set {
                if ((this.NumberTypeCodeIsChangedField.Equals(value) != true)) {
                    this.NumberTypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("NumberTypeCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte NumberTypeMasterCode {
            get {
                return this.NumberTypeMasterCodeField;
            }
            set {
                if ((this.NumberTypeMasterCodeField.Equals(value) != true)) {
                    this.NumberTypeMasterCodeField = value;
                    this.RaisePropertyChanged("NumberTypeMasterCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AgencyType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AgencyType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAccountOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAccountOwner {
            get {
                return this.IsAccountOwnerField;
            }
            set {
                if ((this.IsAccountOwnerField.Equals(value) != true)) {
                    this.IsAccountOwnerField = value;
                    this.RaisePropertyChanged("IsAccountOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationPerson", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ApplicationPerson : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AgencyCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMobileUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMobileUserIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailboxNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MailboxNameIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Name NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonClientUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonClientUserIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UserDescriptionIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyCode {
            get {
                return this.AgencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyCodeField, value) != true)) {
                    this.AgencyCodeField = value;
                    this.RaisePropertyChanged("AgencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AgencyCodeIsChanged {
            get {
                return this.AgencyCodeIsChangedField;
            }
            set {
                if ((this.AgencyCodeIsChangedField.Equals(value) != true)) {
                    this.AgencyCodeIsChangedField = value;
                    this.RaisePropertyChanged("AgencyCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CodeIsChanged {
            get {
                return this.CodeIsChangedField;
            }
            set {
                if ((this.CodeIsChangedField.Equals(value) != true)) {
                    this.CodeIsChangedField = value;
                    this.RaisePropertyChanged("CodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string First {
            get {
                return this.FirstField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstField, value) != true)) {
                    this.FirstField = value;
                    this.RaisePropertyChanged("First");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActiveIsChanged {
            get {
                return this.IsActiveIsChangedField;
            }
            set {
                if ((this.IsActiveIsChangedField.Equals(value) != true)) {
                    this.IsActiveIsChangedField = value;
                    this.RaisePropertyChanged("IsActiveIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMobileUser {
            get {
                return this.IsMobileUserField;
            }
            set {
                if ((this.IsMobileUserField.Equals(value) != true)) {
                    this.IsMobileUserField = value;
                    this.RaisePropertyChanged("IsMobileUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMobileUserIsChanged {
            get {
                return this.IsMobileUserIsChangedField;
            }
            set {
                if ((this.IsMobileUserIsChangedField.Equals(value) != true)) {
                    this.IsMobileUserIsChangedField = value;
                    this.RaisePropertyChanged("IsMobileUserIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Last {
            get {
                return this.LastField;
            }
            set {
                if ((object.ReferenceEquals(this.LastField, value) != true)) {
                    this.LastField = value;
                    this.RaisePropertyChanged("Last");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailboxName {
            get {
                return this.MailboxNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MailboxNameField, value) != true)) {
                    this.MailboxNameField = value;
                    this.RaisePropertyChanged("MailboxName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MailboxNameIsChanged {
            get {
                return this.MailboxNameIsChangedField;
            }
            set {
                if ((this.MailboxNameIsChangedField.Equals(value) != true)) {
                    this.MailboxNameIsChangedField = value;
                    this.RaisePropertyChanged("MailboxNameIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Middle {
            get {
                return this.MiddleField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleField, value) != true)) {
                    this.MiddleField = value;
                    this.RaisePropertyChanged("Middle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Name Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NameIDIsChanged {
            get {
                return this.NameIDIsChangedField;
            }
            set {
                if ((this.NameIDIsChangedField.Equals(value) != true)) {
                    this.NameIDIsChangedField = value;
                    this.RaisePropertyChanged("NameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonClientUser {
            get {
                return this.NonClientUserField;
            }
            set {
                if ((this.NonClientUserField.Equals(value) != true)) {
                    this.NonClientUserField = value;
                    this.RaisePropertyChanged("NonClientUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonClientUserIsChanged {
            get {
                return this.NonClientUserIsChangedField;
            }
            set {
                if ((this.NonClientUserIsChangedField.Equals(value) != true)) {
                    this.NonClientUserIsChangedField = value;
                    this.RaisePropertyChanged("NonClientUserIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserDescription {
            get {
                return this.UserDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDescriptionField, value) != true)) {
                    this.UserDescriptionField = value;
                    this.RaisePropertyChanged("UserDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UserDescriptionIsChanged {
            get {
                return this.UserDescriptionIsChangedField;
            }
            set {
                if ((this.UserDescriptionIsChangedField.Equals(value) != true)) {
                    this.UserDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("UserDescriptionIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Name", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Name : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Address> AddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.NameAttribute> AttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.NameCorrespondence> CorrespondencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateOfBirthIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriversLicenseClassCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DriversLicenseClassCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriversLicenseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriversLicenseStateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DriversLicenseStateCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Email> EmailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.NameEvent> EventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EyesCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EyesCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FirstIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullName2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HairCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HairCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HeightIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JuvenileStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LastIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MiddleIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.NameDocument> NameDocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.NameNonCollectableFinancial> NameNonCollectableFinancialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCasePayment> NonCasePaymentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.NameNote> NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.NameNumber> NumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Payment> PaymentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.PendingTimeTrackingEntry> PendingTimeTrackingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Phone> PhonesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrefixIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.PrimaryNameRelationship> PrimaryNameRelationshipsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RaceCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.SecondaryNameRelationship> SecondaryNameRelationshipsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SexCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuffixIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.TaskInvolvedName> TaskInvolvedNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.NameTask> TasksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> WeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WeightIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Address> Addresses {
            get {
                return this.AddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressesField, value) != true)) {
                    this.AddressesField = value;
                    this.RaisePropertyChanged("Addresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NameAttribute> Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NameCorrespondence> Correspondences {
            get {
                return this.CorrespondencesField;
            }
            set {
                if ((object.ReferenceEquals(this.CorrespondencesField, value) != true)) {
                    this.CorrespondencesField = value;
                    this.RaisePropertyChanged("Correspondences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateOfBirthIsChanged {
            get {
                return this.DateOfBirthIsChangedField;
            }
            set {
                if ((this.DateOfBirthIsChangedField.Equals(value) != true)) {
                    this.DateOfBirthIsChangedField = value;
                    this.RaisePropertyChanged("DateOfBirthIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriversLicenseClassCode {
            get {
                return this.DriversLicenseClassCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DriversLicenseClassCodeField, value) != true)) {
                    this.DriversLicenseClassCodeField = value;
                    this.RaisePropertyChanged("DriversLicenseClassCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DriversLicenseClassCodeIsChanged {
            get {
                return this.DriversLicenseClassCodeIsChangedField;
            }
            set {
                if ((this.DriversLicenseClassCodeIsChangedField.Equals(value) != true)) {
                    this.DriversLicenseClassCodeIsChangedField = value;
                    this.RaisePropertyChanged("DriversLicenseClassCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriversLicenseNumber {
            get {
                return this.DriversLicenseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DriversLicenseNumberField, value) != true)) {
                    this.DriversLicenseNumberField = value;
                    this.RaisePropertyChanged("DriversLicenseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriversLicenseStateCode {
            get {
                return this.DriversLicenseStateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DriversLicenseStateCodeField, value) != true)) {
                    this.DriversLicenseStateCodeField = value;
                    this.RaisePropertyChanged("DriversLicenseStateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DriversLicenseStateCodeIsChanged {
            get {
                return this.DriversLicenseStateCodeIsChangedField;
            }
            set {
                if ((this.DriversLicenseStateCodeIsChangedField.Equals(value) != true)) {
                    this.DriversLicenseStateCodeIsChangedField = value;
                    this.RaisePropertyChanged("DriversLicenseStateCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Email> Emails {
            get {
                return this.EmailsField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailsField, value) != true)) {
                    this.EmailsField = value;
                    this.RaisePropertyChanged("Emails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NameEvent> Events {
            get {
                return this.EventsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventsField, value) != true)) {
                    this.EventsField = value;
                    this.RaisePropertyChanged("Events");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EyesCode {
            get {
                return this.EyesCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EyesCodeField, value) != true)) {
                    this.EyesCodeField = value;
                    this.RaisePropertyChanged("EyesCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EyesCodeIsChanged {
            get {
                return this.EyesCodeIsChangedField;
            }
            set {
                if ((this.EyesCodeIsChangedField.Equals(value) != true)) {
                    this.EyesCodeIsChangedField = value;
                    this.RaisePropertyChanged("EyesCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string First {
            get {
                return this.FirstField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstField, value) != true)) {
                    this.FirstField = value;
                    this.RaisePropertyChanged("First");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FirstIsChanged {
            get {
                return this.FirstIsChangedField;
            }
            set {
                if ((this.FirstIsChangedField.Equals(value) != true)) {
                    this.FirstIsChangedField = value;
                    this.RaisePropertyChanged("FirstIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName2 {
            get {
                return this.FullName2Field;
            }
            set {
                if ((object.ReferenceEquals(this.FullName2Field, value) != true)) {
                    this.FullName2Field = value;
                    this.RaisePropertyChanged("FullName2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HairCode {
            get {
                return this.HairCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HairCodeField, value) != true)) {
                    this.HairCodeField = value;
                    this.RaisePropertyChanged("HairCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HairCodeIsChanged {
            get {
                return this.HairCodeIsChangedField;
            }
            set {
                if ((this.HairCodeIsChangedField.Equals(value) != true)) {
                    this.HairCodeIsChangedField = value;
                    this.RaisePropertyChanged("HairCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Height {
            get {
                return this.HeightField;
            }
            set {
                if ((object.ReferenceEquals(this.HeightField, value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HeightIsChanged {
            get {
                return this.HeightIsChangedField;
            }
            set {
                if ((this.HeightIsChangedField.Equals(value) != true)) {
                    this.HeightIsChangedField = value;
                    this.RaisePropertyChanged("HeightIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JuvenileStatus {
            get {
                return this.JuvenileStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.JuvenileStatusField, value) != true)) {
                    this.JuvenileStatusField = value;
                    this.RaisePropertyChanged("JuvenileStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Last {
            get {
                return this.LastField;
            }
            set {
                if ((object.ReferenceEquals(this.LastField, value) != true)) {
                    this.LastField = value;
                    this.RaisePropertyChanged("Last");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LastIsChanged {
            get {
                return this.LastIsChangedField;
            }
            set {
                if ((this.LastIsChangedField.Equals(value) != true)) {
                    this.LastIsChangedField = value;
                    this.RaisePropertyChanged("LastIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Middle {
            get {
                return this.MiddleField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleField, value) != true)) {
                    this.MiddleField = value;
                    this.RaisePropertyChanged("Middle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MiddleIsChanged {
            get {
                return this.MiddleIsChangedField;
            }
            set {
                if ((this.MiddleIsChangedField.Equals(value) != true)) {
                    this.MiddleIsChangedField = value;
                    this.RaisePropertyChanged("MiddleIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NameDocument> NameDocuments {
            get {
                return this.NameDocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.NameDocumentsField, value) != true)) {
                    this.NameDocumentsField = value;
                    this.RaisePropertyChanged("NameDocuments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NameNonCollectableFinancial> NameNonCollectableFinancials {
            get {
                return this.NameNonCollectableFinancialsField;
            }
            set {
                if ((object.ReferenceEquals(this.NameNonCollectableFinancialsField, value) != true)) {
                    this.NameNonCollectableFinancialsField = value;
                    this.RaisePropertyChanged("NameNonCollectableFinancials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCasePayment> NonCasePayments {
            get {
                return this.NonCasePaymentsField;
            }
            set {
                if ((object.ReferenceEquals(this.NonCasePaymentsField, value) != true)) {
                    this.NonCasePaymentsField = value;
                    this.RaisePropertyChanged("NonCasePayments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NameNote> Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NameNumber> Numbers {
            get {
                return this.NumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.NumbersField, value) != true)) {
                    this.NumbersField = value;
                    this.RaisePropertyChanged("Numbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Payment> Payments {
            get {
                return this.PaymentsField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentsField, value) != true)) {
                    this.PaymentsField = value;
                    this.RaisePropertyChanged("Payments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.PendingTimeTrackingEntry> PendingTimeTracking {
            get {
                return this.PendingTimeTrackingField;
            }
            set {
                if ((object.ReferenceEquals(this.PendingTimeTrackingField, value) != true)) {
                    this.PendingTimeTrackingField = value;
                    this.RaisePropertyChanged("PendingTimeTracking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Phone> Phones {
            get {
                return this.PhonesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhonesField, value) != true)) {
                    this.PhonesField = value;
                    this.RaisePropertyChanged("Phones");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prefix {
            get {
                return this.PrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixField, value) != true)) {
                    this.PrefixField = value;
                    this.RaisePropertyChanged("Prefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrefixIsChanged {
            get {
                return this.PrefixIsChangedField;
            }
            set {
                if ((this.PrefixIsChangedField.Equals(value) != true)) {
                    this.PrefixIsChangedField = value;
                    this.RaisePropertyChanged("PrefixIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.PrimaryNameRelationship> PrimaryNameRelationships {
            get {
                return this.PrimaryNameRelationshipsField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryNameRelationshipsField, value) != true)) {
                    this.PrimaryNameRelationshipsField = value;
                    this.RaisePropertyChanged("PrimaryNameRelationships");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RaceCode {
            get {
                return this.RaceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RaceCodeField, value) != true)) {
                    this.RaceCodeField = value;
                    this.RaisePropertyChanged("RaceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RaceCodeIsChanged {
            get {
                return this.RaceCodeIsChangedField;
            }
            set {
                if ((this.RaceCodeIsChangedField.Equals(value) != true)) {
                    this.RaceCodeIsChangedField = value;
                    this.RaisePropertyChanged("RaceCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.SecondaryNameRelationship> SecondaryNameRelationships {
            get {
                return this.SecondaryNameRelationshipsField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryNameRelationshipsField, value) != true)) {
                    this.SecondaryNameRelationshipsField = value;
                    this.RaisePropertyChanged("SecondaryNameRelationships");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SexCode {
            get {
                return this.SexCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SexCodeField, value) != true)) {
                    this.SexCodeField = value;
                    this.RaisePropertyChanged("SexCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SexCodeIsChanged {
            get {
                return this.SexCodeIsChangedField;
            }
            set {
                if ((this.SexCodeIsChangedField.Equals(value) != true)) {
                    this.SexCodeIsChangedField = value;
                    this.RaisePropertyChanged("SexCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suffix {
            get {
                return this.SuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SuffixField, value) != true)) {
                    this.SuffixField = value;
                    this.RaisePropertyChanged("Suffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SuffixIsChanged {
            get {
                return this.SuffixIsChangedField;
            }
            set {
                if ((this.SuffixIsChangedField.Equals(value) != true)) {
                    this.SuffixIsChangedField = value;
                    this.RaisePropertyChanged("SuffixIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.TaskInvolvedName> TaskInvolvedNames {
            get {
                return this.TaskInvolvedNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskInvolvedNamesField, value) != true)) {
                    this.TaskInvolvedNamesField = value;
                    this.RaisePropertyChanged("TaskInvolvedNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NameTask> Tasks {
            get {
                return this.TasksField;
            }
            set {
                if ((object.ReferenceEquals(this.TasksField, value) != true)) {
                    this.TasksField = value;
                    this.RaisePropertyChanged("Tasks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WeightIsChanged {
            get {
                return this.WeightIsChangedField;
            }
            set {
                if ((this.WeightIsChangedField.Equals(value) != true)) {
                    this.WeightIsChangedField = value;
                    this.RaisePropertyChanged("WeightIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameAttribute", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class NameAttribute : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListValueCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ListValueCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValueIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListValueCode {
            get {
                return this.ListValueCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ListValueCodeField, value) != true)) {
                    this.ListValueCodeField = value;
                    this.RaisePropertyChanged("ListValueCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ListValueCodeIsChanged {
            get {
                return this.ListValueCodeIsChangedField;
            }
            set {
                if ((this.ListValueCodeIsChangedField.Equals(value) != true)) {
                    this.ListValueCodeIsChangedField = value;
                    this.RaisePropertyChanged("ListValueCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValueIsChanged {
            get {
                return this.ValueIsChangedField;
            }
            set {
                if ((this.ValueIsChangedField.Equals(value) != true)) {
                    this.ValueIsChangedField = value;
                    this.RaisePropertyChanged("ValueIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameCorrespondence", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class NameCorrespondence : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountFromDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountToDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseStatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CategoryCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.CorrespondenceInvolvedName> CorrespondenceInvolvedNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourtNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DaysPastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DocketIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocketIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DocketOccurrenceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocketOccurrenceIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DurationDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventEndDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EventMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InitiatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InitiatedByIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocationCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Name NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OccurrenceCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OccurrenceCountIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParentEventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TitleIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountFrom {
            get {
                return this.AmountFromField;
            }
            set {
                if ((this.AmountFromField.Equals(value) != true)) {
                    this.AmountFromField = value;
                    this.RaisePropertyChanged("AmountFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountFromDescription {
            get {
                return this.AmountFromDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountFromDescriptionField, value) != true)) {
                    this.AmountFromDescriptionField = value;
                    this.RaisePropertyChanged("AmountFromDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromDescriptionIsChanged {
            get {
                return this.AmountFromDescriptionIsChangedField;
            }
            set {
                if ((this.AmountFromDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountFromDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromIsChanged {
            get {
                return this.AmountFromIsChangedField;
            }
            set {
                if ((this.AmountFromIsChangedField.Equals(value) != true)) {
                    this.AmountFromIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountTo {
            get {
                return this.AmountToField;
            }
            set {
                if ((this.AmountToField.Equals(value) != true)) {
                    this.AmountToField = value;
                    this.RaisePropertyChanged("AmountTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountToDescription {
            get {
                return this.AmountToDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountToDescriptionField, value) != true)) {
                    this.AmountToDescriptionField = value;
                    this.RaisePropertyChanged("AmountToDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToDescriptionIsChanged {
            get {
                return this.AmountToDescriptionIsChangedField;
            }
            set {
                if ((this.AmountToDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountToDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountToDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToIsChanged {
            get {
                return this.AmountToIsChangedField;
            }
            set {
                if ((this.AmountToIsChangedField.Equals(value) != true)) {
                    this.AmountToIsChangedField = value;
                    this.RaisePropertyChanged("AmountToIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseIDIsChanged {
            get {
                return this.CaseIDIsChangedField;
            }
            set {
                if ((this.CaseIDIsChangedField.Equals(value) != true)) {
                    this.CaseIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseStatusCode {
            get {
                return this.CaseStatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseStatusCodeField, value) != true)) {
                    this.CaseStatusCodeField = value;
                    this.RaisePropertyChanged("CaseStatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseTitle {
            get {
                return this.CaseTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseTitleField, value) != true)) {
                    this.CaseTitleField = value;
                    this.RaisePropertyChanged("CaseTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CategoryCodeIsChanged {
            get {
                return this.CategoryCodeIsChangedField;
            }
            set {
                if ((this.CategoryCodeIsChangedField.Equals(value) != true)) {
                    this.CategoryCodeIsChangedField = value;
                    this.RaisePropertyChanged("CategoryCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeID {
            get {
                return this.ChargeIDField;
            }
            set {
                if ((this.ChargeIDField.Equals(value) != true)) {
                    this.ChargeIDField = value;
                    this.RaisePropertyChanged("ChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeIDIsChanged {
            get {
                return this.ChargeIDIsChangedField;
            }
            set {
                if ((this.ChargeIDIsChangedField.Equals(value) != true)) {
                    this.ChargeIDIsChangedField = value;
                    this.RaisePropertyChanged("ChargeIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CorrespondenceInvolvedName> CorrespondenceInvolvedNames {
            get {
                return this.CorrespondenceInvolvedNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.CorrespondenceInvolvedNamesField, value) != true)) {
                    this.CorrespondenceInvolvedNamesField = value;
                    this.RaisePropertyChanged("CorrespondenceInvolvedNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourtNumber {
            get {
                return this.CourtNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CourtNumberField, value) != true)) {
                    this.CourtNumberField = value;
                    this.RaisePropertyChanged("CourtNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency1 {
            get {
                return this.Currency1Field;
            }
            set {
                if ((this.Currency1Field.Equals(value) != true)) {
                    this.Currency1Field = value;
                    this.RaisePropertyChanged("Currency1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency1IsChanged {
            get {
                return this.Currency1IsChangedField;
            }
            set {
                if ((this.Currency1IsChangedField.Equals(value) != true)) {
                    this.Currency1IsChangedField = value;
                    this.RaisePropertyChanged("Currency1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency2 {
            get {
                return this.Currency2Field;
            }
            set {
                if ((this.Currency2Field.Equals(value) != true)) {
                    this.Currency2Field = value;
                    this.RaisePropertyChanged("Currency2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency2IsChanged {
            get {
                return this.Currency2IsChangedField;
            }
            set {
                if ((this.Currency2IsChangedField.Equals(value) != true)) {
                    this.Currency2IsChangedField = value;
                    this.RaisePropertyChanged("Currency2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsChanged {
            get {
                return this.DateIsChangedField;
            }
            set {
                if ((this.DateIsChangedField.Equals(value) != true)) {
                    this.DateIsChangedField = value;
                    this.RaisePropertyChanged("DateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DaysPast {
            get {
                return this.DaysPastField;
            }
            set {
                if ((this.DaysPastField.Equals(value) != true)) {
                    this.DaysPastField = value;
                    this.RaisePropertyChanged("DaysPast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocketID {
            get {
                return this.DocketIDField;
            }
            set {
                if ((this.DocketIDField.Equals(value) != true)) {
                    this.DocketIDField = value;
                    this.RaisePropertyChanged("DocketID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocketIDIsChanged {
            get {
                return this.DocketIDIsChangedField;
            }
            set {
                if ((this.DocketIDIsChangedField.Equals(value) != true)) {
                    this.DocketIDIsChangedField = value;
                    this.RaisePropertyChanged("DocketIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocketOccurrenceID {
            get {
                return this.DocketOccurrenceIDField;
            }
            set {
                if ((this.DocketOccurrenceIDField.Equals(value) != true)) {
                    this.DocketOccurrenceIDField = value;
                    this.RaisePropertyChanged("DocketOccurrenceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocketOccurrenceIDIsChanged {
            get {
                return this.DocketOccurrenceIDIsChangedField;
            }
            set {
                if ((this.DocketOccurrenceIDIsChangedField.Equals(value) != true)) {
                    this.DocketOccurrenceIDIsChangedField = value;
                    this.RaisePropertyChanged("DocketOccurrenceIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationDescription {
            get {
                return this.DurationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationDescriptionField, value) != true)) {
                    this.DurationDescriptionField = value;
                    this.RaisePropertyChanged("DurationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DurationDescriptionIsChanged {
            get {
                return this.DurationDescriptionIsChangedField;
            }
            set {
                if ((this.DurationDescriptionIsChangedField.Equals(value) != true)) {
                    this.DurationDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("DurationDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventDateIsChanged {
            get {
                return this.EventDateIsChangedField;
            }
            set {
                if ((this.EventDateIsChangedField.Equals(value) != true)) {
                    this.EventDateIsChangedField = value;
                    this.RaisePropertyChanged("EventDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventEndDate {
            get {
                return this.EventEndDateField;
            }
            set {
                if ((this.EventEndDateField.Equals(value) != true)) {
                    this.EventEndDateField = value;
                    this.RaisePropertyChanged("EventEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventEndDateIsChanged {
            get {
                return this.EventEndDateIsChangedField;
            }
            set {
                if ((this.EventEndDateIsChangedField.Equals(value) != true)) {
                    this.EventEndDateIsChangedField = value;
                    this.RaisePropertyChanged("EventEndDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EventMasterCode {
            get {
                return this.EventMasterCodeField;
            }
            set {
                if ((this.EventMasterCodeField.Equals(value) != true)) {
                    this.EventMasterCodeField = value;
                    this.RaisePropertyChanged("EventMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InitiatedBy {
            get {
                return this.InitiatedByField;
            }
            set {
                if ((this.InitiatedByField.Equals(value) != true)) {
                    this.InitiatedByField = value;
                    this.RaisePropertyChanged("InitiatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InitiatedByIsChanged {
            get {
                return this.InitiatedByIsChangedField;
            }
            set {
                if ((this.InitiatedByIsChangedField.Equals(value) != true)) {
                    this.InitiatedByIsChangedField = value;
                    this.RaisePropertyChanged("InitiatedByIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalID {
            get {
                return this.LocalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalIDField, value) != true)) {
                    this.LocalIDField = value;
                    this.RaisePropertyChanged("LocalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LocationCodeIsChanged {
            get {
                return this.LocationCodeIsChangedField;
            }
            set {
                if ((this.LocationCodeIsChangedField.Equals(value) != true)) {
                    this.LocationCodeIsChangedField = value;
                    this.RaisePropertyChanged("LocationCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Name Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NameIDIsChanged {
            get {
                return this.NameIDIsChangedField;
            }
            set {
                if ((this.NameIDIsChangedField.Equals(value) != true)) {
                    this.NameIDIsChangedField = value;
                    this.RaisePropertyChanged("NameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OccurrenceCount {
            get {
                return this.OccurrenceCountField;
            }
            set {
                if ((this.OccurrenceCountField.Equals(value) != true)) {
                    this.OccurrenceCountField = value;
                    this.RaisePropertyChanged("OccurrenceCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OccurrenceCountIsChanged {
            get {
                return this.OccurrenceCountIsChangedField;
            }
            set {
                if ((this.OccurrenceCountIsChangedField.Equals(value) != true)) {
                    this.OccurrenceCountIsChangedField = value;
                    this.RaisePropertyChanged("OccurrenceCountIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentEventID {
            get {
                return this.ParentEventIDField;
            }
            set {
                if ((this.ParentEventIDField.Equals(value) != true)) {
                    this.ParentEventIDField = value;
                    this.RaisePropertyChanged("ParentEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ParentEventIDIsChanged {
            get {
                return this.ParentEventIDIsChangedField;
            }
            set {
                if ((this.ParentEventIDIsChangedField.Equals(value) != true)) {
                    this.ParentEventIDIsChangedField = value;
                    this.RaisePropertyChanged("ParentEventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SealedIsChanged {
            get {
                return this.SealedIsChangedField;
            }
            set {
                if ((this.SealedIsChangedField.Equals(value) != true)) {
                    this.SealedIsChangedField = value;
                    this.RaisePropertyChanged("SealedIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TitleIsChanged {
            get {
                return this.TitleIsChangedField;
            }
            set {
                if ((this.TitleIsChangedField.Equals(value) != true)) {
                    this.TitleIsChangedField = value;
                    this.RaisePropertyChanged("TitleIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CorrespondenceInvolvedName", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CorrespondenceInvolvedName : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.EventEntityType AppliesToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CaseInvolvedNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseInvolvedNameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CaseNotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag3IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag4IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag5IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvolvedPersonNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvolvedPersonNameIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MinutesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> NotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifyIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PopupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PopupIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.EventEntityType AppliesTo {
            get {
                return this.AppliesToField;
            }
            set {
                if ((this.AppliesToField.Equals(value) != true)) {
                    this.AppliesToField = value;
                    this.RaisePropertyChanged("AppliesTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CaseInvolvedNameID {
            get {
                return this.CaseInvolvedNameIDField;
            }
            set {
                if ((this.CaseInvolvedNameIDField.Equals(value) != true)) {
                    this.CaseInvolvedNameIDField = value;
                    this.RaisePropertyChanged("CaseInvolvedNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseInvolvedNameIDIsChanged {
            get {
                return this.CaseInvolvedNameIDIsChangedField;
            }
            set {
                if ((this.CaseInvolvedNameIDIsChangedField.Equals(value) != true)) {
                    this.CaseInvolvedNameIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseInvolvedNameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CaseNotification {
            get {
                return this.CaseNotificationField;
            }
            set {
                if ((this.CaseNotificationField.Equals(value) != true)) {
                    this.CaseNotificationField = value;
                    this.RaisePropertyChanged("CaseNotification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsChanged {
            get {
                return this.DateIsChangedField;
            }
            set {
                if ((this.DateIsChangedField.Equals(value) != true)) {
                    this.DateIsChangedField = value;
                    this.RaisePropertyChanged("DateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Email {
            get {
                return this.EmailField;
            }
            set {
                if ((this.EmailField.Equals(value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailIsChanged {
            get {
                return this.EmailIsChangedField;
            }
            set {
                if ((this.EmailIsChangedField.Equals(value) != true)) {
                    this.EmailIsChangedField = value;
                    this.RaisePropertyChanged("EmailIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventIDIsChanged {
            get {
                return this.EventIDIsChangedField;
            }
            set {
                if ((this.EventIDIsChangedField.Equals(value) != true)) {
                    this.EventIDIsChangedField = value;
                    this.RaisePropertyChanged("EventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag1 {
            get {
                return this.Flag1Field;
            }
            set {
                if ((this.Flag1Field.Equals(value) != true)) {
                    this.Flag1Field = value;
                    this.RaisePropertyChanged("Flag1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag1IsChanged {
            get {
                return this.Flag1IsChangedField;
            }
            set {
                if ((this.Flag1IsChangedField.Equals(value) != true)) {
                    this.Flag1IsChangedField = value;
                    this.RaisePropertyChanged("Flag1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag2 {
            get {
                return this.Flag2Field;
            }
            set {
                if ((this.Flag2Field.Equals(value) != true)) {
                    this.Flag2Field = value;
                    this.RaisePropertyChanged("Flag2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag2IsChanged {
            get {
                return this.Flag2IsChangedField;
            }
            set {
                if ((this.Flag2IsChangedField.Equals(value) != true)) {
                    this.Flag2IsChangedField = value;
                    this.RaisePropertyChanged("Flag2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag3 {
            get {
                return this.Flag3Field;
            }
            set {
                if ((this.Flag3Field.Equals(value) != true)) {
                    this.Flag3Field = value;
                    this.RaisePropertyChanged("Flag3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag3IsChanged {
            get {
                return this.Flag3IsChangedField;
            }
            set {
                if ((this.Flag3IsChangedField.Equals(value) != true)) {
                    this.Flag3IsChangedField = value;
                    this.RaisePropertyChanged("Flag3IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag4 {
            get {
                return this.Flag4Field;
            }
            set {
                if ((this.Flag4Field.Equals(value) != true)) {
                    this.Flag4Field = value;
                    this.RaisePropertyChanged("Flag4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag4IsChanged {
            get {
                return this.Flag4IsChangedField;
            }
            set {
                if ((this.Flag4IsChangedField.Equals(value) != true)) {
                    this.Flag4IsChangedField = value;
                    this.RaisePropertyChanged("Flag4IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag5 {
            get {
                return this.Flag5Field;
            }
            set {
                if ((this.Flag5Field.Equals(value) != true)) {
                    this.Flag5Field = value;
                    this.RaisePropertyChanged("Flag5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag5IsChanged {
            get {
                return this.Flag5IsChangedField;
            }
            set {
                if ((this.Flag5IsChangedField.Equals(value) != true)) {
                    this.Flag5IsChangedField = value;
                    this.RaisePropertyChanged("Flag5IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvolvedPersonName {
            get {
                return this.InvolvedPersonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InvolvedPersonNameField, value) != true)) {
                    this.InvolvedPersonNameField = value;
                    this.RaisePropertyChanged("InvolvedPersonName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvolvedPersonNameIsChanged {
            get {
                return this.InvolvedPersonNameIsChangedField;
            }
            set {
                if ((this.InvolvedPersonNameIsChangedField.Equals(value) != true)) {
                    this.InvolvedPersonNameIsChangedField = value;
                    this.RaisePropertyChanged("InvolvedPersonNameIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Minutes {
            get {
                return this.MinutesField;
            }
            set {
                if ((this.MinutesField.Equals(value) != true)) {
                    this.MinutesField = value;
                    this.RaisePropertyChanged("Minutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MinutesIsChanged {
            get {
                return this.MinutesIsChangedField;
            }
            set {
                if ((this.MinutesIsChangedField.Equals(value) != true)) {
                    this.MinutesIsChangedField = value;
                    this.RaisePropertyChanged("MinutesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NameIDIsChanged {
            get {
                return this.NameIDIsChangedField;
            }
            set {
                if ((this.NameIDIsChangedField.Equals(value) != true)) {
                    this.NameIDIsChangedField = value;
                    this.RaisePropertyChanged("NameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Notify {
            get {
                return this.NotifyField;
            }
            set {
                if ((this.NotifyField.Equals(value) != true)) {
                    this.NotifyField = value;
                    this.RaisePropertyChanged("Notify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotifyIsChanged {
            get {
                return this.NotifyIsChangedField;
            }
            set {
                if ((this.NotifyIsChangedField.Equals(value) != true)) {
                    this.NotifyIsChangedField = value;
                    this.RaisePropertyChanged("NotifyIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Popup {
            get {
                return this.PopupField;
            }
            set {
                if ((this.PopupField.Equals(value) != true)) {
                    this.PopupField = value;
                    this.RaisePropertyChanged("Popup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PopupIsChanged {
            get {
                return this.PopupIsChangedField;
            }
            set {
                if ((this.PopupIsChangedField.Equals(value) != true)) {
                    this.PopupIsChangedField = value;
                    this.RaisePropertyChanged("PopupIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusIsChanged {
            get {
                return this.StatusIsChangedField;
            }
            set {
                if ((this.StatusIsChangedField.Equals(value) != true)) {
                    this.StatusIsChangedField = value;
                    this.RaisePropertyChanged("StatusIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Email", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Email : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveDtIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddressIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDt {
            get {
                return this.ActiveDtField;
            }
            set {
                if ((this.ActiveDtField.Equals(value) != true)) {
                    this.ActiveDtField = value;
                    this.RaisePropertyChanged("ActiveDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ActiveDtIsChanged {
            get {
                return this.ActiveDtIsChangedField;
            }
            set {
                if ((this.ActiveDtIsChangedField.Equals(value) != true)) {
                    this.ActiveDtIsChangedField = value;
                    this.RaisePropertyChanged("ActiveDtIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddressIsChanged {
            get {
                return this.AddressIsChangedField;
            }
            set {
                if ((this.AddressIsChangedField.Equals(value) != true)) {
                    this.AddressIsChangedField = value;
                    this.RaisePropertyChanged("AddressIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameEvent", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class NameEvent : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountFromDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountToDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CategoryCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DaysPastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DurationDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventEndDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.EventInvolvedName> EventInvolvedNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InitiatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InitiatedByIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocalIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocationCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Name NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParentEventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TitleIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountFrom {
            get {
                return this.AmountFromField;
            }
            set {
                if ((this.AmountFromField.Equals(value) != true)) {
                    this.AmountFromField = value;
                    this.RaisePropertyChanged("AmountFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountFromDescription {
            get {
                return this.AmountFromDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountFromDescriptionField, value) != true)) {
                    this.AmountFromDescriptionField = value;
                    this.RaisePropertyChanged("AmountFromDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromDescriptionIsChanged {
            get {
                return this.AmountFromDescriptionIsChangedField;
            }
            set {
                if ((this.AmountFromDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountFromDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromIsChanged {
            get {
                return this.AmountFromIsChangedField;
            }
            set {
                if ((this.AmountFromIsChangedField.Equals(value) != true)) {
                    this.AmountFromIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountTo {
            get {
                return this.AmountToField;
            }
            set {
                if ((this.AmountToField.Equals(value) != true)) {
                    this.AmountToField = value;
                    this.RaisePropertyChanged("AmountTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountToDescription {
            get {
                return this.AmountToDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountToDescriptionField, value) != true)) {
                    this.AmountToDescriptionField = value;
                    this.RaisePropertyChanged("AmountToDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToDescriptionIsChanged {
            get {
                return this.AmountToDescriptionIsChangedField;
            }
            set {
                if ((this.AmountToDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountToDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountToDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToIsChanged {
            get {
                return this.AmountToIsChangedField;
            }
            set {
                if ((this.AmountToIsChangedField.Equals(value) != true)) {
                    this.AmountToIsChangedField = value;
                    this.RaisePropertyChanged("AmountToIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseIDIsChanged {
            get {
                return this.CaseIDIsChangedField;
            }
            set {
                if ((this.CaseIDIsChangedField.Equals(value) != true)) {
                    this.CaseIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseTitle {
            get {
                return this.CaseTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseTitleField, value) != true)) {
                    this.CaseTitleField = value;
                    this.RaisePropertyChanged("CaseTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CategoryCodeIsChanged {
            get {
                return this.CategoryCodeIsChangedField;
            }
            set {
                if ((this.CategoryCodeIsChangedField.Equals(value) != true)) {
                    this.CategoryCodeIsChangedField = value;
                    this.RaisePropertyChanged("CategoryCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeID {
            get {
                return this.ChargeIDField;
            }
            set {
                if ((this.ChargeIDField.Equals(value) != true)) {
                    this.ChargeIDField = value;
                    this.RaisePropertyChanged("ChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeIDIsChanged {
            get {
                return this.ChargeIDIsChangedField;
            }
            set {
                if ((this.ChargeIDIsChangedField.Equals(value) != true)) {
                    this.ChargeIDIsChangedField = value;
                    this.RaisePropertyChanged("ChargeIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency1 {
            get {
                return this.Currency1Field;
            }
            set {
                if ((this.Currency1Field.Equals(value) != true)) {
                    this.Currency1Field = value;
                    this.RaisePropertyChanged("Currency1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency1IsChanged {
            get {
                return this.Currency1IsChangedField;
            }
            set {
                if ((this.Currency1IsChangedField.Equals(value) != true)) {
                    this.Currency1IsChangedField = value;
                    this.RaisePropertyChanged("Currency1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency2 {
            get {
                return this.Currency2Field;
            }
            set {
                if ((this.Currency2Field.Equals(value) != true)) {
                    this.Currency2Field = value;
                    this.RaisePropertyChanged("Currency2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency2IsChanged {
            get {
                return this.Currency2IsChangedField;
            }
            set {
                if ((this.Currency2IsChangedField.Equals(value) != true)) {
                    this.Currency2IsChangedField = value;
                    this.RaisePropertyChanged("Currency2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsChanged {
            get {
                return this.DateIsChangedField;
            }
            set {
                if ((this.DateIsChangedField.Equals(value) != true)) {
                    this.DateIsChangedField = value;
                    this.RaisePropertyChanged("DateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DaysPast {
            get {
                return this.DaysPastField;
            }
            set {
                if ((this.DaysPastField.Equals(value) != true)) {
                    this.DaysPastField = value;
                    this.RaisePropertyChanged("DaysPast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationDescription {
            get {
                return this.DurationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationDescriptionField, value) != true)) {
                    this.DurationDescriptionField = value;
                    this.RaisePropertyChanged("DurationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DurationDescriptionIsChanged {
            get {
                return this.DurationDescriptionIsChangedField;
            }
            set {
                if ((this.DurationDescriptionIsChangedField.Equals(value) != true)) {
                    this.DurationDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("DurationDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventDateIsChanged {
            get {
                return this.EventDateIsChangedField;
            }
            set {
                if ((this.EventDateIsChangedField.Equals(value) != true)) {
                    this.EventDateIsChangedField = value;
                    this.RaisePropertyChanged("EventDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventEndDate {
            get {
                return this.EventEndDateField;
            }
            set {
                if ((this.EventEndDateField.Equals(value) != true)) {
                    this.EventEndDateField = value;
                    this.RaisePropertyChanged("EventEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventEndDateIsChanged {
            get {
                return this.EventEndDateIsChangedField;
            }
            set {
                if ((this.EventEndDateIsChangedField.Equals(value) != true)) {
                    this.EventEndDateIsChangedField = value;
                    this.RaisePropertyChanged("EventEndDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.EventInvolvedName> EventInvolvedNames {
            get {
                return this.EventInvolvedNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.EventInvolvedNamesField, value) != true)) {
                    this.EventInvolvedNamesField = value;
                    this.RaisePropertyChanged("EventInvolvedNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InitiatedBy {
            get {
                return this.InitiatedByField;
            }
            set {
                if ((this.InitiatedByField.Equals(value) != true)) {
                    this.InitiatedByField = value;
                    this.RaisePropertyChanged("InitiatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InitiatedByIsChanged {
            get {
                return this.InitiatedByIsChangedField;
            }
            set {
                if ((this.InitiatedByIsChangedField.Equals(value) != true)) {
                    this.InitiatedByIsChangedField = value;
                    this.RaisePropertyChanged("InitiatedByIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalID {
            get {
                return this.LocalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalIDField, value) != true)) {
                    this.LocalIDField = value;
                    this.RaisePropertyChanged("LocalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LocalIDIsChanged {
            get {
                return this.LocalIDIsChangedField;
            }
            set {
                if ((this.LocalIDIsChangedField.Equals(value) != true)) {
                    this.LocalIDIsChangedField = value;
                    this.RaisePropertyChanged("LocalIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LocationCodeIsChanged {
            get {
                return this.LocationCodeIsChangedField;
            }
            set {
                if ((this.LocationCodeIsChangedField.Equals(value) != true)) {
                    this.LocationCodeIsChangedField = value;
                    this.RaisePropertyChanged("LocationCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Name Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NameIDIsChanged {
            get {
                return this.NameIDIsChangedField;
            }
            set {
                if ((this.NameIDIsChangedField.Equals(value) != true)) {
                    this.NameIDIsChangedField = value;
                    this.RaisePropertyChanged("NameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentEventID {
            get {
                return this.ParentEventIDField;
            }
            set {
                if ((this.ParentEventIDField.Equals(value) != true)) {
                    this.ParentEventIDField = value;
                    this.RaisePropertyChanged("ParentEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ParentEventIDIsChanged {
            get {
                return this.ParentEventIDIsChangedField;
            }
            set {
                if ((this.ParentEventIDIsChangedField.Equals(value) != true)) {
                    this.ParentEventIDIsChangedField = value;
                    this.RaisePropertyChanged("ParentEventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SealedIsChanged {
            get {
                return this.SealedIsChangedField;
            }
            set {
                if ((this.SealedIsChangedField.Equals(value) != true)) {
                    this.SealedIsChangedField = value;
                    this.RaisePropertyChanged("SealedIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TitleIsChanged {
            get {
                return this.TitleIsChangedField;
            }
            set {
                if ((this.TitleIsChangedField.Equals(value) != true)) {
                    this.TitleIsChangedField = value;
                    this.RaisePropertyChanged("TitleIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventInvolvedName", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class EventInvolvedName : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.EventEntityType AppliesToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseInvolvementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CaseNotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag3IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag4IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag5IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvolvedPersonNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvolvementCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvolvementCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvolvementDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MinutesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Name NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> NotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifyIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PopupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PopupIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.EventEntityType AppliesTo {
            get {
                return this.AppliesToField;
            }
            set {
                if ((this.AppliesToField.Equals(value) != true)) {
                    this.AppliesToField = value;
                    this.RaisePropertyChanged("AppliesTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseInvolvement {
            get {
                return this.CaseInvolvementField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseInvolvementField, value) != true)) {
                    this.CaseInvolvementField = value;
                    this.RaisePropertyChanged("CaseInvolvement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CaseNotification {
            get {
                return this.CaseNotificationField;
            }
            set {
                if ((this.CaseNotificationField.Equals(value) != true)) {
                    this.CaseNotificationField = value;
                    this.RaisePropertyChanged("CaseNotification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsChanged {
            get {
                return this.DateIsChangedField;
            }
            set {
                if ((this.DateIsChangedField.Equals(value) != true)) {
                    this.DateIsChangedField = value;
                    this.RaisePropertyChanged("DateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Email {
            get {
                return this.EmailField;
            }
            set {
                if ((this.EmailField.Equals(value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailIsChanged {
            get {
                return this.EmailIsChangedField;
            }
            set {
                if ((this.EmailIsChangedField.Equals(value) != true)) {
                    this.EmailIsChangedField = value;
                    this.RaisePropertyChanged("EmailIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag1 {
            get {
                return this.Flag1Field;
            }
            set {
                if ((this.Flag1Field.Equals(value) != true)) {
                    this.Flag1Field = value;
                    this.RaisePropertyChanged("Flag1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag1IsChanged {
            get {
                return this.Flag1IsChangedField;
            }
            set {
                if ((this.Flag1IsChangedField.Equals(value) != true)) {
                    this.Flag1IsChangedField = value;
                    this.RaisePropertyChanged("Flag1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag2 {
            get {
                return this.Flag2Field;
            }
            set {
                if ((this.Flag2Field.Equals(value) != true)) {
                    this.Flag2Field = value;
                    this.RaisePropertyChanged("Flag2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag2IsChanged {
            get {
                return this.Flag2IsChangedField;
            }
            set {
                if ((this.Flag2IsChangedField.Equals(value) != true)) {
                    this.Flag2IsChangedField = value;
                    this.RaisePropertyChanged("Flag2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag3 {
            get {
                return this.Flag3Field;
            }
            set {
                if ((this.Flag3Field.Equals(value) != true)) {
                    this.Flag3Field = value;
                    this.RaisePropertyChanged("Flag3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag3IsChanged {
            get {
                return this.Flag3IsChangedField;
            }
            set {
                if ((this.Flag3IsChangedField.Equals(value) != true)) {
                    this.Flag3IsChangedField = value;
                    this.RaisePropertyChanged("Flag3IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag4 {
            get {
                return this.Flag4Field;
            }
            set {
                if ((this.Flag4Field.Equals(value) != true)) {
                    this.Flag4Field = value;
                    this.RaisePropertyChanged("Flag4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag4IsChanged {
            get {
                return this.Flag4IsChangedField;
            }
            set {
                if ((this.Flag4IsChangedField.Equals(value) != true)) {
                    this.Flag4IsChangedField = value;
                    this.RaisePropertyChanged("Flag4IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag5 {
            get {
                return this.Flag5Field;
            }
            set {
                if ((this.Flag5Field.Equals(value) != true)) {
                    this.Flag5Field = value;
                    this.RaisePropertyChanged("Flag5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag5IsChanged {
            get {
                return this.Flag5IsChangedField;
            }
            set {
                if ((this.Flag5IsChangedField.Equals(value) != true)) {
                    this.Flag5IsChangedField = value;
                    this.RaisePropertyChanged("Flag5IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvolvedPersonName {
            get {
                return this.InvolvedPersonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InvolvedPersonNameField, value) != true)) {
                    this.InvolvedPersonNameField = value;
                    this.RaisePropertyChanged("InvolvedPersonName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvolvementCode {
            get {
                return this.InvolvementCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvolvementCodeField, value) != true)) {
                    this.InvolvementCodeField = value;
                    this.RaisePropertyChanged("InvolvementCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvolvementCodeIsChanged {
            get {
                return this.InvolvementCodeIsChangedField;
            }
            set {
                if ((this.InvolvementCodeIsChangedField.Equals(value) != true)) {
                    this.InvolvementCodeIsChangedField = value;
                    this.RaisePropertyChanged("InvolvementCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvolvementDescription {
            get {
                return this.InvolvementDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InvolvementDescriptionField, value) != true)) {
                    this.InvolvementDescriptionField = value;
                    this.RaisePropertyChanged("InvolvementDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Minutes {
            get {
                return this.MinutesField;
            }
            set {
                if ((this.MinutesField.Equals(value) != true)) {
                    this.MinutesField = value;
                    this.RaisePropertyChanged("Minutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MinutesIsChanged {
            get {
                return this.MinutesIsChangedField;
            }
            set {
                if ((this.MinutesIsChangedField.Equals(value) != true)) {
                    this.MinutesIsChangedField = value;
                    this.RaisePropertyChanged("MinutesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Name Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Notify {
            get {
                return this.NotifyField;
            }
            set {
                if ((this.NotifyField.Equals(value) != true)) {
                    this.NotifyField = value;
                    this.RaisePropertyChanged("Notify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotifyIsChanged {
            get {
                return this.NotifyIsChangedField;
            }
            set {
                if ((this.NotifyIsChangedField.Equals(value) != true)) {
                    this.NotifyIsChangedField = value;
                    this.RaisePropertyChanged("NotifyIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Popup {
            get {
                return this.PopupField;
            }
            set {
                if ((this.PopupField.Equals(value) != true)) {
                    this.PopupField = value;
                    this.RaisePropertyChanged("Popup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PopupIsChanged {
            get {
                return this.PopupIsChangedField;
            }
            set {
                if ((this.PopupIsChangedField.Equals(value) != true)) {
                    this.PopupIsChangedField = value;
                    this.RaisePropertyChanged("PopupIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameDocument", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class NameDocument : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CategoryCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EventMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FileNameIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FileSizeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocationCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> LockTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LockedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockedByDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockedByIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Name NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParentEventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PriorityIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CategoryCodeIsChanged {
            get {
                return this.CategoryCodeIsChangedField;
            }
            set {
                if ((this.CategoryCodeIsChangedField.Equals(value) != true)) {
                    this.CategoryCodeIsChangedField = value;
                    this.RaisePropertyChanged("CategoryCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency1 {
            get {
                return this.Currency1Field;
            }
            set {
                if ((this.Currency1Field.Equals(value) != true)) {
                    this.Currency1Field = value;
                    this.RaisePropertyChanged("Currency1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency1IsChanged {
            get {
                return this.Currency1IsChangedField;
            }
            set {
                if ((this.Currency1IsChangedField.Equals(value) != true)) {
                    this.Currency1IsChangedField = value;
                    this.RaisePropertyChanged("Currency1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency2 {
            get {
                return this.Currency2Field;
            }
            set {
                if ((this.Currency2Field.Equals(value) != true)) {
                    this.Currency2Field = value;
                    this.RaisePropertyChanged("Currency2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency2IsChanged {
            get {
                return this.Currency2IsChangedField;
            }
            set {
                if ((this.Currency2IsChangedField.Equals(value) != true)) {
                    this.Currency2IsChangedField = value;
                    this.RaisePropertyChanged("Currency2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsChanged {
            get {
                return this.DateIsChangedField;
            }
            set {
                if ((this.DateIsChangedField.Equals(value) != true)) {
                    this.DateIsChangedField = value;
                    this.RaisePropertyChanged("DateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EventMasterCode {
            get {
                return this.EventMasterCodeField;
            }
            set {
                if ((this.EventMasterCodeField.Equals(value) != true)) {
                    this.EventMasterCodeField = value;
                    this.RaisePropertyChanged("EventMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FileNameIsChanged {
            get {
                return this.FileNameIsChangedField;
            }
            set {
                if ((this.FileNameIsChangedField.Equals(value) != true)) {
                    this.FileNameIsChangedField = value;
                    this.RaisePropertyChanged("FileNameIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((this.FileSizeField.Equals(value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FileSizeIsChanged {
            get {
                return this.FileSizeIsChangedField;
            }
            set {
                if ((this.FileSizeIsChangedField.Equals(value) != true)) {
                    this.FileSizeIsChangedField = value;
                    this.RaisePropertyChanged("FileSizeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LocationCodeIsChanged {
            get {
                return this.LocationCodeIsChangedField;
            }
            set {
                if ((this.LocationCodeIsChangedField.Equals(value) != true)) {
                    this.LocationCodeIsChangedField = value;
                    this.RaisePropertyChanged("LocationCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> LockType {
            get {
                return this.LockTypeField;
            }
            set {
                if ((this.LockTypeField.Equals(value) != true)) {
                    this.LockTypeField = value;
                    this.RaisePropertyChanged("LockType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LockedBy {
            get {
                return this.LockedByField;
            }
            set {
                if ((this.LockedByField.Equals(value) != true)) {
                    this.LockedByField = value;
                    this.RaisePropertyChanged("LockedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedByDescription {
            get {
                return this.LockedByDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedByDescriptionField, value) != true)) {
                    this.LockedByDescriptionField = value;
                    this.RaisePropertyChanged("LockedByDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockedByIsChanged {
            get {
                return this.LockedByIsChangedField;
            }
            set {
                if ((this.LockedByIsChangedField.Equals(value) != true)) {
                    this.LockedByIsChangedField = value;
                    this.RaisePropertyChanged("LockedByIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Name Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentEventID {
            get {
                return this.ParentEventIDField;
            }
            set {
                if ((this.ParentEventIDField.Equals(value) != true)) {
                    this.ParentEventIDField = value;
                    this.RaisePropertyChanged("ParentEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ParentEventIDIsChanged {
            get {
                return this.ParentEventIDIsChangedField;
            }
            set {
                if ((this.ParentEventIDIsChangedField.Equals(value) != true)) {
                    this.ParentEventIDIsChangedField = value;
                    this.RaisePropertyChanged("ParentEventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PriorityIsChanged {
            get {
                return this.PriorityIsChangedField;
            }
            set {
                if ((this.PriorityIsChangedField.Equals(value) != true)) {
                    this.PriorityIsChangedField = value;
                    this.RaisePropertyChanged("PriorityIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SealedIsChanged {
            get {
                return this.SealedIsChangedField;
            }
            set {
                if ((this.SealedIsChangedField.Equals(value) != true)) {
                    this.SealedIsChangedField = value;
                    this.RaisePropertyChanged("SealedIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameNonCollectableFinancial", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class NameNonCollectableFinancial : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountFromDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountToDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CategoryCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DurationDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EventCodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventEndDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EventMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InitiatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InitiatedByIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocationCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Name NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCollectableFinancialInvolvedName> NonCollectableFinancialInvolvedNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParentEventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PriorityIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TitleIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountFrom {
            get {
                return this.AmountFromField;
            }
            set {
                if ((this.AmountFromField.Equals(value) != true)) {
                    this.AmountFromField = value;
                    this.RaisePropertyChanged("AmountFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountFromDescription {
            get {
                return this.AmountFromDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountFromDescriptionField, value) != true)) {
                    this.AmountFromDescriptionField = value;
                    this.RaisePropertyChanged("AmountFromDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromDescriptionIsChanged {
            get {
                return this.AmountFromDescriptionIsChangedField;
            }
            set {
                if ((this.AmountFromDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountFromDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromIsChanged {
            get {
                return this.AmountFromIsChangedField;
            }
            set {
                if ((this.AmountFromIsChangedField.Equals(value) != true)) {
                    this.AmountFromIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountTo {
            get {
                return this.AmountToField;
            }
            set {
                if ((this.AmountToField.Equals(value) != true)) {
                    this.AmountToField = value;
                    this.RaisePropertyChanged("AmountTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountToDescription {
            get {
                return this.AmountToDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountToDescriptionField, value) != true)) {
                    this.AmountToDescriptionField = value;
                    this.RaisePropertyChanged("AmountToDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToDescriptionIsChanged {
            get {
                return this.AmountToDescriptionIsChangedField;
            }
            set {
                if ((this.AmountToDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountToDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountToDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToIsChanged {
            get {
                return this.AmountToIsChangedField;
            }
            set {
                if ((this.AmountToIsChangedField.Equals(value) != true)) {
                    this.AmountToIsChangedField = value;
                    this.RaisePropertyChanged("AmountToIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseIDIsChanged {
            get {
                return this.CaseIDIsChangedField;
            }
            set {
                if ((this.CaseIDIsChangedField.Equals(value) != true)) {
                    this.CaseIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CategoryCodeIsChanged {
            get {
                return this.CategoryCodeIsChangedField;
            }
            set {
                if ((this.CategoryCodeIsChangedField.Equals(value) != true)) {
                    this.CategoryCodeIsChangedField = value;
                    this.RaisePropertyChanged("CategoryCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeID {
            get {
                return this.ChargeIDField;
            }
            set {
                if ((this.ChargeIDField.Equals(value) != true)) {
                    this.ChargeIDField = value;
                    this.RaisePropertyChanged("ChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeIDIsChanged {
            get {
                return this.ChargeIDIsChangedField;
            }
            set {
                if ((this.ChargeIDIsChangedField.Equals(value) != true)) {
                    this.ChargeIDIsChangedField = value;
                    this.RaisePropertyChanged("ChargeIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency1 {
            get {
                return this.Currency1Field;
            }
            set {
                if ((this.Currency1Field.Equals(value) != true)) {
                    this.Currency1Field = value;
                    this.RaisePropertyChanged("Currency1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency1IsChanged {
            get {
                return this.Currency1IsChangedField;
            }
            set {
                if ((this.Currency1IsChangedField.Equals(value) != true)) {
                    this.Currency1IsChangedField = value;
                    this.RaisePropertyChanged("Currency1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency2 {
            get {
                return this.Currency2Field;
            }
            set {
                if ((this.Currency2Field.Equals(value) != true)) {
                    this.Currency2Field = value;
                    this.RaisePropertyChanged("Currency2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency2IsChanged {
            get {
                return this.Currency2IsChangedField;
            }
            set {
                if ((this.Currency2IsChangedField.Equals(value) != true)) {
                    this.Currency2IsChangedField = value;
                    this.RaisePropertyChanged("Currency2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsChanged {
            get {
                return this.DateIsChangedField;
            }
            set {
                if ((this.DateIsChangedField.Equals(value) != true)) {
                    this.DateIsChangedField = value;
                    this.RaisePropertyChanged("DateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationDescription {
            get {
                return this.DurationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationDescriptionField, value) != true)) {
                    this.DurationDescriptionField = value;
                    this.RaisePropertyChanged("DurationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DurationDescriptionIsChanged {
            get {
                return this.DurationDescriptionIsChangedField;
            }
            set {
                if ((this.DurationDescriptionIsChangedField.Equals(value) != true)) {
                    this.DurationDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("DurationDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EventCodeType {
            get {
                return this.EventCodeTypeField;
            }
            set {
                if ((this.EventCodeTypeField.Equals(value) != true)) {
                    this.EventCodeTypeField = value;
                    this.RaisePropertyChanged("EventCodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventDateIsChanged {
            get {
                return this.EventDateIsChangedField;
            }
            set {
                if ((this.EventDateIsChangedField.Equals(value) != true)) {
                    this.EventDateIsChangedField = value;
                    this.RaisePropertyChanged("EventDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventDescription {
            get {
                return this.EventDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EventDescriptionField, value) != true)) {
                    this.EventDescriptionField = value;
                    this.RaisePropertyChanged("EventDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventEndDate {
            get {
                return this.EventEndDateField;
            }
            set {
                if ((this.EventEndDateField.Equals(value) != true)) {
                    this.EventEndDateField = value;
                    this.RaisePropertyChanged("EventEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventEndDateIsChanged {
            get {
                return this.EventEndDateIsChangedField;
            }
            set {
                if ((this.EventEndDateIsChangedField.Equals(value) != true)) {
                    this.EventEndDateIsChangedField = value;
                    this.RaisePropertyChanged("EventEndDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EventMasterCode {
            get {
                return this.EventMasterCodeField;
            }
            set {
                if ((this.EventMasterCodeField.Equals(value) != true)) {
                    this.EventMasterCodeField = value;
                    this.RaisePropertyChanged("EventMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InitiatedBy {
            get {
                return this.InitiatedByField;
            }
            set {
                if ((this.InitiatedByField.Equals(value) != true)) {
                    this.InitiatedByField = value;
                    this.RaisePropertyChanged("InitiatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InitiatedByIsChanged {
            get {
                return this.InitiatedByIsChangedField;
            }
            set {
                if ((this.InitiatedByIsChangedField.Equals(value) != true)) {
                    this.InitiatedByIsChangedField = value;
                    this.RaisePropertyChanged("InitiatedByIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LocationCodeIsChanged {
            get {
                return this.LocationCodeIsChangedField;
            }
            set {
                if ((this.LocationCodeIsChangedField.Equals(value) != true)) {
                    this.LocationCodeIsChangedField = value;
                    this.RaisePropertyChanged("LocationCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Name Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NameIDIsChanged {
            get {
                return this.NameIDIsChangedField;
            }
            set {
                if ((this.NameIDIsChangedField.Equals(value) != true)) {
                    this.NameIDIsChangedField = value;
                    this.RaisePropertyChanged("NameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCollectableFinancialInvolvedName> NonCollectableFinancialInvolvedNames {
            get {
                return this.NonCollectableFinancialInvolvedNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NonCollectableFinancialInvolvedNamesField, value) != true)) {
                    this.NonCollectableFinancialInvolvedNamesField = value;
                    this.RaisePropertyChanged("NonCollectableFinancialInvolvedNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentEventID {
            get {
                return this.ParentEventIDField;
            }
            set {
                if ((this.ParentEventIDField.Equals(value) != true)) {
                    this.ParentEventIDField = value;
                    this.RaisePropertyChanged("ParentEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ParentEventIDIsChanged {
            get {
                return this.ParentEventIDIsChangedField;
            }
            set {
                if ((this.ParentEventIDIsChangedField.Equals(value) != true)) {
                    this.ParentEventIDIsChangedField = value;
                    this.RaisePropertyChanged("ParentEventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PriorityIsChanged {
            get {
                return this.PriorityIsChangedField;
            }
            set {
                if ((this.PriorityIsChangedField.Equals(value) != true)) {
                    this.PriorityIsChangedField = value;
                    this.RaisePropertyChanged("PriorityIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatusMasterCode {
            get {
                return this.StatusMasterCodeField;
            }
            set {
                if ((this.StatusMasterCodeField.Equals(value) != true)) {
                    this.StatusMasterCodeField = value;
                    this.RaisePropertyChanged("StatusMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TitleIsChanged {
            get {
                return this.TitleIsChangedField;
            }
            set {
                if ((this.TitleIsChangedField.Equals(value) != true)) {
                    this.TitleIsChangedField = value;
                    this.RaisePropertyChanged("TitleIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NonCollectableFinancialInvolvedName", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class NonCollectableFinancialInvolvedName : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.EventEntityType AppliesToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag3IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag4IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag5IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvolvementCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvolvementCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> NotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifyIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.EventEntityType AppliesTo {
            get {
                return this.AppliesToField;
            }
            set {
                if ((this.AppliesToField.Equals(value) != true)) {
                    this.AppliesToField = value;
                    this.RaisePropertyChanged("AppliesTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsChanged {
            get {
                return this.DateIsChangedField;
            }
            set {
                if ((this.DateIsChangedField.Equals(value) != true)) {
                    this.DateIsChangedField = value;
                    this.RaisePropertyChanged("DateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventIDIsChanged {
            get {
                return this.EventIDIsChangedField;
            }
            set {
                if ((this.EventIDIsChangedField.Equals(value) != true)) {
                    this.EventIDIsChangedField = value;
                    this.RaisePropertyChanged("EventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag1 {
            get {
                return this.Flag1Field;
            }
            set {
                if ((this.Flag1Field.Equals(value) != true)) {
                    this.Flag1Field = value;
                    this.RaisePropertyChanged("Flag1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag1IsChanged {
            get {
                return this.Flag1IsChangedField;
            }
            set {
                if ((this.Flag1IsChangedField.Equals(value) != true)) {
                    this.Flag1IsChangedField = value;
                    this.RaisePropertyChanged("Flag1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag2 {
            get {
                return this.Flag2Field;
            }
            set {
                if ((this.Flag2Field.Equals(value) != true)) {
                    this.Flag2Field = value;
                    this.RaisePropertyChanged("Flag2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag2IsChanged {
            get {
                return this.Flag2IsChangedField;
            }
            set {
                if ((this.Flag2IsChangedField.Equals(value) != true)) {
                    this.Flag2IsChangedField = value;
                    this.RaisePropertyChanged("Flag2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag3 {
            get {
                return this.Flag3Field;
            }
            set {
                if ((this.Flag3Field.Equals(value) != true)) {
                    this.Flag3Field = value;
                    this.RaisePropertyChanged("Flag3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag3IsChanged {
            get {
                return this.Flag3IsChangedField;
            }
            set {
                if ((this.Flag3IsChangedField.Equals(value) != true)) {
                    this.Flag3IsChangedField = value;
                    this.RaisePropertyChanged("Flag3IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag4 {
            get {
                return this.Flag4Field;
            }
            set {
                if ((this.Flag4Field.Equals(value) != true)) {
                    this.Flag4Field = value;
                    this.RaisePropertyChanged("Flag4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag4IsChanged {
            get {
                return this.Flag4IsChangedField;
            }
            set {
                if ((this.Flag4IsChangedField.Equals(value) != true)) {
                    this.Flag4IsChangedField = value;
                    this.RaisePropertyChanged("Flag4IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag5 {
            get {
                return this.Flag5Field;
            }
            set {
                if ((this.Flag5Field.Equals(value) != true)) {
                    this.Flag5Field = value;
                    this.RaisePropertyChanged("Flag5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag5IsChanged {
            get {
                return this.Flag5IsChangedField;
            }
            set {
                if ((this.Flag5IsChangedField.Equals(value) != true)) {
                    this.Flag5IsChangedField = value;
                    this.RaisePropertyChanged("Flag5IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvolvementCode {
            get {
                return this.InvolvementCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvolvementCodeField, value) != true)) {
                    this.InvolvementCodeField = value;
                    this.RaisePropertyChanged("InvolvementCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvolvementCodeIsChanged {
            get {
                return this.InvolvementCodeIsChangedField;
            }
            set {
                if ((this.InvolvementCodeIsChangedField.Equals(value) != true)) {
                    this.InvolvementCodeIsChangedField = value;
                    this.RaisePropertyChanged("InvolvementCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NameIDIsChanged {
            get {
                return this.NameIDIsChangedField;
            }
            set {
                if ((this.NameIDIsChangedField.Equals(value) != true)) {
                    this.NameIDIsChangedField = value;
                    this.RaisePropertyChanged("NameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Notify {
            get {
                return this.NotifyField;
            }
            set {
                if ((this.NotifyField.Equals(value) != true)) {
                    this.NotifyField = value;
                    this.RaisePropertyChanged("Notify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotifyIsChanged {
            get {
                return this.NotifyIsChangedField;
            }
            set {
                if ((this.NotifyIsChangedField.Equals(value) != true)) {
                    this.NotifyIsChangedField = value;
                    this.RaisePropertyChanged("NotifyIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NonCasePayment", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class NonCasePayment : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Name NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCasePaymentItem> NonCasePaymentItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReceivedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReferenceNumberIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Transfer> TransfersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyCode {
            get {
                return this.AgencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyCodeField, value) != true)) {
                    this.AgencyCodeField = value;
                    this.RaisePropertyChanged("AgencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Name Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCasePaymentItem> NonCasePaymentItems {
            get {
                return this.NonCasePaymentItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.NonCasePaymentItemsField, value) != true)) {
                    this.NonCasePaymentItemsField = value;
                    this.RaisePropertyChanged("NonCasePaymentItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiptNumber {
            get {
                return this.ReceiptNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptNumberField, value) != true)) {
                    this.ReceiptNumberField = value;
                    this.RaisePropertyChanged("ReceiptNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReceivedBy {
            get {
                return this.ReceivedByField;
            }
            set {
                if ((this.ReceivedByField.Equals(value) != true)) {
                    this.ReceivedByField = value;
                    this.RaisePropertyChanged("ReceivedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceNumber {
            get {
                return this.ReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceNumberField, value) != true)) {
                    this.ReferenceNumberField = value;
                    this.RaisePropertyChanged("ReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReferenceNumberIsChanged {
            get {
                return this.ReferenceNumberIsChangedField;
            }
            set {
                if ((this.ReferenceNumberIsChangedField.Equals(value) != true)) {
                    this.ReferenceNumberIsChangedField = value;
                    this.RaisePropertyChanged("ReferenceNumberIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Transfer> Transfers {
            get {
                return this.TransfersField;
            }
            set {
                if ((object.ReferenceEquals(this.TransfersField, value) != true)) {
                    this.TransfersField = value;
                    this.RaisePropertyChanged("Transfers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NonCasePaymentItem", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class NonCasePaymentItem : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NameObligationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.NonCasePayment NonCasePaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NonCasePaymentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PricePerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Transfer> TransfersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NameObligationID {
            get {
                return this.NameObligationIDField;
            }
            set {
                if ((this.NameObligationIDField.Equals(value) != true)) {
                    this.NameObligationIDField = value;
                    this.RaisePropertyChanged("NameObligationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.NonCasePayment NonCasePayment {
            get {
                return this.NonCasePaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.NonCasePaymentField, value) != true)) {
                    this.NonCasePaymentField = value;
                    this.RaisePropertyChanged("NonCasePayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NonCasePaymentID {
            get {
                return this.NonCasePaymentIDField;
            }
            set {
                if ((this.NonCasePaymentIDField.Equals(value) != true)) {
                    this.NonCasePaymentIDField = value;
                    this.RaisePropertyChanged("NonCasePaymentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PricePerUnit {
            get {
                return this.PricePerUnitField;
            }
            set {
                if ((this.PricePerUnitField.Equals(value) != true)) {
                    this.PricePerUnitField = value;
                    this.RaisePropertyChanged("PricePerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Transfer> Transfers {
            get {
                return this.TransfersField;
            }
            set {
                if ((object.ReferenceEquals(this.TransfersField, value) != true)) {
                    this.TransfersField = value;
                    this.RaisePropertyChanged("Transfers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transfer", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Transfer : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForCaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.NonCasePayment NonCasePaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.NonCasePaymentItem NonCasePaymentItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NonCasePaymentItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Obligation ObligationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ObligationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Payment PaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PaymentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte VoidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForCaseID {
            get {
                return this.ForCaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ForCaseIDField, value) != true)) {
                    this.ForCaseIDField = value;
                    this.RaisePropertyChanged("ForCaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.NonCasePayment NonCasePayment {
            get {
                return this.NonCasePaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.NonCasePaymentField, value) != true)) {
                    this.NonCasePaymentField = value;
                    this.RaisePropertyChanged("NonCasePayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.NonCasePaymentItem NonCasePaymentItem {
            get {
                return this.NonCasePaymentItemField;
            }
            set {
                if ((object.ReferenceEquals(this.NonCasePaymentItemField, value) != true)) {
                    this.NonCasePaymentItemField = value;
                    this.RaisePropertyChanged("NonCasePaymentItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NonCasePaymentItemID {
            get {
                return this.NonCasePaymentItemIDField;
            }
            set {
                if ((this.NonCasePaymentItemIDField.Equals(value) != true)) {
                    this.NonCasePaymentItemIDField = value;
                    this.RaisePropertyChanged("NonCasePaymentItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Obligation Obligation {
            get {
                return this.ObligationField;
            }
            set {
                if ((object.ReferenceEquals(this.ObligationField, value) != true)) {
                    this.ObligationField = value;
                    this.RaisePropertyChanged("Obligation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ObligationID {
            get {
                return this.ObligationIDField;
            }
            set {
                if ((this.ObligationIDField.Equals(value) != true)) {
                    this.ObligationIDField = value;
                    this.RaisePropertyChanged("ObligationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Payment Payment {
            get {
                return this.PaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentField, value) != true)) {
                    this.PaymentField = value;
                    this.RaisePropertyChanged("Payment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PaymentID {
            get {
                return this.PaymentIDField;
            }
            set {
                if ((this.PaymentIDField.Equals(value) != true)) {
                    this.PaymentIDField = value;
                    this.RaisePropertyChanged("PaymentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiptNumber {
            get {
                return this.ReceiptNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptNumberField, value) != true)) {
                    this.ReceiptNumberField = value;
                    this.RaisePropertyChanged("ReceiptNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferType {
            get {
                return this.TransferTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferTypeField, value) != true)) {
                    this.TransferTypeField = value;
                    this.RaisePropertyChanged("TransferType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Void {
            get {
                return this.VoidField;
            }
            set {
                if ((this.VoidField.Equals(value) != true)) {
                    this.VoidField = value;
                    this.RaisePropertyChanged("Void");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Obligation", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Obligation : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccountNumberIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AgencyCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BankIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Case CaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.ChargeInvolvedName ChargeInvolvedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeInvolvedNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeInvolvedNameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateDueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateDueIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateReceivedIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateWrittenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateWrittenIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FromAccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FromAccountIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsJointAndSeveralField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParentIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PayeeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReferenceNumberIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoutingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RoutingNumberIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToAccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ToAccountIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Transfer> TransfersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnallocAmountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccountNumberIsChanged {
            get {
                return this.AccountNumberIsChangedField;
            }
            set {
                if ((this.AccountNumberIsChangedField.Equals(value) != true)) {
                    this.AccountNumberIsChangedField = value;
                    this.RaisePropertyChanged("AccountNumberIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyCode {
            get {
                return this.AgencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyCodeField, value) != true)) {
                    this.AgencyCodeField = value;
                    this.RaisePropertyChanged("AgencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AgencyCodeIsChanged {
            get {
                return this.AgencyCodeIsChangedField;
            }
            set {
                if ((this.AgencyCodeIsChangedField.Equals(value) != true)) {
                    this.AgencyCodeIsChangedField = value;
                    this.RaisePropertyChanged("AgencyCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyDescription {
            get {
                return this.AgencyDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyDescriptionField, value) != true)) {
                    this.AgencyDescriptionField = value;
                    this.RaisePropertyChanged("AgencyDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountIsChanged {
            get {
                return this.AmountIsChangedField;
            }
            set {
                if ((this.AmountIsChangedField.Equals(value) != true)) {
                    this.AmountIsChangedField = value;
                    this.RaisePropertyChanged("AmountIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Bank {
            get {
                return this.BankField;
            }
            set {
                if ((this.BankField.Equals(value) != true)) {
                    this.BankField = value;
                    this.RaisePropertyChanged("Bank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BankIsChanged {
            get {
                return this.BankIsChangedField;
            }
            set {
                if ((this.BankIsChangedField.Equals(value) != true)) {
                    this.BankIsChangedField = value;
                    this.RaisePropertyChanged("BankIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Case Case {
            get {
                return this.CaseField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseField, value) != true)) {
                    this.CaseField = value;
                    this.RaisePropertyChanged("Case");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseIDIsChanged {
            get {
                return this.CaseIDIsChangedField;
            }
            set {
                if ((this.CaseIDIsChangedField.Equals(value) != true)) {
                    this.CaseIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.ChargeInvolvedName ChargeInvolvedName {
            get {
                return this.ChargeInvolvedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeInvolvedNameField, value) != true)) {
                    this.ChargeInvolvedNameField = value;
                    this.RaisePropertyChanged("ChargeInvolvedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeInvolvedNameID {
            get {
                return this.ChargeInvolvedNameIDField;
            }
            set {
                if ((this.ChargeInvolvedNameIDField.Equals(value) != true)) {
                    this.ChargeInvolvedNameIDField = value;
                    this.RaisePropertyChanged("ChargeInvolvedNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeInvolvedNameIDIsChanged {
            get {
                return this.ChargeInvolvedNameIDIsChangedField;
            }
            set {
                if ((this.ChargeInvolvedNameIDIsChangedField.Equals(value) != true)) {
                    this.ChargeInvolvedNameIDIsChangedField = value;
                    this.RaisePropertyChanged("ChargeInvolvedNameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateDue {
            get {
                return this.DateDueField;
            }
            set {
                if ((this.DateDueField.Equals(value) != true)) {
                    this.DateDueField = value;
                    this.RaisePropertyChanged("DateDue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateDueIsChanged {
            get {
                return this.DateDueIsChangedField;
            }
            set {
                if ((this.DateDueIsChangedField.Equals(value) != true)) {
                    this.DateDueIsChangedField = value;
                    this.RaisePropertyChanged("DateDueIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateReceived {
            get {
                return this.DateReceivedField;
            }
            set {
                if ((this.DateReceivedField.Equals(value) != true)) {
                    this.DateReceivedField = value;
                    this.RaisePropertyChanged("DateReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateReceivedIsChanged {
            get {
                return this.DateReceivedIsChangedField;
            }
            set {
                if ((this.DateReceivedIsChangedField.Equals(value) != true)) {
                    this.DateReceivedIsChangedField = value;
                    this.RaisePropertyChanged("DateReceivedIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateWritten {
            get {
                return this.DateWrittenField;
            }
            set {
                if ((this.DateWrittenField.Equals(value) != true)) {
                    this.DateWrittenField = value;
                    this.RaisePropertyChanged("DateWritten");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateWrittenIsChanged {
            get {
                return this.DateWrittenIsChangedField;
            }
            set {
                if ((this.DateWrittenIsChangedField.Equals(value) != true)) {
                    this.DateWrittenIsChangedField = value;
                    this.RaisePropertyChanged("DateWrittenIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FromAccountID {
            get {
                return this.FromAccountIDField;
            }
            set {
                if ((this.FromAccountIDField.Equals(value) != true)) {
                    this.FromAccountIDField = value;
                    this.RaisePropertyChanged("FromAccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FromAccountIDIsChanged {
            get {
                return this.FromAccountIDIsChangedField;
            }
            set {
                if ((this.FromAccountIDIsChangedField.Equals(value) != true)) {
                    this.FromAccountIDIsChangedField = value;
                    this.RaisePropertyChanged("FromAccountIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsJointAndSeveral {
            get {
                return this.IsJointAndSeveralField;
            }
            set {
                if ((this.IsJointAndSeveralField.Equals(value) != true)) {
                    this.IsJointAndSeveralField = value;
                    this.RaisePropertyChanged("IsJointAndSeveral");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ParentIDIsChanged {
            get {
                return this.ParentIDIsChangedField;
            }
            set {
                if ((this.ParentIDIsChangedField.Equals(value) != true)) {
                    this.ParentIDIsChangedField = value;
                    this.RaisePropertyChanged("ParentIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Payee {
            get {
                return this.PayeeField;
            }
            set {
                if ((this.PayeeField.Equals(value) != true)) {
                    this.PayeeField = value;
                    this.RaisePropertyChanged("Payee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PayeeIsChanged {
            get {
                return this.PayeeIsChangedField;
            }
            set {
                if ((this.PayeeIsChangedField.Equals(value) != true)) {
                    this.PayeeIsChangedField = value;
                    this.RaisePropertyChanged("PayeeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceNumber {
            get {
                return this.ReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceNumberField, value) != true)) {
                    this.ReferenceNumberField = value;
                    this.RaisePropertyChanged("ReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReferenceNumberIsChanged {
            get {
                return this.ReferenceNumberIsChangedField;
            }
            set {
                if ((this.ReferenceNumberIsChangedField.Equals(value) != true)) {
                    this.ReferenceNumberIsChangedField = value;
                    this.RaisePropertyChanged("ReferenceNumberIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoutingNumber {
            get {
                return this.RoutingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RoutingNumberField, value) != true)) {
                    this.RoutingNumberField = value;
                    this.RaisePropertyChanged("RoutingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RoutingNumberIsChanged {
            get {
                return this.RoutingNumberIsChangedField;
            }
            set {
                if ((this.RoutingNumberIsChangedField.Equals(value) != true)) {
                    this.RoutingNumberIsChangedField = value;
                    this.RaisePropertyChanged("RoutingNumberIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToAccountID {
            get {
                return this.ToAccountIDField;
            }
            set {
                if ((this.ToAccountIDField.Equals(value) != true)) {
                    this.ToAccountIDField = value;
                    this.RaisePropertyChanged("ToAccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ToAccountIDIsChanged {
            get {
                return this.ToAccountIDIsChangedField;
            }
            set {
                if ((this.ToAccountIDIsChangedField.Equals(value) != true)) {
                    this.ToAccountIDIsChangedField = value;
                    this.RaisePropertyChanged("ToAccountIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Transfer> Transfers {
            get {
                return this.TransfersField;
            }
            set {
                if ((object.ReferenceEquals(this.TransfersField, value) != true)) {
                    this.TransfersField = value;
                    this.RaisePropertyChanged("Transfers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnallocAmount {
            get {
                return this.UnallocAmountField;
            }
            set {
                if ((this.UnallocAmountField.Equals(value) != true)) {
                    this.UnallocAmountField = value;
                    this.RaisePropertyChanged("UnallocAmount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Case", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Case : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Agency> AgenciesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyAddedByCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AgencyAddedByCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseAttribute> AttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseDocument> CaseDocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseInvolvedName> CaseInvolvedNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseNonCollectableFinancial> CaseNonCollectableFinancialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseRelationship> CaseRelationshipsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseStatusHistory> CaseStatusHistoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseTitleIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Charge> ChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Condition> ConditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseCorrespondence> CorrespondencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.CreditSuspend> CreditSuspendsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseEvent> EventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Exhibit> ExhibitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GenerateCaseTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GenerateCaseTitleIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Location> LocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseNote> NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Obligation> ObligationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OwnerNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PhysicalLocationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.PhysicalLocation> PhysicalLocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PrimaryCountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReceivedDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Sentence> SentencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StatusDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatuteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatuteDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseTask> TasksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Agency> Agencies {
            get {
                return this.AgenciesField;
            }
            set {
                if ((object.ReferenceEquals(this.AgenciesField, value) != true)) {
                    this.AgenciesField = value;
                    this.RaisePropertyChanged("Agencies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyAddedByCode {
            get {
                return this.AgencyAddedByCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyAddedByCodeField, value) != true)) {
                    this.AgencyAddedByCodeField = value;
                    this.RaisePropertyChanged("AgencyAddedByCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AgencyAddedByCodeIsChanged {
            get {
                return this.AgencyAddedByCodeIsChangedField;
            }
            set {
                if ((this.AgencyAddedByCodeIsChangedField.Equals(value) != true)) {
                    this.AgencyAddedByCodeIsChangedField = value;
                    this.RaisePropertyChanged("AgencyAddedByCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseAttribute> Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseDocument> CaseDocuments {
            get {
                return this.CaseDocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseDocumentsField, value) != true)) {
                    this.CaseDocumentsField = value;
                    this.RaisePropertyChanged("CaseDocuments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseInvolvedName> CaseInvolvedNames {
            get {
                return this.CaseInvolvedNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseInvolvedNamesField, value) != true)) {
                    this.CaseInvolvedNamesField = value;
                    this.RaisePropertyChanged("CaseInvolvedNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseNonCollectableFinancial> CaseNonCollectableFinancials {
            get {
                return this.CaseNonCollectableFinancialsField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseNonCollectableFinancialsField, value) != true)) {
                    this.CaseNonCollectableFinancialsField = value;
                    this.RaisePropertyChanged("CaseNonCollectableFinancials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseRelationship> CaseRelationships {
            get {
                return this.CaseRelationshipsField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseRelationshipsField, value) != true)) {
                    this.CaseRelationshipsField = value;
                    this.RaisePropertyChanged("CaseRelationships");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseStatusHistory> CaseStatusHistory {
            get {
                return this.CaseStatusHistoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseStatusHistoryField, value) != true)) {
                    this.CaseStatusHistoryField = value;
                    this.RaisePropertyChanged("CaseStatusHistory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseTitle {
            get {
                return this.CaseTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseTitleField, value) != true)) {
                    this.CaseTitleField = value;
                    this.RaisePropertyChanged("CaseTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseTitleIsChanged {
            get {
                return this.CaseTitleIsChangedField;
            }
            set {
                if ((this.CaseTitleIsChangedField.Equals(value) != true)) {
                    this.CaseTitleIsChangedField = value;
                    this.RaisePropertyChanged("CaseTitleIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Charge> Charges {
            get {
                return this.ChargesField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargesField, value) != true)) {
                    this.ChargesField = value;
                    this.RaisePropertyChanged("Charges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Condition> Conditions {
            get {
                return this.ConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionsField, value) != true)) {
                    this.ConditionsField = value;
                    this.RaisePropertyChanged("Conditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseCorrespondence> Correspondences {
            get {
                return this.CorrespondencesField;
            }
            set {
                if ((object.ReferenceEquals(this.CorrespondencesField, value) != true)) {
                    this.CorrespondencesField = value;
                    this.RaisePropertyChanged("Correspondences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CreditSuspend> CreditSuspends {
            get {
                return this.CreditSuspendsField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditSuspendsField, value) != true)) {
                    this.CreditSuspendsField = value;
                    this.RaisePropertyChanged("CreditSuspends");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseEvent> Events {
            get {
                return this.EventsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventsField, value) != true)) {
                    this.EventsField = value;
                    this.RaisePropertyChanged("Events");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Exhibit> Exhibits {
            get {
                return this.ExhibitsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExhibitsField, value) != true)) {
                    this.ExhibitsField = value;
                    this.RaisePropertyChanged("Exhibits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> GenerateCaseTitle {
            get {
                return this.GenerateCaseTitleField;
            }
            set {
                if ((this.GenerateCaseTitleField.Equals(value) != true)) {
                    this.GenerateCaseTitleField = value;
                    this.RaisePropertyChanged("GenerateCaseTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GenerateCaseTitleIsChanged {
            get {
                return this.GenerateCaseTitleIsChangedField;
            }
            set {
                if ((this.GenerateCaseTitleIsChangedField.Equals(value) != true)) {
                    this.GenerateCaseTitleIsChangedField = value;
                    this.RaisePropertyChanged("GenerateCaseTitleIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalID {
            get {
                return this.LocalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalIDField, value) != true)) {
                    this.LocalIDField = value;
                    this.RaisePropertyChanged("LocalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Location> Locations {
            get {
                return this.LocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationsField, value) != true)) {
                    this.LocationsField = value;
                    this.RaisePropertyChanged("Locations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseNote> Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Obligation> Obligations {
            get {
                return this.ObligationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ObligationsField, value) != true)) {
                    this.ObligationsField = value;
                    this.RaisePropertyChanged("Obligations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OwnerNameID {
            get {
                return this.OwnerNameIDField;
            }
            set {
                if ((this.OwnerNameIDField.Equals(value) != true)) {
                    this.OwnerNameIDField = value;
                    this.RaisePropertyChanged("OwnerNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PhysicalLocationID {
            get {
                return this.PhysicalLocationIDField;
            }
            set {
                if ((this.PhysicalLocationIDField.Equals(value) != true)) {
                    this.PhysicalLocationIDField = value;
                    this.RaisePropertyChanged("PhysicalLocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.PhysicalLocation> PhysicalLocations {
            get {
                return this.PhysicalLocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicalLocationsField, value) != true)) {
                    this.PhysicalLocationsField = value;
                    this.RaisePropertyChanged("PhysicalLocations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PrimaryCountID {
            get {
                return this.PrimaryCountIDField;
            }
            set {
                if ((this.PrimaryCountIDField.Equals(value) != true)) {
                    this.PrimaryCountIDField = value;
                    this.RaisePropertyChanged("PrimaryCountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReceivedDateIsChanged {
            get {
                return this.ReceivedDateIsChangedField;
            }
            set {
                if ((this.ReceivedDateIsChangedField.Equals(value) != true)) {
                    this.ReceivedDateIsChangedField = value;
                    this.RaisePropertyChanged("ReceivedDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SealedIsChanged {
            get {
                return this.SealedIsChangedField;
            }
            set {
                if ((this.SealedIsChangedField.Equals(value) != true)) {
                    this.SealedIsChangedField = value;
                    this.RaisePropertyChanged("SealedIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Sentence> Sentences {
            get {
                return this.SentencesField;
            }
            set {
                if ((object.ReferenceEquals(this.SentencesField, value) != true)) {
                    this.SentencesField = value;
                    this.RaisePropertyChanged("Sentences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StatusDate {
            get {
                return this.StatusDateField;
            }
            set {
                if ((this.StatusDateField.Equals(value) != true)) {
                    this.StatusDateField = value;
                    this.RaisePropertyChanged("StatusDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusDateIsChanged {
            get {
                return this.StatusDateIsChangedField;
            }
            set {
                if ((this.StatusDateIsChangedField.Equals(value) != true)) {
                    this.StatusDateIsChangedField = value;
                    this.RaisePropertyChanged("StatusDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatuteCode {
            get {
                return this.StatuteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteCodeField, value) != true)) {
                    this.StatuteCodeField = value;
                    this.RaisePropertyChanged("StatuteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatuteDescription {
            get {
                return this.StatuteDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteDescriptionField, value) != true)) {
                    this.StatuteDescriptionField = value;
                    this.RaisePropertyChanged("StatuteDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseTask> Tasks {
            get {
                return this.TasksField;
            }
            set {
                if ((object.ReferenceEquals(this.TasksField, value) != true)) {
                    this.TasksField = value;
                    this.RaisePropertyChanged("Tasks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseAttribute", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CaseAttribute : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListValueCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ListValueCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValueIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListValueCode {
            get {
                return this.ListValueCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ListValueCodeField, value) != true)) {
                    this.ListValueCodeField = value;
                    this.RaisePropertyChanged("ListValueCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ListValueCodeIsChanged {
            get {
                return this.ListValueCodeIsChangedField;
            }
            set {
                if ((this.ListValueCodeIsChangedField.Equals(value) != true)) {
                    this.ListValueCodeIsChangedField = value;
                    this.RaisePropertyChanged("ListValueCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValueIsChanged {
            get {
                return this.ValueIsChangedField;
            }
            set {
                if ((this.ValueIsChangedField.Equals(value) != true)) {
                    this.ValueIsChangedField = value;
                    this.RaisePropertyChanged("ValueIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseDocument", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CaseDocument : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Case CaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CategoryCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiscoveryPacketTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.DocumentInvolvedName> DocumentInvolvedNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EventCodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EventMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FileNameIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FileSizeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocationCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> LockTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LockedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockedByDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.OnlineDocument> OnlineDocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParentEventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PriorityIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Case Case {
            get {
                return this.CaseField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseField, value) != true)) {
                    this.CaseField = value;
                    this.RaisePropertyChanged("Case");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CategoryCodeIsChanged {
            get {
                return this.CategoryCodeIsChangedField;
            }
            set {
                if ((this.CategoryCodeIsChangedField.Equals(value) != true)) {
                    this.CategoryCodeIsChangedField = value;
                    this.RaisePropertyChanged("CategoryCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency1 {
            get {
                return this.Currency1Field;
            }
            set {
                if ((this.Currency1Field.Equals(value) != true)) {
                    this.Currency1Field = value;
                    this.RaisePropertyChanged("Currency1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency1IsChanged {
            get {
                return this.Currency1IsChangedField;
            }
            set {
                if ((this.Currency1IsChangedField.Equals(value) != true)) {
                    this.Currency1IsChangedField = value;
                    this.RaisePropertyChanged("Currency1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency2 {
            get {
                return this.Currency2Field;
            }
            set {
                if ((this.Currency2Field.Equals(value) != true)) {
                    this.Currency2Field = value;
                    this.RaisePropertyChanged("Currency2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency2IsChanged {
            get {
                return this.Currency2IsChangedField;
            }
            set {
                if ((this.Currency2IsChangedField.Equals(value) != true)) {
                    this.Currency2IsChangedField = value;
                    this.RaisePropertyChanged("Currency2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsChanged {
            get {
                return this.DateIsChangedField;
            }
            set {
                if ((this.DateIsChangedField.Equals(value) != true)) {
                    this.DateIsChangedField = value;
                    this.RaisePropertyChanged("DateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiscoveryPacketTitle {
            get {
                return this.DiscoveryPacketTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscoveryPacketTitleField, value) != true)) {
                    this.DiscoveryPacketTitleField = value;
                    this.RaisePropertyChanged("DiscoveryPacketTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.DocumentInvolvedName> DocumentInvolvedNames {
            get {
                return this.DocumentInvolvedNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentInvolvedNamesField, value) != true)) {
                    this.DocumentInvolvedNamesField = value;
                    this.RaisePropertyChanged("DocumentInvolvedNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EventCodeType {
            get {
                return this.EventCodeTypeField;
            }
            set {
                if ((this.EventCodeTypeField.Equals(value) != true)) {
                    this.EventCodeTypeField = value;
                    this.RaisePropertyChanged("EventCodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EventMasterCode {
            get {
                return this.EventMasterCodeField;
            }
            set {
                if ((this.EventMasterCodeField.Equals(value) != true)) {
                    this.EventMasterCodeField = value;
                    this.RaisePropertyChanged("EventMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FileNameIsChanged {
            get {
                return this.FileNameIsChangedField;
            }
            set {
                if ((this.FileNameIsChangedField.Equals(value) != true)) {
                    this.FileNameIsChangedField = value;
                    this.RaisePropertyChanged("FileNameIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((this.FileSizeField.Equals(value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FileSizeIsChanged {
            get {
                return this.FileSizeIsChangedField;
            }
            set {
                if ((this.FileSizeIsChangedField.Equals(value) != true)) {
                    this.FileSizeIsChangedField = value;
                    this.RaisePropertyChanged("FileSizeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LocationCodeIsChanged {
            get {
                return this.LocationCodeIsChangedField;
            }
            set {
                if ((this.LocationCodeIsChangedField.Equals(value) != true)) {
                    this.LocationCodeIsChangedField = value;
                    this.RaisePropertyChanged("LocationCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> LockType {
            get {
                return this.LockTypeField;
            }
            set {
                if ((this.LockTypeField.Equals(value) != true)) {
                    this.LockTypeField = value;
                    this.RaisePropertyChanged("LockType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LockedBy {
            get {
                return this.LockedByField;
            }
            set {
                if ((this.LockedByField.Equals(value) != true)) {
                    this.LockedByField = value;
                    this.RaisePropertyChanged("LockedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedByDesc {
            get {
                return this.LockedByDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedByDescField, value) != true)) {
                    this.LockedByDescField = value;
                    this.RaisePropertyChanged("LockedByDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.OnlineDocument> OnlineDocuments {
            get {
                return this.OnlineDocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.OnlineDocumentsField, value) != true)) {
                    this.OnlineDocumentsField = value;
                    this.RaisePropertyChanged("OnlineDocuments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentEventID {
            get {
                return this.ParentEventIDField;
            }
            set {
                if ((this.ParentEventIDField.Equals(value) != true)) {
                    this.ParentEventIDField = value;
                    this.RaisePropertyChanged("ParentEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ParentEventIDIsChanged {
            get {
                return this.ParentEventIDIsChangedField;
            }
            set {
                if ((this.ParentEventIDIsChangedField.Equals(value) != true)) {
                    this.ParentEventIDIsChangedField = value;
                    this.RaisePropertyChanged("ParentEventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PriorityIsChanged {
            get {
                return this.PriorityIsChangedField;
            }
            set {
                if ((this.PriorityIsChangedField.Equals(value) != true)) {
                    this.PriorityIsChangedField = value;
                    this.RaisePropertyChanged("PriorityIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SealedIsChanged {
            get {
                return this.SealedIsChangedField;
            }
            set {
                if ((this.SealedIsChangedField.Equals(value) != true)) {
                    this.SealedIsChangedField = value;
                    this.RaisePropertyChanged("SealedIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentInvolvedName", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class DocumentInvolvedName : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CaseNotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventInvolvementCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag3IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag4IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag5IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvolvedNameDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvolvementCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> NotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifyIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CaseNotification {
            get {
                return this.CaseNotificationField;
            }
            set {
                if ((this.CaseNotificationField.Equals(value) != true)) {
                    this.CaseNotificationField = value;
                    this.RaisePropertyChanged("CaseNotification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsChanged {
            get {
                return this.DateIsChangedField;
            }
            set {
                if ((this.DateIsChangedField.Equals(value) != true)) {
                    this.DateIsChangedField = value;
                    this.RaisePropertyChanged("DateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventIDIsChanged {
            get {
                return this.EventIDIsChangedField;
            }
            set {
                if ((this.EventIDIsChangedField.Equals(value) != true)) {
                    this.EventIDIsChangedField = value;
                    this.RaisePropertyChanged("EventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventInvolvementCode {
            get {
                return this.EventInvolvementCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EventInvolvementCodeField, value) != true)) {
                    this.EventInvolvementCodeField = value;
                    this.RaisePropertyChanged("EventInvolvementCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag1 {
            get {
                return this.Flag1Field;
            }
            set {
                if ((this.Flag1Field.Equals(value) != true)) {
                    this.Flag1Field = value;
                    this.RaisePropertyChanged("Flag1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag1IsChanged {
            get {
                return this.Flag1IsChangedField;
            }
            set {
                if ((this.Flag1IsChangedField.Equals(value) != true)) {
                    this.Flag1IsChangedField = value;
                    this.RaisePropertyChanged("Flag1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag2 {
            get {
                return this.Flag2Field;
            }
            set {
                if ((this.Flag2Field.Equals(value) != true)) {
                    this.Flag2Field = value;
                    this.RaisePropertyChanged("Flag2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag2IsChanged {
            get {
                return this.Flag2IsChangedField;
            }
            set {
                if ((this.Flag2IsChangedField.Equals(value) != true)) {
                    this.Flag2IsChangedField = value;
                    this.RaisePropertyChanged("Flag2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag3 {
            get {
                return this.Flag3Field;
            }
            set {
                if ((this.Flag3Field.Equals(value) != true)) {
                    this.Flag3Field = value;
                    this.RaisePropertyChanged("Flag3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag3IsChanged {
            get {
                return this.Flag3IsChangedField;
            }
            set {
                if ((this.Flag3IsChangedField.Equals(value) != true)) {
                    this.Flag3IsChangedField = value;
                    this.RaisePropertyChanged("Flag3IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag4 {
            get {
                return this.Flag4Field;
            }
            set {
                if ((this.Flag4Field.Equals(value) != true)) {
                    this.Flag4Field = value;
                    this.RaisePropertyChanged("Flag4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag4IsChanged {
            get {
                return this.Flag4IsChangedField;
            }
            set {
                if ((this.Flag4IsChangedField.Equals(value) != true)) {
                    this.Flag4IsChangedField = value;
                    this.RaisePropertyChanged("Flag4IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag5 {
            get {
                return this.Flag5Field;
            }
            set {
                if ((this.Flag5Field.Equals(value) != true)) {
                    this.Flag5Field = value;
                    this.RaisePropertyChanged("Flag5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag5IsChanged {
            get {
                return this.Flag5IsChangedField;
            }
            set {
                if ((this.Flag5IsChangedField.Equals(value) != true)) {
                    this.Flag5IsChangedField = value;
                    this.RaisePropertyChanged("Flag5IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvolvedNameDescription {
            get {
                return this.InvolvedNameDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InvolvedNameDescriptionField, value) != true)) {
                    this.InvolvedNameDescriptionField = value;
                    this.RaisePropertyChanged("InvolvedNameDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvolvementCode {
            get {
                return this.InvolvementCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvolvementCodeField, value) != true)) {
                    this.InvolvementCodeField = value;
                    this.RaisePropertyChanged("InvolvementCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NameIDIsChanged {
            get {
                return this.NameIDIsChangedField;
            }
            set {
                if ((this.NameIDIsChangedField.Equals(value) != true)) {
                    this.NameIDIsChangedField = value;
                    this.RaisePropertyChanged("NameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Notify {
            get {
                return this.NotifyField;
            }
            set {
                if ((this.NotifyField.Equals(value) != true)) {
                    this.NotifyField = value;
                    this.RaisePropertyChanged("Notify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotifyIsChanged {
            get {
                return this.NotifyIsChangedField;
            }
            set {
                if ((this.NotifyIsChangedField.Equals(value) != true)) {
                    this.NotifyIsChangedField = value;
                    this.RaisePropertyChanged("NotifyIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnlineDocument", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class OnlineDocument : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.OnlineDocumentAuthorizedName> AuthorizedNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.CaseDocument CaseDocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplayNameIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocumentEventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequestTypeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UnitsIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.OnlineDocumentAuthorizedName> AuthorizedNames {
            get {
                return this.AuthorizedNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizedNamesField, value) != true)) {
                    this.AuthorizedNamesField = value;
                    this.RaisePropertyChanged("AuthorizedNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.CaseDocument CaseDocument {
            get {
                return this.CaseDocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseDocumentField, value) != true)) {
                    this.CaseDocumentField = value;
                    this.RaisePropertyChanged("CaseDocument");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplayNameIsChanged {
            get {
                return this.DisplayNameIsChangedField;
            }
            set {
                if ((this.DisplayNameIsChangedField.Equals(value) != true)) {
                    this.DisplayNameIsChangedField = value;
                    this.RaisePropertyChanged("DisplayNameIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentEventID {
            get {
                return this.DocumentEventIDField;
            }
            set {
                if ((this.DocumentEventIDField.Equals(value) != true)) {
                    this.DocumentEventIDField = value;
                    this.RaisePropertyChanged("DocumentEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocumentEventIDIsChanged {
            get {
                return this.DocumentEventIDIsChangedField;
            }
            set {
                if ((this.DocumentEventIDIsChangedField.Equals(value) != true)) {
                    this.DocumentEventIDIsChangedField = value;
                    this.RaisePropertyChanged("DocumentEventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestType {
            get {
                return this.RequestTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestTypeField, value) != true)) {
                    this.RequestTypeField = value;
                    this.RaisePropertyChanged("RequestType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequestTypeIsChanged {
            get {
                return this.RequestTypeIsChangedField;
            }
            set {
                if ((this.RequestTypeIsChangedField.Equals(value) != true)) {
                    this.RequestTypeIsChangedField = value;
                    this.RaisePropertyChanged("RequestTypeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((this.UnitsField.Equals(value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UnitsIsChanged {
            get {
                return this.UnitsIsChangedField;
            }
            set {
                if ((this.UnitsIsChangedField.Equals(value) != true)) {
                    this.UnitsIsChangedField = value;
                    this.RaisePropertyChanged("UnitsIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnlineDocumentAuthorizedName", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class OnlineDocumentAuthorizedName : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FinancialEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FinancialEventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.OnlineDocument OnlineDocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OnlineDocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PendingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PendingIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PriceIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FinancialEventID {
            get {
                return this.FinancialEventIDField;
            }
            set {
                if ((this.FinancialEventIDField.Equals(value) != true)) {
                    this.FinancialEventIDField = value;
                    this.RaisePropertyChanged("FinancialEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FinancialEventIDIsChanged {
            get {
                return this.FinancialEventIDIsChangedField;
            }
            set {
                if ((this.FinancialEventIDIsChangedField.Equals(value) != true)) {
                    this.FinancialEventIDIsChangedField = value;
                    this.RaisePropertyChanged("FinancialEventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NameIDIsChanged {
            get {
                return this.NameIDIsChangedField;
            }
            set {
                if ((this.NameIDIsChangedField.Equals(value) != true)) {
                    this.NameIDIsChangedField = value;
                    this.RaisePropertyChanged("NameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.OnlineDocument OnlineDocument {
            get {
                return this.OnlineDocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.OnlineDocumentField, value) != true)) {
                    this.OnlineDocumentField = value;
                    this.RaisePropertyChanged("OnlineDocument");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OnlineDocumentID {
            get {
                return this.OnlineDocumentIDField;
            }
            set {
                if ((this.OnlineDocumentIDField.Equals(value) != true)) {
                    this.OnlineDocumentIDField = value;
                    this.RaisePropertyChanged("OnlineDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Pending {
            get {
                return this.PendingField;
            }
            set {
                if ((this.PendingField.Equals(value) != true)) {
                    this.PendingField = value;
                    this.RaisePropertyChanged("Pending");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PendingIsChanged {
            get {
                return this.PendingIsChangedField;
            }
            set {
                if ((this.PendingIsChangedField.Equals(value) != true)) {
                    this.PendingIsChangedField = value;
                    this.RaisePropertyChanged("PendingIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PriceIsChanged {
            get {
                return this.PriceIsChangedField;
            }
            set {
                if ((this.PriceIsChangedField.Equals(value) != true)) {
                    this.PriceIsChangedField = value;
                    this.RaisePropertyChanged("PriceIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseInvolvedName", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CaseInvolvedName : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> AgencyMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AgencyNumberIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AgencyNumberIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ArrestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ArrestDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Case CaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Agency CaseAgencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CaseAgencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseAgencyIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag3IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag4IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag5IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ForCaseInvolvedPersonIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ForCaseInvolvedPersonIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InactiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InactiveDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvolvementCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvolvementCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte InvolvementCodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte InvolvementMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsSwappableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSwappableIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Name NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotificationIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ActiveDateIsChanged {
            get {
                return this.ActiveDateIsChangedField;
            }
            set {
                if ((this.ActiveDateIsChangedField.Equals(value) != true)) {
                    this.ActiveDateIsChangedField = value;
                    this.RaisePropertyChanged("ActiveDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ActiveIsChanged {
            get {
                return this.ActiveIsChangedField;
            }
            set {
                if ((this.ActiveIsChangedField.Equals(value) != true)) {
                    this.ActiveIsChangedField = value;
                    this.RaisePropertyChanged("ActiveIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyCode {
            get {
                return this.AgencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyCodeField, value) != true)) {
                    this.AgencyCodeField = value;
                    this.RaisePropertyChanged("AgencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> AgencyMasterCode {
            get {
                return this.AgencyMasterCodeField;
            }
            set {
                if ((this.AgencyMasterCodeField.Equals(value) != true)) {
                    this.AgencyMasterCodeField = value;
                    this.RaisePropertyChanged("AgencyMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AgencyNumberID {
            get {
                return this.AgencyNumberIDField;
            }
            set {
                if ((this.AgencyNumberIDField.Equals(value) != true)) {
                    this.AgencyNumberIDField = value;
                    this.RaisePropertyChanged("AgencyNumberID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AgencyNumberIDIsChanged {
            get {
                return this.AgencyNumberIDIsChangedField;
            }
            set {
                if ((this.AgencyNumberIDIsChangedField.Equals(value) != true)) {
                    this.AgencyNumberIDIsChangedField = value;
                    this.RaisePropertyChanged("AgencyNumberIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ArrestDate {
            get {
                return this.ArrestDateField;
            }
            set {
                if ((this.ArrestDateField.Equals(value) != true)) {
                    this.ArrestDateField = value;
                    this.RaisePropertyChanged("ArrestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ArrestDateIsChanged {
            get {
                return this.ArrestDateIsChangedField;
            }
            set {
                if ((this.ArrestDateIsChangedField.Equals(value) != true)) {
                    this.ArrestDateIsChangedField = value;
                    this.RaisePropertyChanged("ArrestDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Case Case {
            get {
                return this.CaseField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseField, value) != true)) {
                    this.CaseField = value;
                    this.RaisePropertyChanged("Case");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Agency CaseAgency {
            get {
                return this.CaseAgencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseAgencyField, value) != true)) {
                    this.CaseAgencyField = value;
                    this.RaisePropertyChanged("CaseAgency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CaseAgencyID {
            get {
                return this.CaseAgencyIDField;
            }
            set {
                if ((this.CaseAgencyIDField.Equals(value) != true)) {
                    this.CaseAgencyIDField = value;
                    this.RaisePropertyChanged("CaseAgencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseAgencyIDIsChanged {
            get {
                return this.CaseAgencyIDIsChangedField;
            }
            set {
                if ((this.CaseAgencyIDIsChangedField.Equals(value) != true)) {
                    this.CaseAgencyIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseAgencyIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag1 {
            get {
                return this.Flag1Field;
            }
            set {
                if ((this.Flag1Field.Equals(value) != true)) {
                    this.Flag1Field = value;
                    this.RaisePropertyChanged("Flag1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag1IsChanged {
            get {
                return this.Flag1IsChangedField;
            }
            set {
                if ((this.Flag1IsChangedField.Equals(value) != true)) {
                    this.Flag1IsChangedField = value;
                    this.RaisePropertyChanged("Flag1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag2 {
            get {
                return this.Flag2Field;
            }
            set {
                if ((this.Flag2Field.Equals(value) != true)) {
                    this.Flag2Field = value;
                    this.RaisePropertyChanged("Flag2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag2IsChanged {
            get {
                return this.Flag2IsChangedField;
            }
            set {
                if ((this.Flag2IsChangedField.Equals(value) != true)) {
                    this.Flag2IsChangedField = value;
                    this.RaisePropertyChanged("Flag2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag3 {
            get {
                return this.Flag3Field;
            }
            set {
                if ((this.Flag3Field.Equals(value) != true)) {
                    this.Flag3Field = value;
                    this.RaisePropertyChanged("Flag3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag3IsChanged {
            get {
                return this.Flag3IsChangedField;
            }
            set {
                if ((this.Flag3IsChangedField.Equals(value) != true)) {
                    this.Flag3IsChangedField = value;
                    this.RaisePropertyChanged("Flag3IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag4 {
            get {
                return this.Flag4Field;
            }
            set {
                if ((this.Flag4Field.Equals(value) != true)) {
                    this.Flag4Field = value;
                    this.RaisePropertyChanged("Flag4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag4IsChanged {
            get {
                return this.Flag4IsChangedField;
            }
            set {
                if ((this.Flag4IsChangedField.Equals(value) != true)) {
                    this.Flag4IsChangedField = value;
                    this.RaisePropertyChanged("Flag4IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag5 {
            get {
                return this.Flag5Field;
            }
            set {
                if ((this.Flag5Field.Equals(value) != true)) {
                    this.Flag5Field = value;
                    this.RaisePropertyChanged("Flag5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag5IsChanged {
            get {
                return this.Flag5IsChangedField;
            }
            set {
                if ((this.Flag5IsChangedField.Equals(value) != true)) {
                    this.Flag5IsChangedField = value;
                    this.RaisePropertyChanged("Flag5IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ForCaseInvolvedPersonID {
            get {
                return this.ForCaseInvolvedPersonIDField;
            }
            set {
                if ((this.ForCaseInvolvedPersonIDField.Equals(value) != true)) {
                    this.ForCaseInvolvedPersonIDField = value;
                    this.RaisePropertyChanged("ForCaseInvolvedPersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ForCaseInvolvedPersonIDIsChanged {
            get {
                return this.ForCaseInvolvedPersonIDIsChangedField;
            }
            set {
                if ((this.ForCaseInvolvedPersonIDIsChangedField.Equals(value) != true)) {
                    this.ForCaseInvolvedPersonIDIsChangedField = value;
                    this.RaisePropertyChanged("ForCaseInvolvedPersonIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InactiveDate {
            get {
                return this.InactiveDateField;
            }
            set {
                if ((this.InactiveDateField.Equals(value) != true)) {
                    this.InactiveDateField = value;
                    this.RaisePropertyChanged("InactiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InactiveDateIsChanged {
            get {
                return this.InactiveDateIsChangedField;
            }
            set {
                if ((this.InactiveDateIsChangedField.Equals(value) != true)) {
                    this.InactiveDateIsChangedField = value;
                    this.RaisePropertyChanged("InactiveDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvolvementCode {
            get {
                return this.InvolvementCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvolvementCodeField, value) != true)) {
                    this.InvolvementCodeField = value;
                    this.RaisePropertyChanged("InvolvementCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvolvementCodeIsChanged {
            get {
                return this.InvolvementCodeIsChangedField;
            }
            set {
                if ((this.InvolvementCodeIsChangedField.Equals(value) != true)) {
                    this.InvolvementCodeIsChangedField = value;
                    this.RaisePropertyChanged("InvolvementCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte InvolvementCodeType {
            get {
                return this.InvolvementCodeTypeField;
            }
            set {
                if ((this.InvolvementCodeTypeField.Equals(value) != true)) {
                    this.InvolvementCodeTypeField = value;
                    this.RaisePropertyChanged("InvolvementCodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte InvolvementMasterCode {
            get {
                return this.InvolvementMasterCodeField;
            }
            set {
                if ((this.InvolvementMasterCodeField.Equals(value) != true)) {
                    this.InvolvementMasterCodeField = value;
                    this.RaisePropertyChanged("InvolvementMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsSwappable {
            get {
                return this.IsSwappableField;
            }
            set {
                if ((this.IsSwappableField.Equals(value) != true)) {
                    this.IsSwappableField = value;
                    this.RaisePropertyChanged("IsSwappable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSwappableIsChanged {
            get {
                return this.IsSwappableIsChangedField;
            }
            set {
                if ((this.IsSwappableIsChangedField.Equals(value) != true)) {
                    this.IsSwappableIsChangedField = value;
                    this.RaisePropertyChanged("IsSwappableIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Name Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NameIDIsChanged {
            get {
                return this.NameIDIsChangedField;
            }
            set {
                if ((this.NameIDIsChangedField.Equals(value) != true)) {
                    this.NameIDIsChangedField = value;
                    this.RaisePropertyChanged("NameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Notification {
            get {
                return this.NotificationField;
            }
            set {
                if ((this.NotificationField.Equals(value) != true)) {
                    this.NotificationField = value;
                    this.RaisePropertyChanged("Notification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotificationIsChanged {
            get {
                return this.NotificationIsChangedField;
            }
            set {
                if ((this.NotificationIsChangedField.Equals(value) != true)) {
                    this.NotificationIsChangedField = value;
                    this.RaisePropertyChanged("NotificationIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseNonCollectableFinancial", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CaseNonCollectableFinancial : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountFromDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountToDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Case CaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CategoryCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DurationDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EventCodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventEndDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EventMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InitiatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InitiatedByIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocationCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCollectableFinancialInvolvedName> NonCollectableFinancialInvolvedNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParentEventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PriorityIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TitleIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountFrom {
            get {
                return this.AmountFromField;
            }
            set {
                if ((this.AmountFromField.Equals(value) != true)) {
                    this.AmountFromField = value;
                    this.RaisePropertyChanged("AmountFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountFromDescription {
            get {
                return this.AmountFromDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountFromDescriptionField, value) != true)) {
                    this.AmountFromDescriptionField = value;
                    this.RaisePropertyChanged("AmountFromDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromDescriptionIsChanged {
            get {
                return this.AmountFromDescriptionIsChangedField;
            }
            set {
                if ((this.AmountFromDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountFromDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromIsChanged {
            get {
                return this.AmountFromIsChangedField;
            }
            set {
                if ((this.AmountFromIsChangedField.Equals(value) != true)) {
                    this.AmountFromIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountTo {
            get {
                return this.AmountToField;
            }
            set {
                if ((this.AmountToField.Equals(value) != true)) {
                    this.AmountToField = value;
                    this.RaisePropertyChanged("AmountTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountToDescription {
            get {
                return this.AmountToDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountToDescriptionField, value) != true)) {
                    this.AmountToDescriptionField = value;
                    this.RaisePropertyChanged("AmountToDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToDescriptionIsChanged {
            get {
                return this.AmountToDescriptionIsChangedField;
            }
            set {
                if ((this.AmountToDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountToDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountToDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToIsChanged {
            get {
                return this.AmountToIsChangedField;
            }
            set {
                if ((this.AmountToIsChangedField.Equals(value) != true)) {
                    this.AmountToIsChangedField = value;
                    this.RaisePropertyChanged("AmountToIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Case Case {
            get {
                return this.CaseField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseField, value) != true)) {
                    this.CaseField = value;
                    this.RaisePropertyChanged("Case");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseIDIsChanged {
            get {
                return this.CaseIDIsChangedField;
            }
            set {
                if ((this.CaseIDIsChangedField.Equals(value) != true)) {
                    this.CaseIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CategoryCodeIsChanged {
            get {
                return this.CategoryCodeIsChangedField;
            }
            set {
                if ((this.CategoryCodeIsChangedField.Equals(value) != true)) {
                    this.CategoryCodeIsChangedField = value;
                    this.RaisePropertyChanged("CategoryCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeID {
            get {
                return this.ChargeIDField;
            }
            set {
                if ((this.ChargeIDField.Equals(value) != true)) {
                    this.ChargeIDField = value;
                    this.RaisePropertyChanged("ChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeIDIsChanged {
            get {
                return this.ChargeIDIsChangedField;
            }
            set {
                if ((this.ChargeIDIsChangedField.Equals(value) != true)) {
                    this.ChargeIDIsChangedField = value;
                    this.RaisePropertyChanged("ChargeIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency1 {
            get {
                return this.Currency1Field;
            }
            set {
                if ((this.Currency1Field.Equals(value) != true)) {
                    this.Currency1Field = value;
                    this.RaisePropertyChanged("Currency1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency1IsChanged {
            get {
                return this.Currency1IsChangedField;
            }
            set {
                if ((this.Currency1IsChangedField.Equals(value) != true)) {
                    this.Currency1IsChangedField = value;
                    this.RaisePropertyChanged("Currency1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency2 {
            get {
                return this.Currency2Field;
            }
            set {
                if ((this.Currency2Field.Equals(value) != true)) {
                    this.Currency2Field = value;
                    this.RaisePropertyChanged("Currency2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency2IsChanged {
            get {
                return this.Currency2IsChangedField;
            }
            set {
                if ((this.Currency2IsChangedField.Equals(value) != true)) {
                    this.Currency2IsChangedField = value;
                    this.RaisePropertyChanged("Currency2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsChanged {
            get {
                return this.DateIsChangedField;
            }
            set {
                if ((this.DateIsChangedField.Equals(value) != true)) {
                    this.DateIsChangedField = value;
                    this.RaisePropertyChanged("DateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationDescription {
            get {
                return this.DurationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationDescriptionField, value) != true)) {
                    this.DurationDescriptionField = value;
                    this.RaisePropertyChanged("DurationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DurationDescriptionIsChanged {
            get {
                return this.DurationDescriptionIsChangedField;
            }
            set {
                if ((this.DurationDescriptionIsChangedField.Equals(value) != true)) {
                    this.DurationDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("DurationDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EventCodeType {
            get {
                return this.EventCodeTypeField;
            }
            set {
                if ((this.EventCodeTypeField.Equals(value) != true)) {
                    this.EventCodeTypeField = value;
                    this.RaisePropertyChanged("EventCodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventDateIsChanged {
            get {
                return this.EventDateIsChangedField;
            }
            set {
                if ((this.EventDateIsChangedField.Equals(value) != true)) {
                    this.EventDateIsChangedField = value;
                    this.RaisePropertyChanged("EventDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventDescription {
            get {
                return this.EventDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EventDescriptionField, value) != true)) {
                    this.EventDescriptionField = value;
                    this.RaisePropertyChanged("EventDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventEndDate {
            get {
                return this.EventEndDateField;
            }
            set {
                if ((this.EventEndDateField.Equals(value) != true)) {
                    this.EventEndDateField = value;
                    this.RaisePropertyChanged("EventEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventEndDateIsChanged {
            get {
                return this.EventEndDateIsChangedField;
            }
            set {
                if ((this.EventEndDateIsChangedField.Equals(value) != true)) {
                    this.EventEndDateIsChangedField = value;
                    this.RaisePropertyChanged("EventEndDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EventMasterCode {
            get {
                return this.EventMasterCodeField;
            }
            set {
                if ((this.EventMasterCodeField.Equals(value) != true)) {
                    this.EventMasterCodeField = value;
                    this.RaisePropertyChanged("EventMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InitiatedBy {
            get {
                return this.InitiatedByField;
            }
            set {
                if ((this.InitiatedByField.Equals(value) != true)) {
                    this.InitiatedByField = value;
                    this.RaisePropertyChanged("InitiatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InitiatedByIsChanged {
            get {
                return this.InitiatedByIsChangedField;
            }
            set {
                if ((this.InitiatedByIsChangedField.Equals(value) != true)) {
                    this.InitiatedByIsChangedField = value;
                    this.RaisePropertyChanged("InitiatedByIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LocationCodeIsChanged {
            get {
                return this.LocationCodeIsChangedField;
            }
            set {
                if ((this.LocationCodeIsChangedField.Equals(value) != true)) {
                    this.LocationCodeIsChangedField = value;
                    this.RaisePropertyChanged("LocationCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCollectableFinancialInvolvedName> NonCollectableFinancialInvolvedNames {
            get {
                return this.NonCollectableFinancialInvolvedNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NonCollectableFinancialInvolvedNamesField, value) != true)) {
                    this.NonCollectableFinancialInvolvedNamesField = value;
                    this.RaisePropertyChanged("NonCollectableFinancialInvolvedNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentEventID {
            get {
                return this.ParentEventIDField;
            }
            set {
                if ((this.ParentEventIDField.Equals(value) != true)) {
                    this.ParentEventIDField = value;
                    this.RaisePropertyChanged("ParentEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ParentEventIDIsChanged {
            get {
                return this.ParentEventIDIsChangedField;
            }
            set {
                if ((this.ParentEventIDIsChangedField.Equals(value) != true)) {
                    this.ParentEventIDIsChangedField = value;
                    this.RaisePropertyChanged("ParentEventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PriorityIsChanged {
            get {
                return this.PriorityIsChangedField;
            }
            set {
                if ((this.PriorityIsChangedField.Equals(value) != true)) {
                    this.PriorityIsChangedField = value;
                    this.RaisePropertyChanged("PriorityIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatusMasterCode {
            get {
                return this.StatusMasterCodeField;
            }
            set {
                if ((this.StatusMasterCodeField.Equals(value) != true)) {
                    this.StatusMasterCodeField = value;
                    this.RaisePropertyChanged("StatusMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TitleIsChanged {
            get {
                return this.TitleIsChangedField;
            }
            set {
                if ((this.TitleIsChangedField.Equals(value) != true)) {
                    this.TitleIsChangedField = value;
                    this.RaisePropertyChanged("TitleIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseRelationship", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CaseRelationship : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Case CaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsParentIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Case RelatedCaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelatedCaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RelatedCaseIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelationshipCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RelationshipCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Case Case {
            get {
                return this.CaseField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseField, value) != true)) {
                    this.CaseField = value;
                    this.RaisePropertyChanged("Case");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsParent {
            get {
                return this.IsParentField;
            }
            set {
                if ((this.IsParentField.Equals(value) != true)) {
                    this.IsParentField = value;
                    this.RaisePropertyChanged("IsParent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsParentIsChanged {
            get {
                return this.IsParentIsChangedField;
            }
            set {
                if ((this.IsParentIsChangedField.Equals(value) != true)) {
                    this.IsParentIsChangedField = value;
                    this.RaisePropertyChanged("IsParentIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Case RelatedCase {
            get {
                return this.RelatedCaseField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedCaseField, value) != true)) {
                    this.RelatedCaseField = value;
                    this.RaisePropertyChanged("RelatedCase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelatedCaseID {
            get {
                return this.RelatedCaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedCaseIDField, value) != true)) {
                    this.RelatedCaseIDField = value;
                    this.RaisePropertyChanged("RelatedCaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RelatedCaseIDIsChanged {
            get {
                return this.RelatedCaseIDIsChangedField;
            }
            set {
                if ((this.RelatedCaseIDIsChangedField.Equals(value) != true)) {
                    this.RelatedCaseIDIsChangedField = value;
                    this.RaisePropertyChanged("RelatedCaseIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelationshipCode {
            get {
                return this.RelationshipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationshipCodeField, value) != true)) {
                    this.RelationshipCodeField = value;
                    this.RaisePropertyChanged("RelationshipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RelationshipCodeIsChanged {
            get {
                return this.RelationshipCodeIsChangedField;
            }
            set {
                if ((this.RelationshipCodeIsChangedField.Equals(value) != true)) {
                    this.RelationshipCodeIsChangedField = value;
                    this.RaisePropertyChanged("RelationshipCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseStatusHistory", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CaseStatusHistory : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Case CaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseStatusIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Case Case {
            get {
                return this.CaseField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseField, value) != true)) {
                    this.CaseField = value;
                    this.RaisePropertyChanged("Case");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseIDIsChanged {
            get {
                return this.CaseIDIsChangedField;
            }
            set {
                if ((this.CaseIDIsChangedField.Equals(value) != true)) {
                    this.CaseIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseStatus {
            get {
                return this.CaseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseStatusField, value) != true)) {
                    this.CaseStatusField = value;
                    this.RaisePropertyChanged("CaseStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseStatusIsChanged {
            get {
                return this.CaseStatusIsChangedField;
            }
            set {
                if ((this.CaseStatusIsChangedField.Equals(value) != true)) {
                    this.CaseStatusIsChangedField = value;
                    this.RaisePropertyChanged("CaseStatusIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte CodeType {
            get {
                return this.CodeTypeField;
            }
            set {
                if ((this.CodeTypeField.Equals(value) != true)) {
                    this.CodeTypeField = value;
                    this.RaisePropertyChanged("CodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventDateIsChanged {
            get {
                return this.EventDateIsChangedField;
            }
            set {
                if ((this.EventDateIsChangedField.Equals(value) != true)) {
                    this.EventDateIsChangedField = value;
                    this.RaisePropertyChanged("EventDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Charge", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Charge : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAttribute> AttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAgency> ChargeAgenciesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeEnhancement> ChargeEnhancementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeHistory> ChargeHistoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeInvolvedName> ChargeInvolvedNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ChargeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeNumberIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CountTypeCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> CountTypeMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Exhibit> ExhibitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IncidentDate1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IncidentDate1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IncidentDate2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IncidentDate2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Intoxicant> IntoxicantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Judgment> JudgmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Location> LocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Notes2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Notes2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentCountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParentCountIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StatuteActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatuteCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatuteChargeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatuteClassCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatuteClassDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatuteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte StatuteCompareDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatuteDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatuteEnhancerModifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StatuteExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatuteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatuteIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatutePenaltyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatuteSeverityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatuteSeverityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatuteShortDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatuteSourceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatuteSourceDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAttribute> Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAgency> ChargeAgencies {
            get {
                return this.ChargeAgenciesField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeAgenciesField, value) != true)) {
                    this.ChargeAgenciesField = value;
                    this.RaisePropertyChanged("ChargeAgencies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeEnhancement> ChargeEnhancements {
            get {
                return this.ChargeEnhancementsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeEnhancementsField, value) != true)) {
                    this.ChargeEnhancementsField = value;
                    this.RaisePropertyChanged("ChargeEnhancements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeHistory> ChargeHistories {
            get {
                return this.ChargeHistoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeHistoriesField, value) != true)) {
                    this.ChargeHistoriesField = value;
                    this.RaisePropertyChanged("ChargeHistories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeInvolvedName> ChargeInvolvedNames {
            get {
                return this.ChargeInvolvedNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeInvolvedNamesField, value) != true)) {
                    this.ChargeInvolvedNamesField = value;
                    this.RaisePropertyChanged("ChargeInvolvedNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ChargeNumber {
            get {
                return this.ChargeNumberField;
            }
            set {
                if ((this.ChargeNumberField.Equals(value) != true)) {
                    this.ChargeNumberField = value;
                    this.RaisePropertyChanged("ChargeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeNumberIsChanged {
            get {
                return this.ChargeNumberIsChangedField;
            }
            set {
                if ((this.ChargeNumberIsChangedField.Equals(value) != true)) {
                    this.ChargeNumberIsChangedField = value;
                    this.RaisePropertyChanged("ChargeNumberIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountTypeCode {
            get {
                return this.CountTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountTypeCodeField, value) != true)) {
                    this.CountTypeCodeField = value;
                    this.RaisePropertyChanged("CountTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CountTypeCodeIsChanged {
            get {
                return this.CountTypeCodeIsChangedField;
            }
            set {
                if ((this.CountTypeCodeIsChangedField.Equals(value) != true)) {
                    this.CountTypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("CountTypeCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> CountTypeMasterCode {
            get {
                return this.CountTypeMasterCodeField;
            }
            set {
                if ((this.CountTypeMasterCodeField.Equals(value) != true)) {
                    this.CountTypeMasterCodeField = value;
                    this.RaisePropertyChanged("CountTypeMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsChanged {
            get {
                return this.DateIsChangedField;
            }
            set {
                if ((this.DateIsChangedField.Equals(value) != true)) {
                    this.DateIsChangedField = value;
                    this.RaisePropertyChanged("DateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Exhibit> Exhibits {
            get {
                return this.ExhibitsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExhibitsField, value) != true)) {
                    this.ExhibitsField = value;
                    this.RaisePropertyChanged("Exhibits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IncidentDate1 {
            get {
                return this.IncidentDate1Field;
            }
            set {
                if ((this.IncidentDate1Field.Equals(value) != true)) {
                    this.IncidentDate1Field = value;
                    this.RaisePropertyChanged("IncidentDate1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IncidentDate1IsChanged {
            get {
                return this.IncidentDate1IsChangedField;
            }
            set {
                if ((this.IncidentDate1IsChangedField.Equals(value) != true)) {
                    this.IncidentDate1IsChangedField = value;
                    this.RaisePropertyChanged("IncidentDate1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IncidentDate2 {
            get {
                return this.IncidentDate2Field;
            }
            set {
                if ((this.IncidentDate2Field.Equals(value) != true)) {
                    this.IncidentDate2Field = value;
                    this.RaisePropertyChanged("IncidentDate2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IncidentDate2IsChanged {
            get {
                return this.IncidentDate2IsChangedField;
            }
            set {
                if ((this.IncidentDate2IsChangedField.Equals(value) != true)) {
                    this.IncidentDate2IsChangedField = value;
                    this.RaisePropertyChanged("IncidentDate2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Intoxicant> Intoxicants {
            get {
                return this.IntoxicantsField;
            }
            set {
                if ((object.ReferenceEquals(this.IntoxicantsField, value) != true)) {
                    this.IntoxicantsField = value;
                    this.RaisePropertyChanged("Intoxicants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Judgment> Judgments {
            get {
                return this.JudgmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.JudgmentsField, value) != true)) {
                    this.JudgmentsField = value;
                    this.RaisePropertyChanged("Judgments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Location> Locations {
            get {
                return this.LocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationsField, value) != true)) {
                    this.LocationsField = value;
                    this.RaisePropertyChanged("Locations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes2 {
            get {
                return this.Notes2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Notes2Field, value) != true)) {
                    this.Notes2Field = value;
                    this.RaisePropertyChanged("Notes2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Notes2IsChanged {
            get {
                return this.Notes2IsChangedField;
            }
            set {
                if ((this.Notes2IsChangedField.Equals(value) != true)) {
                    this.Notes2IsChangedField = value;
                    this.RaisePropertyChanged("Notes2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentCountID {
            get {
                return this.ParentCountIDField;
            }
            set {
                if ((this.ParentCountIDField.Equals(value) != true)) {
                    this.ParentCountIDField = value;
                    this.RaisePropertyChanged("ParentCountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ParentCountIDIsChanged {
            get {
                return this.ParentCountIDIsChangedField;
            }
            set {
                if ((this.ParentCountIDIsChangedField.Equals(value) != true)) {
                    this.ParentCountIDIsChangedField = value;
                    this.RaisePropertyChanged("ParentCountIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SealedIsChanged {
            get {
                return this.SealedIsChangedField;
            }
            set {
                if ((this.SealedIsChangedField.Equals(value) != true)) {
                    this.SealedIsChangedField = value;
                    this.RaisePropertyChanged("SealedIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StatuteActiveDate {
            get {
                return this.StatuteActiveDateField;
            }
            set {
                if ((this.StatuteActiveDateField.Equals(value) != true)) {
                    this.StatuteActiveDateField = value;
                    this.RaisePropertyChanged("StatuteActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatuteCategory {
            get {
                return this.StatuteCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteCategoryField, value) != true)) {
                    this.StatuteCategoryField = value;
                    this.RaisePropertyChanged("StatuteCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatuteChargeID {
            get {
                return this.StatuteChargeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteChargeIDField, value) != true)) {
                    this.StatuteChargeIDField = value;
                    this.RaisePropertyChanged("StatuteChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatuteClassCode {
            get {
                return this.StatuteClassCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteClassCodeField, value) != true)) {
                    this.StatuteClassCodeField = value;
                    this.RaisePropertyChanged("StatuteClassCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatuteClassDescription {
            get {
                return this.StatuteClassDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteClassDescriptionField, value) != true)) {
                    this.StatuteClassDescriptionField = value;
                    this.RaisePropertyChanged("StatuteClassDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatuteCode {
            get {
                return this.StatuteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteCodeField, value) != true)) {
                    this.StatuteCodeField = value;
                    this.RaisePropertyChanged("StatuteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte StatuteCompareDate {
            get {
                return this.StatuteCompareDateField;
            }
            set {
                if ((this.StatuteCompareDateField.Equals(value) != true)) {
                    this.StatuteCompareDateField = value;
                    this.RaisePropertyChanged("StatuteCompareDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatuteDescription {
            get {
                return this.StatuteDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteDescriptionField, value) != true)) {
                    this.StatuteDescriptionField = value;
                    this.RaisePropertyChanged("StatuteDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatuteEnhancerModifier {
            get {
                return this.StatuteEnhancerModifierField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteEnhancerModifierField, value) != true)) {
                    this.StatuteEnhancerModifierField = value;
                    this.RaisePropertyChanged("StatuteEnhancerModifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StatuteExpirationDate {
            get {
                return this.StatuteExpirationDateField;
            }
            set {
                if ((this.StatuteExpirationDateField.Equals(value) != true)) {
                    this.StatuteExpirationDateField = value;
                    this.RaisePropertyChanged("StatuteExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatuteID {
            get {
                return this.StatuteIDField;
            }
            set {
                if ((this.StatuteIDField.Equals(value) != true)) {
                    this.StatuteIDField = value;
                    this.RaisePropertyChanged("StatuteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatuteIDIsChanged {
            get {
                return this.StatuteIDIsChangedField;
            }
            set {
                if ((this.StatuteIDIsChangedField.Equals(value) != true)) {
                    this.StatuteIDIsChangedField = value;
                    this.RaisePropertyChanged("StatuteIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatutePenalty {
            get {
                return this.StatutePenaltyField;
            }
            set {
                if ((object.ReferenceEquals(this.StatutePenaltyField, value) != true)) {
                    this.StatutePenaltyField = value;
                    this.RaisePropertyChanged("StatutePenalty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatuteSeverityCode {
            get {
                return this.StatuteSeverityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteSeverityCodeField, value) != true)) {
                    this.StatuteSeverityCodeField = value;
                    this.RaisePropertyChanged("StatuteSeverityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatuteSeverityDescription {
            get {
                return this.StatuteSeverityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteSeverityDescriptionField, value) != true)) {
                    this.StatuteSeverityDescriptionField = value;
                    this.RaisePropertyChanged("StatuteSeverityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatuteShortDescription {
            get {
                return this.StatuteShortDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteShortDescriptionField, value) != true)) {
                    this.StatuteShortDescriptionField = value;
                    this.RaisePropertyChanged("StatuteShortDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatuteSourceCode {
            get {
                return this.StatuteSourceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteSourceCodeField, value) != true)) {
                    this.StatuteSourceCodeField = value;
                    this.RaisePropertyChanged("StatuteSourceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatuteSourceDescription {
            get {
                return this.StatuteSourceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteSourceDescriptionField, value) != true)) {
                    this.StatuteSourceDescriptionField = value;
                    this.RaisePropertyChanged("StatuteSourceDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChargeAttribute", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ChargeAttribute : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChargeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> CountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListValueCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ListValueCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValueIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChargeID {
            get {
                return this.ChargeIDField;
            }
            set {
                if ((this.ChargeIDField.Equals(value) != true)) {
                    this.ChargeIDField = value;
                    this.RaisePropertyChanged("ChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> CountNumber {
            get {
                return this.CountNumberField;
            }
            set {
                if ((this.CountNumberField.Equals(value) != true)) {
                    this.CountNumberField = value;
                    this.RaisePropertyChanged("CountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountTypeCode {
            get {
                return this.CountTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountTypeCodeField, value) != true)) {
                    this.CountTypeCodeField = value;
                    this.RaisePropertyChanged("CountTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListValueCode {
            get {
                return this.ListValueCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ListValueCodeField, value) != true)) {
                    this.ListValueCodeField = value;
                    this.RaisePropertyChanged("ListValueCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ListValueCodeIsChanged {
            get {
                return this.ListValueCodeIsChangedField;
            }
            set {
                if ((this.ListValueCodeIsChangedField.Equals(value) != true)) {
                    this.ListValueCodeIsChangedField = value;
                    this.RaisePropertyChanged("ListValueCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Notify {
            get {
                return this.NotifyField;
            }
            set {
                if ((this.NotifyField.Equals(value) != true)) {
                    this.NotifyField = value;
                    this.RaisePropertyChanged("Notify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValueIsChanged {
            get {
                return this.ValueIsChangedField;
            }
            set {
                if ((this.ValueIsChangedField.Equals(value) != true)) {
                    this.ValueIsChangedField = value;
                    this.RaisePropertyChanged("ValueIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChargeAgency", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ChargeAgency : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Agency AgencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AgencyIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte AgencyMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Charge ChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChargeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ChargeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CountTypeDescIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CountTypeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Agency Agency {
            get {
                return this.AgencyField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyField, value) != true)) {
                    this.AgencyField = value;
                    this.RaisePropertyChanged("Agency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyCode {
            get {
                return this.AgencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyCodeField, value) != true)) {
                    this.AgencyCodeField = value;
                    this.RaisePropertyChanged("AgencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgencyID {
            get {
                return this.AgencyIDField;
            }
            set {
                if ((this.AgencyIDField.Equals(value) != true)) {
                    this.AgencyIDField = value;
                    this.RaisePropertyChanged("AgencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AgencyIDIsChanged {
            get {
                return this.AgencyIDIsChangedField;
            }
            set {
                if ((this.AgencyIDIsChangedField.Equals(value) != true)) {
                    this.AgencyIDIsChangedField = value;
                    this.RaisePropertyChanged("AgencyIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte AgencyMasterCode {
            get {
                return this.AgencyMasterCodeField;
            }
            set {
                if ((this.AgencyMasterCodeField.Equals(value) != true)) {
                    this.AgencyMasterCodeField = value;
                    this.RaisePropertyChanged("AgencyMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Charge Charge {
            get {
                return this.ChargeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeField, value) != true)) {
                    this.ChargeField = value;
                    this.RaisePropertyChanged("Charge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChargeID {
            get {
                return this.ChargeIDField;
            }
            set {
                if ((this.ChargeIDField.Equals(value) != true)) {
                    this.ChargeIDField = value;
                    this.RaisePropertyChanged("ChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeIDIsChanged {
            get {
                return this.ChargeIDIsChangedField;
            }
            set {
                if ((this.ChargeIDIsChangedField.Equals(value) != true)) {
                    this.ChargeIDIsChangedField = value;
                    this.RaisePropertyChanged("ChargeIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ChargeNumber {
            get {
                return this.ChargeNumberField;
            }
            set {
                if ((this.ChargeNumberField.Equals(value) != true)) {
                    this.ChargeNumberField = value;
                    this.RaisePropertyChanged("ChargeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountType {
            get {
                return this.CountTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountTypeField, value) != true)) {
                    this.CountTypeField = value;
                    this.RaisePropertyChanged("CountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountTypeDesc {
            get {
                return this.CountTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CountTypeDescField, value) != true)) {
                    this.CountTypeDescField = value;
                    this.RaisePropertyChanged("CountTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CountTypeDescIsChanged {
            get {
                return this.CountTypeDescIsChangedField;
            }
            set {
                if ((this.CountTypeDescIsChangedField.Equals(value) != true)) {
                    this.CountTypeDescIsChangedField = value;
                    this.RaisePropertyChanged("CountTypeDescIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CountTypeIsChanged {
            get {
                return this.CountTypeIsChangedField;
            }
            set {
                if ((this.CountTypeIsChangedField.Equals(value) != true)) {
                    this.CountTypeIsChangedField = value;
                    this.RaisePropertyChanged("CountTypeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChargeEnhancement", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ChargeEnhancement : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Charge ChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChargeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ChargeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ElementCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ElementCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PenaltyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatuteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatuteIDIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Charge Charge {
            get {
                return this.ChargeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeField, value) != true)) {
                    this.ChargeField = value;
                    this.RaisePropertyChanged("Charge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChargeID {
            get {
                return this.ChargeIDField;
            }
            set {
                if ((this.ChargeIDField.Equals(value) != true)) {
                    this.ChargeIDField = value;
                    this.RaisePropertyChanged("ChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeIDIsChanged {
            get {
                return this.ChargeIDIsChangedField;
            }
            set {
                if ((this.ChargeIDIsChangedField.Equals(value) != true)) {
                    this.ChargeIDIsChangedField = value;
                    this.RaisePropertyChanged("ChargeIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ChargeNumber {
            get {
                return this.ChargeNumberField;
            }
            set {
                if ((this.ChargeNumberField.Equals(value) != true)) {
                    this.ChargeNumberField = value;
                    this.RaisePropertyChanged("ChargeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountTypeCode {
            get {
                return this.CountTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountTypeCodeField, value) != true)) {
                    this.CountTypeCodeField = value;
                    this.RaisePropertyChanged("CountTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ElementCode {
            get {
                return this.ElementCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ElementCodeField, value) != true)) {
                    this.ElementCodeField = value;
                    this.RaisePropertyChanged("ElementCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ElementCodeIsChanged {
            get {
                return this.ElementCodeIsChangedField;
            }
            set {
                if ((this.ElementCodeIsChangedField.Equals(value) != true)) {
                    this.ElementCodeIsChangedField = value;
                    this.RaisePropertyChanged("ElementCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Penalty {
            get {
                return this.PenaltyField;
            }
            set {
                if ((object.ReferenceEquals(this.PenaltyField, value) != true)) {
                    this.PenaltyField = value;
                    this.RaisePropertyChanged("Penalty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatuteID {
            get {
                return this.StatuteIDField;
            }
            set {
                if ((this.StatuteIDField.Equals(value) != true)) {
                    this.StatuteIDField = value;
                    this.RaisePropertyChanged("StatuteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatuteIDIsChanged {
            get {
                return this.StatuteIDIsChangedField;
            }
            set {
                if ((this.StatuteIDIsChangedField.Equals(value) != true)) {
                    this.StatuteIDIsChangedField = value;
                    this.RaisePropertyChanged("StatuteIDIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChargeHistory", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ChargeHistory : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Charge ChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChargeHistoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeHistoryMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChargeHistoryTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChargeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeInvolvedNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeInvolvedNameNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ChargeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispositionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DispositionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispositionDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DispositionMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PenaltyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PleaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PleaDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PleaDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PleaMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreviousCountTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> PreviousCountTypeMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeverityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatuteCombinedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatuteIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Charge Charge {
            get {
                return this.ChargeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeField, value) != true)) {
                    this.ChargeField = value;
                    this.RaisePropertyChanged("Charge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChargeHistoryDescription {
            get {
                return this.ChargeHistoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeHistoryDescriptionField, value) != true)) {
                    this.ChargeHistoryDescriptionField = value;
                    this.RaisePropertyChanged("ChargeHistoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeHistoryMasterCode {
            get {
                return this.ChargeHistoryMasterCodeField;
            }
            set {
                if ((this.ChargeHistoryMasterCodeField.Equals(value) != true)) {
                    this.ChargeHistoryMasterCodeField = value;
                    this.RaisePropertyChanged("ChargeHistoryMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChargeHistoryTypeCode {
            get {
                return this.ChargeHistoryTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeHistoryTypeCodeField, value) != true)) {
                    this.ChargeHistoryTypeCodeField = value;
                    this.RaisePropertyChanged("ChargeHistoryTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChargeID {
            get {
                return this.ChargeIDField;
            }
            set {
                if ((this.ChargeIDField.Equals(value) != true)) {
                    this.ChargeIDField = value;
                    this.RaisePropertyChanged("ChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeInvolvedNameID {
            get {
                return this.ChargeInvolvedNameIDField;
            }
            set {
                if ((this.ChargeInvolvedNameIDField.Equals(value) != true)) {
                    this.ChargeInvolvedNameIDField = value;
                    this.RaisePropertyChanged("ChargeInvolvedNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeInvolvedNameNameID {
            get {
                return this.ChargeInvolvedNameNameIDField;
            }
            set {
                if ((this.ChargeInvolvedNameNameIDField.Equals(value) != true)) {
                    this.ChargeInvolvedNameNameIDField = value;
                    this.RaisePropertyChanged("ChargeInvolvedNameNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ChargeNumber {
            get {
                return this.ChargeNumberField;
            }
            set {
                if ((this.ChargeNumberField.Equals(value) != true)) {
                    this.ChargeNumberField = value;
                    this.RaisePropertyChanged("ChargeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassCode {
            get {
                return this.ClassCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassCodeField, value) != true)) {
                    this.ClassCodeField = value;
                    this.RaisePropertyChanged("ClassCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispositionCode {
            get {
                return this.DispositionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DispositionCodeField, value) != true)) {
                    this.DispositionCodeField = value;
                    this.RaisePropertyChanged("DispositionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DispositionDate {
            get {
                return this.DispositionDateField;
            }
            set {
                if ((this.DispositionDateField.Equals(value) != true)) {
                    this.DispositionDateField = value;
                    this.RaisePropertyChanged("DispositionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispositionDescription {
            get {
                return this.DispositionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DispositionDescriptionField, value) != true)) {
                    this.DispositionDescriptionField = value;
                    this.RaisePropertyChanged("DispositionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DispositionMasterCode {
            get {
                return this.DispositionMasterCodeField;
            }
            set {
                if ((this.DispositionMasterCodeField.Equals(value) != true)) {
                    this.DispositionMasterCodeField = value;
                    this.RaisePropertyChanged("DispositionMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Penalty {
            get {
                return this.PenaltyField;
            }
            set {
                if ((object.ReferenceEquals(this.PenaltyField, value) != true)) {
                    this.PenaltyField = value;
                    this.RaisePropertyChanged("Penalty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PleaCode {
            get {
                return this.PleaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PleaCodeField, value) != true)) {
                    this.PleaCodeField = value;
                    this.RaisePropertyChanged("PleaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PleaDate {
            get {
                return this.PleaDateField;
            }
            set {
                if ((this.PleaDateField.Equals(value) != true)) {
                    this.PleaDateField = value;
                    this.RaisePropertyChanged("PleaDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PleaDescription {
            get {
                return this.PleaDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PleaDescriptionField, value) != true)) {
                    this.PleaDescriptionField = value;
                    this.RaisePropertyChanged("PleaDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PleaMasterCode {
            get {
                return this.PleaMasterCodeField;
            }
            set {
                if ((this.PleaMasterCodeField.Equals(value) != true)) {
                    this.PleaMasterCodeField = value;
                    this.RaisePropertyChanged("PleaMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreviousCountTypeCode {
            get {
                return this.PreviousCountTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PreviousCountTypeCodeField, value) != true)) {
                    this.PreviousCountTypeCodeField = value;
                    this.RaisePropertyChanged("PreviousCountTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> PreviousCountTypeMasterCode {
            get {
                return this.PreviousCountTypeMasterCodeField;
            }
            set {
                if ((this.PreviousCountTypeMasterCodeField.Equals(value) != true)) {
                    this.PreviousCountTypeMasterCodeField = value;
                    this.RaisePropertyChanged("PreviousCountTypeMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeverityCode {
            get {
                return this.SeverityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SeverityCodeField, value) != true)) {
                    this.SeverityCodeField = value;
                    this.RaisePropertyChanged("SeverityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatuteCombined {
            get {
                return this.StatuteCombinedField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteCombinedField, value) != true)) {
                    this.StatuteCombinedField = value;
                    this.RaisePropertyChanged("StatuteCombined");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatuteID {
            get {
                return this.StatuteIDField;
            }
            set {
                if ((this.StatuteIDField.Equals(value) != true)) {
                    this.StatuteIDField = value;
                    this.RaisePropertyChanged("StatuteID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChargeInvolvedName", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ChargeInvolvedName : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Bond> BondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.CaseInvolvedName CaseInvolvedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseInvolvedNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseInvolvedNameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChargeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ChargeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Condition> ConditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> CountTypeMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispositionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DispositionCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DispositionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DispositionDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Notes2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Notes2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Obligation> ObligationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PleaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PleaCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PleaDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PleaDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Sentence> SentencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatuteIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Bond> Bonds {
            get {
                return this.BondsField;
            }
            set {
                if ((object.ReferenceEquals(this.BondsField, value) != true)) {
                    this.BondsField = value;
                    this.RaisePropertyChanged("Bonds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.CaseInvolvedName CaseInvolvedName {
            get {
                return this.CaseInvolvedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseInvolvedNameField, value) != true)) {
                    this.CaseInvolvedNameField = value;
                    this.RaisePropertyChanged("CaseInvolvedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseInvolvedNameID {
            get {
                return this.CaseInvolvedNameIDField;
            }
            set {
                if ((this.CaseInvolvedNameIDField.Equals(value) != true)) {
                    this.CaseInvolvedNameIDField = value;
                    this.RaisePropertyChanged("CaseInvolvedNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseInvolvedNameIDIsChanged {
            get {
                return this.CaseInvolvedNameIDIsChangedField;
            }
            set {
                if ((this.CaseInvolvedNameIDIsChangedField.Equals(value) != true)) {
                    this.CaseInvolvedNameIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseInvolvedNameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChargeID {
            get {
                return this.ChargeIDField;
            }
            set {
                if ((this.ChargeIDField.Equals(value) != true)) {
                    this.ChargeIDField = value;
                    this.RaisePropertyChanged("ChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ChargeNumber {
            get {
                return this.ChargeNumberField;
            }
            set {
                if ((this.ChargeNumberField.Equals(value) != true)) {
                    this.ChargeNumberField = value;
                    this.RaisePropertyChanged("ChargeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Condition> Conditions {
            get {
                return this.ConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionsField, value) != true)) {
                    this.ConditionsField = value;
                    this.RaisePropertyChanged("Conditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountTypeCode {
            get {
                return this.CountTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountTypeCodeField, value) != true)) {
                    this.CountTypeCodeField = value;
                    this.RaisePropertyChanged("CountTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> CountTypeMasterCode {
            get {
                return this.CountTypeMasterCodeField;
            }
            set {
                if ((this.CountTypeMasterCodeField.Equals(value) != true)) {
                    this.CountTypeMasterCodeField = value;
                    this.RaisePropertyChanged("CountTypeMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispositionCode {
            get {
                return this.DispositionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DispositionCodeField, value) != true)) {
                    this.DispositionCodeField = value;
                    this.RaisePropertyChanged("DispositionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DispositionCodeIsChanged {
            get {
                return this.DispositionCodeIsChangedField;
            }
            set {
                if ((this.DispositionCodeIsChangedField.Equals(value) != true)) {
                    this.DispositionCodeIsChangedField = value;
                    this.RaisePropertyChanged("DispositionCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DispositionDate {
            get {
                return this.DispositionDateField;
            }
            set {
                if ((this.DispositionDateField.Equals(value) != true)) {
                    this.DispositionDateField = value;
                    this.RaisePropertyChanged("DispositionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DispositionDateIsChanged {
            get {
                return this.DispositionDateIsChangedField;
            }
            set {
                if ((this.DispositionDateIsChangedField.Equals(value) != true)) {
                    this.DispositionDateIsChangedField = value;
                    this.RaisePropertyChanged("DispositionDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes2 {
            get {
                return this.Notes2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Notes2Field, value) != true)) {
                    this.Notes2Field = value;
                    this.RaisePropertyChanged("Notes2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Notes2IsChanged {
            get {
                return this.Notes2IsChangedField;
            }
            set {
                if ((this.Notes2IsChangedField.Equals(value) != true)) {
                    this.Notes2IsChangedField = value;
                    this.RaisePropertyChanged("Notes2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Obligation> Obligations {
            get {
                return this.ObligationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ObligationsField, value) != true)) {
                    this.ObligationsField = value;
                    this.RaisePropertyChanged("Obligations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PleaCode {
            get {
                return this.PleaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PleaCodeField, value) != true)) {
                    this.PleaCodeField = value;
                    this.RaisePropertyChanged("PleaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PleaCodeIsChanged {
            get {
                return this.PleaCodeIsChangedField;
            }
            set {
                if ((this.PleaCodeIsChangedField.Equals(value) != true)) {
                    this.PleaCodeIsChangedField = value;
                    this.RaisePropertyChanged("PleaCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PleaDate {
            get {
                return this.PleaDateField;
            }
            set {
                if ((this.PleaDateField.Equals(value) != true)) {
                    this.PleaDateField = value;
                    this.RaisePropertyChanged("PleaDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PleaDateIsChanged {
            get {
                return this.PleaDateIsChangedField;
            }
            set {
                if ((this.PleaDateIsChangedField.Equals(value) != true)) {
                    this.PleaDateIsChangedField = value;
                    this.RaisePropertyChanged("PleaDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SealedIsChanged {
            get {
                return this.SealedIsChangedField;
            }
            set {
                if ((this.SealedIsChangedField.Equals(value) != true)) {
                    this.SealedIsChangedField = value;
                    this.RaisePropertyChanged("SealedIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Sentence> Sentences {
            get {
                return this.SentencesField;
            }
            set {
                if ((object.ReferenceEquals(this.SentencesField, value) != true)) {
                    this.SentencesField = value;
                    this.RaisePropertyChanged("Sentences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatuteID {
            get {
                return this.StatuteIDField;
            }
            set {
                if ((this.StatuteIDField.Equals(value) != true)) {
                    this.StatuteIDField = value;
                    this.RaisePropertyChanged("StatuteID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bond", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Bond : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AgencyIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AmountDueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountPaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.BondAmendment> BondAmendmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.BondCondition> BondConditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BondStatusTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BondStatusTypeCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BondTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BondTypeCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.ChargeInvolvedName ChargeInvolvedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeInvolvedNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeInvolvedNameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ForNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ForNameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayerFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PayerNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> PercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PercentageIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PostedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SetDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SetDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> VoucheredField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((this.AccountIDField.Equals(value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddDate {
            get {
                return this.AddDateField;
            }
            set {
                if ((this.AddDateField.Equals(value) != true)) {
                    this.AddDateField = value;
                    this.RaisePropertyChanged("AddDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Agency {
            get {
                return this.AgencyField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyField, value) != true)) {
                    this.AgencyField = value;
                    this.RaisePropertyChanged("Agency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AgencyIsChanged {
            get {
                return this.AgencyIsChangedField;
            }
            set {
                if ((this.AgencyIsChangedField.Equals(value) != true)) {
                    this.AgencyIsChangedField = value;
                    this.RaisePropertyChanged("AgencyIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AmountDue {
            get {
                return this.AmountDueField;
            }
            set {
                if ((this.AmountDueField.Equals(value) != true)) {
                    this.AmountDueField = value;
                    this.RaisePropertyChanged("AmountDue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountIsChanged {
            get {
                return this.AmountIsChangedField;
            }
            set {
                if ((this.AmountIsChangedField.Equals(value) != true)) {
                    this.AmountIsChangedField = value;
                    this.RaisePropertyChanged("AmountIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AmountPaid {
            get {
                return this.AmountPaidField;
            }
            set {
                if ((this.AmountPaidField.Equals(value) != true)) {
                    this.AmountPaidField = value;
                    this.RaisePropertyChanged("AmountPaid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.BondAmendment> BondAmendments {
            get {
                return this.BondAmendmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.BondAmendmentsField, value) != true)) {
                    this.BondAmendmentsField = value;
                    this.RaisePropertyChanged("BondAmendments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.BondCondition> BondConditions {
            get {
                return this.BondConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.BondConditionsField, value) != true)) {
                    this.BondConditionsField = value;
                    this.RaisePropertyChanged("BondConditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BondStatusTypeCode {
            get {
                return this.BondStatusTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BondStatusTypeCodeField, value) != true)) {
                    this.BondStatusTypeCodeField = value;
                    this.RaisePropertyChanged("BondStatusTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BondStatusTypeCodeIsChanged {
            get {
                return this.BondStatusTypeCodeIsChangedField;
            }
            set {
                if ((this.BondStatusTypeCodeIsChangedField.Equals(value) != true)) {
                    this.BondStatusTypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("BondStatusTypeCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BondTypeCode {
            get {
                return this.BondTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BondTypeCodeField, value) != true)) {
                    this.BondTypeCodeField = value;
                    this.RaisePropertyChanged("BondTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BondTypeCodeIsChanged {
            get {
                return this.BondTypeCodeIsChangedField;
            }
            set {
                if ((this.BondTypeCodeIsChangedField.Equals(value) != true)) {
                    this.BondTypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("BondTypeCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseIDIsChanged {
            get {
                return this.CaseIDIsChangedField;
            }
            set {
                if ((this.CaseIDIsChangedField.Equals(value) != true)) {
                    this.CaseIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.ChargeInvolvedName ChargeInvolvedName {
            get {
                return this.ChargeInvolvedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeInvolvedNameField, value) != true)) {
                    this.ChargeInvolvedNameField = value;
                    this.RaisePropertyChanged("ChargeInvolvedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeInvolvedNameID {
            get {
                return this.ChargeInvolvedNameIDField;
            }
            set {
                if ((this.ChargeInvolvedNameIDField.Equals(value) != true)) {
                    this.ChargeInvolvedNameIDField = value;
                    this.RaisePropertyChanged("ChargeInvolvedNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeInvolvedNameIDIsChanged {
            get {
                return this.ChargeInvolvedNameIDIsChangedField;
            }
            set {
                if ((this.ChargeInvolvedNameIDIsChangedField.Equals(value) != true)) {
                    this.ChargeInvolvedNameIDIsChangedField = value;
                    this.RaisePropertyChanged("ChargeInvolvedNameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForFullName {
            get {
                return this.ForFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ForFullNameField, value) != true)) {
                    this.ForFullNameField = value;
                    this.RaisePropertyChanged("ForFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ForNameID {
            get {
                return this.ForNameIDField;
            }
            set {
                if ((this.ForNameIDField.Equals(value) != true)) {
                    this.ForNameIDField = value;
                    this.RaisePropertyChanged("ForNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ForNameIDIsChanged {
            get {
                return this.ForNameIDIsChangedField;
            }
            set {
                if ((this.ForNameIDIsChangedField.Equals(value) != true)) {
                    this.ForNameIDIsChangedField = value;
                    this.RaisePropertyChanged("ForNameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayerFullName {
            get {
                return this.PayerFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayerFullNameField, value) != true)) {
                    this.PayerFullNameField = value;
                    this.RaisePropertyChanged("PayerFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PayerNameID {
            get {
                return this.PayerNameIDField;
            }
            set {
                if ((this.PayerNameIDField.Equals(value) != true)) {
                    this.PayerNameIDField = value;
                    this.RaisePropertyChanged("PayerNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> Percentage {
            get {
                return this.PercentageField;
            }
            set {
                if ((this.PercentageField.Equals(value) != true)) {
                    this.PercentageField = value;
                    this.RaisePropertyChanged("Percentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PercentageIsChanged {
            get {
                return this.PercentageIsChangedField;
            }
            set {
                if ((this.PercentageIsChangedField.Equals(value) != true)) {
                    this.PercentageIsChangedField = value;
                    this.RaisePropertyChanged("PercentageIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PostedDate {
            get {
                return this.PostedDateField;
            }
            set {
                if ((this.PostedDateField.Equals(value) != true)) {
                    this.PostedDateField = value;
                    this.RaisePropertyChanged("PostedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SetDate {
            get {
                return this.SetDateField;
            }
            set {
                if ((this.SetDateField.Equals(value) != true)) {
                    this.SetDateField = value;
                    this.RaisePropertyChanged("SetDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SetDateIsChanged {
            get {
                return this.SetDateIsChangedField;
            }
            set {
                if ((this.SetDateIsChangedField.Equals(value) != true)) {
                    this.SetDateIsChangedField = value;
                    this.RaisePropertyChanged("SetDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Vouchered {
            get {
                return this.VoucheredField;
            }
            set {
                if ((this.VoucheredField.Equals(value) != true)) {
                    this.VoucheredField = value;
                    this.RaisePropertyChanged("Vouchered");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BondAmendment", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class BondAmendment : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AmendmentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AmountDueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Bond BondField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BondIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BondStatusTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BondTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeInvolvedNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ForNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayerFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PayerNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> PercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PostedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SetDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((this.AccountIDField.Equals(value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyCode {
            get {
                return this.AgencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyCodeField, value) != true)) {
                    this.AgencyCodeField = value;
                    this.RaisePropertyChanged("AgencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AmendmentDate {
            get {
                return this.AmendmentDateField;
            }
            set {
                if ((this.AmendmentDateField.Equals(value) != true)) {
                    this.AmendmentDateField = value;
                    this.RaisePropertyChanged("AmendmentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AmountDue {
            get {
                return this.AmountDueField;
            }
            set {
                if ((this.AmountDueField.Equals(value) != true)) {
                    this.AmountDueField = value;
                    this.RaisePropertyChanged("AmountDue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Bond Bond {
            get {
                return this.BondField;
            }
            set {
                if ((object.ReferenceEquals(this.BondField, value) != true)) {
                    this.BondField = value;
                    this.RaisePropertyChanged("Bond");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BondID {
            get {
                return this.BondIDField;
            }
            set {
                if ((this.BondIDField.Equals(value) != true)) {
                    this.BondIDField = value;
                    this.RaisePropertyChanged("BondID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BondStatusTypeCode {
            get {
                return this.BondStatusTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BondStatusTypeCodeField, value) != true)) {
                    this.BondStatusTypeCodeField = value;
                    this.RaisePropertyChanged("BondStatusTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BondTypeCode {
            get {
                return this.BondTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BondTypeCodeField, value) != true)) {
                    this.BondTypeCodeField = value;
                    this.RaisePropertyChanged("BondTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeInvolvedNameID {
            get {
                return this.ChargeInvolvedNameIDField;
            }
            set {
                if ((this.ChargeInvolvedNameIDField.Equals(value) != true)) {
                    this.ChargeInvolvedNameIDField = value;
                    this.RaisePropertyChanged("ChargeInvolvedNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForFullName {
            get {
                return this.ForFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ForFullNameField, value) != true)) {
                    this.ForFullNameField = value;
                    this.RaisePropertyChanged("ForFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ForNameID {
            get {
                return this.ForNameIDField;
            }
            set {
                if ((this.ForNameIDField.Equals(value) != true)) {
                    this.ForNameIDField = value;
                    this.RaisePropertyChanged("ForNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayerFullName {
            get {
                return this.PayerFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PayerFullNameField, value) != true)) {
                    this.PayerFullNameField = value;
                    this.RaisePropertyChanged("PayerFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PayerNameID {
            get {
                return this.PayerNameIDField;
            }
            set {
                if ((this.PayerNameIDField.Equals(value) != true)) {
                    this.PayerNameIDField = value;
                    this.RaisePropertyChanged("PayerNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> Percentage {
            get {
                return this.PercentageField;
            }
            set {
                if ((this.PercentageField.Equals(value) != true)) {
                    this.PercentageField = value;
                    this.RaisePropertyChanged("Percentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PostedDate {
            get {
                return this.PostedDateField;
            }
            set {
                if ((this.PostedDateField.Equals(value) != true)) {
                    this.PostedDateField = value;
                    this.RaisePropertyChanged("PostedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SetDate {
            get {
                return this.SetDateField;
            }
            set {
                if ((this.SetDateField.Equals(value) != true)) {
                    this.SetDateField = value;
                    this.RaisePropertyChanged("SetDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BondCondition", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class BondCondition : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Bond BondField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BondConditionTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BondConditionTypeCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BondIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BondIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Bond Bond {
            get {
                return this.BondField;
            }
            set {
                if ((object.ReferenceEquals(this.BondField, value) != true)) {
                    this.BondField = value;
                    this.RaisePropertyChanged("Bond");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BondConditionTypeCode {
            get {
                return this.BondConditionTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BondConditionTypeCodeField, value) != true)) {
                    this.BondConditionTypeCodeField = value;
                    this.RaisePropertyChanged("BondConditionTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BondConditionTypeCodeIsChanged {
            get {
                return this.BondConditionTypeCodeIsChangedField;
            }
            set {
                if ((this.BondConditionTypeCodeIsChangedField.Equals(value) != true)) {
                    this.BondConditionTypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("BondConditionTypeCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BondID {
            get {
                return this.BondIDField;
            }
            set {
                if ((this.BondIDField.Equals(value) != true)) {
                    this.BondIDField = value;
                    this.RaisePropertyChanged("BondID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BondIDIsChanged {
            get {
                return this.BondIDIsChangedField;
            }
            set {
                if ((this.BondIDIsChangedField.Equals(value) != true)) {
                    this.BondIDIsChangedField = value;
                    this.RaisePropertyChanged("BondIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Condition", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Condition : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountFromDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountToDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CategoryCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.ChargeInvolvedName ChargeInvolvedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeInvolvedNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeInvolvedNameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ChargeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DurationDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventEndDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> EventMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocationCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParentEventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TitleIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountFrom {
            get {
                return this.AmountFromField;
            }
            set {
                if ((this.AmountFromField.Equals(value) != true)) {
                    this.AmountFromField = value;
                    this.RaisePropertyChanged("AmountFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountFromDescription {
            get {
                return this.AmountFromDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountFromDescriptionField, value) != true)) {
                    this.AmountFromDescriptionField = value;
                    this.RaisePropertyChanged("AmountFromDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromDescriptionIsChanged {
            get {
                return this.AmountFromDescriptionIsChangedField;
            }
            set {
                if ((this.AmountFromDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountFromDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromIsChanged {
            get {
                return this.AmountFromIsChangedField;
            }
            set {
                if ((this.AmountFromIsChangedField.Equals(value) != true)) {
                    this.AmountFromIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountTo {
            get {
                return this.AmountToField;
            }
            set {
                if ((this.AmountToField.Equals(value) != true)) {
                    this.AmountToField = value;
                    this.RaisePropertyChanged("AmountTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountToDescription {
            get {
                return this.AmountToDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountToDescriptionField, value) != true)) {
                    this.AmountToDescriptionField = value;
                    this.RaisePropertyChanged("AmountToDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToDescriptionIsChanged {
            get {
                return this.AmountToDescriptionIsChangedField;
            }
            set {
                if ((this.AmountToDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountToDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountToDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToIsChanged {
            get {
                return this.AmountToIsChangedField;
            }
            set {
                if ((this.AmountToIsChangedField.Equals(value) != true)) {
                    this.AmountToIsChangedField = value;
                    this.RaisePropertyChanged("AmountToIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseIDIsChanged {
            get {
                return this.CaseIDIsChangedField;
            }
            set {
                if ((this.CaseIDIsChangedField.Equals(value) != true)) {
                    this.CaseIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CategoryCodeIsChanged {
            get {
                return this.CategoryCodeIsChangedField;
            }
            set {
                if ((this.CategoryCodeIsChangedField.Equals(value) != true)) {
                    this.CategoryCodeIsChangedField = value;
                    this.RaisePropertyChanged("CategoryCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.ChargeInvolvedName ChargeInvolvedName {
            get {
                return this.ChargeInvolvedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeInvolvedNameField, value) != true)) {
                    this.ChargeInvolvedNameField = value;
                    this.RaisePropertyChanged("ChargeInvolvedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeInvolvedNameID {
            get {
                return this.ChargeInvolvedNameIDField;
            }
            set {
                if ((this.ChargeInvolvedNameIDField.Equals(value) != true)) {
                    this.ChargeInvolvedNameIDField = value;
                    this.RaisePropertyChanged("ChargeInvolvedNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeInvolvedNameIDIsChanged {
            get {
                return this.ChargeInvolvedNameIDIsChangedField;
            }
            set {
                if ((this.ChargeInvolvedNameIDIsChangedField.Equals(value) != true)) {
                    this.ChargeInvolvedNameIDIsChangedField = value;
                    this.RaisePropertyChanged("ChargeInvolvedNameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ChargeNumber {
            get {
                return this.ChargeNumberField;
            }
            set {
                if ((this.ChargeNumberField.Equals(value) != true)) {
                    this.ChargeNumberField = value;
                    this.RaisePropertyChanged("ChargeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency1 {
            get {
                return this.Currency1Field;
            }
            set {
                if ((this.Currency1Field.Equals(value) != true)) {
                    this.Currency1Field = value;
                    this.RaisePropertyChanged("Currency1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency1IsChanged {
            get {
                return this.Currency1IsChangedField;
            }
            set {
                if ((this.Currency1IsChangedField.Equals(value) != true)) {
                    this.Currency1IsChangedField = value;
                    this.RaisePropertyChanged("Currency1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency2 {
            get {
                return this.Currency2Field;
            }
            set {
                if ((this.Currency2Field.Equals(value) != true)) {
                    this.Currency2Field = value;
                    this.RaisePropertyChanged("Currency2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency2IsChanged {
            get {
                return this.Currency2IsChangedField;
            }
            set {
                if ((this.Currency2IsChangedField.Equals(value) != true)) {
                    this.Currency2IsChangedField = value;
                    this.RaisePropertyChanged("Currency2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsChanged {
            get {
                return this.DateIsChangedField;
            }
            set {
                if ((this.DateIsChangedField.Equals(value) != true)) {
                    this.DateIsChangedField = value;
                    this.RaisePropertyChanged("DateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationDescription {
            get {
                return this.DurationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationDescriptionField, value) != true)) {
                    this.DurationDescriptionField = value;
                    this.RaisePropertyChanged("DurationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DurationDescriptionIsChanged {
            get {
                return this.DurationDescriptionIsChangedField;
            }
            set {
                if ((this.DurationDescriptionIsChangedField.Equals(value) != true)) {
                    this.DurationDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("DurationDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventDateIsChanged {
            get {
                return this.EventDateIsChangedField;
            }
            set {
                if ((this.EventDateIsChangedField.Equals(value) != true)) {
                    this.EventDateIsChangedField = value;
                    this.RaisePropertyChanged("EventDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventEndDate {
            get {
                return this.EventEndDateField;
            }
            set {
                if ((this.EventEndDateField.Equals(value) != true)) {
                    this.EventEndDateField = value;
                    this.RaisePropertyChanged("EventEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventEndDateIsChanged {
            get {
                return this.EventEndDateIsChangedField;
            }
            set {
                if ((this.EventEndDateIsChangedField.Equals(value) != true)) {
                    this.EventEndDateIsChangedField = value;
                    this.RaisePropertyChanged("EventEndDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> EventMasterCode {
            get {
                return this.EventMasterCodeField;
            }
            set {
                if ((this.EventMasterCodeField.Equals(value) != true)) {
                    this.EventMasterCodeField = value;
                    this.RaisePropertyChanged("EventMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LocationCodeIsChanged {
            get {
                return this.LocationCodeIsChangedField;
            }
            set {
                if ((this.LocationCodeIsChangedField.Equals(value) != true)) {
                    this.LocationCodeIsChangedField = value;
                    this.RaisePropertyChanged("LocationCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentEventID {
            get {
                return this.ParentEventIDField;
            }
            set {
                if ((this.ParentEventIDField.Equals(value) != true)) {
                    this.ParentEventIDField = value;
                    this.RaisePropertyChanged("ParentEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ParentEventIDIsChanged {
            get {
                return this.ParentEventIDIsChangedField;
            }
            set {
                if ((this.ParentEventIDIsChangedField.Equals(value) != true)) {
                    this.ParentEventIDIsChangedField = value;
                    this.RaisePropertyChanged("ParentEventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatusMasterCode {
            get {
                return this.StatusMasterCodeField;
            }
            set {
                if ((this.StatusMasterCodeField.Equals(value) != true)) {
                    this.StatusMasterCodeField = value;
                    this.RaisePropertyChanged("StatusMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TitleIsChanged {
            get {
                return this.TitleIsChangedField;
            }
            set {
                if ((this.TitleIsChangedField.Equals(value) != true)) {
                    this.TitleIsChangedField = value;
                    this.RaisePropertyChanged("TitleIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sentence", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Sentence : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountFromDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountToDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CategoryCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.ChargeInvolvedName ChargeInvolvedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeInvolvedNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeInvolvedNameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> CountTypeMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DurationDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventEndDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocationCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParentEventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PriorityIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TitleIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountFrom {
            get {
                return this.AmountFromField;
            }
            set {
                if ((this.AmountFromField.Equals(value) != true)) {
                    this.AmountFromField = value;
                    this.RaisePropertyChanged("AmountFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountFromDescription {
            get {
                return this.AmountFromDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountFromDescriptionField, value) != true)) {
                    this.AmountFromDescriptionField = value;
                    this.RaisePropertyChanged("AmountFromDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromDescriptionIsChanged {
            get {
                return this.AmountFromDescriptionIsChangedField;
            }
            set {
                if ((this.AmountFromDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountFromDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromIsChanged {
            get {
                return this.AmountFromIsChangedField;
            }
            set {
                if ((this.AmountFromIsChangedField.Equals(value) != true)) {
                    this.AmountFromIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountTo {
            get {
                return this.AmountToField;
            }
            set {
                if ((this.AmountToField.Equals(value) != true)) {
                    this.AmountToField = value;
                    this.RaisePropertyChanged("AmountTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountToDescription {
            get {
                return this.AmountToDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountToDescriptionField, value) != true)) {
                    this.AmountToDescriptionField = value;
                    this.RaisePropertyChanged("AmountToDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToDescriptionIsChanged {
            get {
                return this.AmountToDescriptionIsChangedField;
            }
            set {
                if ((this.AmountToDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountToDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountToDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToIsChanged {
            get {
                return this.AmountToIsChangedField;
            }
            set {
                if ((this.AmountToIsChangedField.Equals(value) != true)) {
                    this.AmountToIsChangedField = value;
                    this.RaisePropertyChanged("AmountToIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CategoryCodeIsChanged {
            get {
                return this.CategoryCodeIsChangedField;
            }
            set {
                if ((this.CategoryCodeIsChangedField.Equals(value) != true)) {
                    this.CategoryCodeIsChangedField = value;
                    this.RaisePropertyChanged("CategoryCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.ChargeInvolvedName ChargeInvolvedName {
            get {
                return this.ChargeInvolvedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeInvolvedNameField, value) != true)) {
                    this.ChargeInvolvedNameField = value;
                    this.RaisePropertyChanged("ChargeInvolvedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeInvolvedNameID {
            get {
                return this.ChargeInvolvedNameIDField;
            }
            set {
                if ((this.ChargeInvolvedNameIDField.Equals(value) != true)) {
                    this.ChargeInvolvedNameIDField = value;
                    this.RaisePropertyChanged("ChargeInvolvedNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeInvolvedNameIDIsChanged {
            get {
                return this.ChargeInvolvedNameIDIsChangedField;
            }
            set {
                if ((this.ChargeInvolvedNameIDIsChangedField.Equals(value) != true)) {
                    this.ChargeInvolvedNameIDIsChangedField = value;
                    this.RaisePropertyChanged("ChargeInvolvedNameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountTypeCode {
            get {
                return this.CountTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountTypeCodeField, value) != true)) {
                    this.CountTypeCodeField = value;
                    this.RaisePropertyChanged("CountTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> CountTypeMasterCode {
            get {
                return this.CountTypeMasterCodeField;
            }
            set {
                if ((this.CountTypeMasterCodeField.Equals(value) != true)) {
                    this.CountTypeMasterCodeField = value;
                    this.RaisePropertyChanged("CountTypeMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency1 {
            get {
                return this.Currency1Field;
            }
            set {
                if ((this.Currency1Field.Equals(value) != true)) {
                    this.Currency1Field = value;
                    this.RaisePropertyChanged("Currency1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency1IsChanged {
            get {
                return this.Currency1IsChangedField;
            }
            set {
                if ((this.Currency1IsChangedField.Equals(value) != true)) {
                    this.Currency1IsChangedField = value;
                    this.RaisePropertyChanged("Currency1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency2 {
            get {
                return this.Currency2Field;
            }
            set {
                if ((this.Currency2Field.Equals(value) != true)) {
                    this.Currency2Field = value;
                    this.RaisePropertyChanged("Currency2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency2IsChanged {
            get {
                return this.Currency2IsChangedField;
            }
            set {
                if ((this.Currency2IsChangedField.Equals(value) != true)) {
                    this.Currency2IsChangedField = value;
                    this.RaisePropertyChanged("Currency2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsChanged {
            get {
                return this.DateIsChangedField;
            }
            set {
                if ((this.DateIsChangedField.Equals(value) != true)) {
                    this.DateIsChangedField = value;
                    this.RaisePropertyChanged("DateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationDescription {
            get {
                return this.DurationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationDescriptionField, value) != true)) {
                    this.DurationDescriptionField = value;
                    this.RaisePropertyChanged("DurationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DurationDescriptionIsChanged {
            get {
                return this.DurationDescriptionIsChangedField;
            }
            set {
                if ((this.DurationDescriptionIsChangedField.Equals(value) != true)) {
                    this.DurationDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("DurationDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventDateIsChanged {
            get {
                return this.EventDateIsChangedField;
            }
            set {
                if ((this.EventDateIsChangedField.Equals(value) != true)) {
                    this.EventDateIsChangedField = value;
                    this.RaisePropertyChanged("EventDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventEndDate {
            get {
                return this.EventEndDateField;
            }
            set {
                if ((this.EventEndDateField.Equals(value) != true)) {
                    this.EventEndDateField = value;
                    this.RaisePropertyChanged("EventEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventEndDateIsChanged {
            get {
                return this.EventEndDateIsChangedField;
            }
            set {
                if ((this.EventEndDateIsChangedField.Equals(value) != true)) {
                    this.EventEndDateIsChangedField = value;
                    this.RaisePropertyChanged("EventEndDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LocationCodeIsChanged {
            get {
                return this.LocationCodeIsChangedField;
            }
            set {
                if ((this.LocationCodeIsChangedField.Equals(value) != true)) {
                    this.LocationCodeIsChangedField = value;
                    this.RaisePropertyChanged("LocationCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentEventID {
            get {
                return this.ParentEventIDField;
            }
            set {
                if ((this.ParentEventIDField.Equals(value) != true)) {
                    this.ParentEventIDField = value;
                    this.RaisePropertyChanged("ParentEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ParentEventIDIsChanged {
            get {
                return this.ParentEventIDIsChangedField;
            }
            set {
                if ((this.ParentEventIDIsChangedField.Equals(value) != true)) {
                    this.ParentEventIDIsChangedField = value;
                    this.RaisePropertyChanged("ParentEventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PriorityIsChanged {
            get {
                return this.PriorityIsChangedField;
            }
            set {
                if ((this.PriorityIsChangedField.Equals(value) != true)) {
                    this.PriorityIsChangedField = value;
                    this.RaisePropertyChanged("PriorityIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TitleIsChanged {
            get {
                return this.TitleIsChangedField;
            }
            set {
                if ((this.TitleIsChangedField.Equals(value) != true)) {
                    this.TitleIsChangedField = value;
                    this.RaisePropertyChanged("TitleIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Exhibit", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Exhibit : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Case CaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Charge ChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ChargeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EnteredDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnteredDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExhibitNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExhibitNameIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PhysicalLocationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PhysicalLocationIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReceivedDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValueIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Case Case {
            get {
                return this.CaseField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseField, value) != true)) {
                    this.CaseField = value;
                    this.RaisePropertyChanged("Case");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseIDIsChanged {
            get {
                return this.CaseIDIsChangedField;
            }
            set {
                if ((this.CaseIDIsChangedField.Equals(value) != true)) {
                    this.CaseIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Charge Charge {
            get {
                return this.ChargeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeField, value) != true)) {
                    this.ChargeField = value;
                    this.RaisePropertyChanged("Charge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeID {
            get {
                return this.ChargeIDField;
            }
            set {
                if ((this.ChargeIDField.Equals(value) != true)) {
                    this.ChargeIDField = value;
                    this.RaisePropertyChanged("ChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeIDIsChanged {
            get {
                return this.ChargeIDIsChangedField;
            }
            set {
                if ((this.ChargeIDIsChangedField.Equals(value) != true)) {
                    this.ChargeIDIsChangedField = value;
                    this.RaisePropertyChanged("ChargeIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ChargeNumber {
            get {
                return this.ChargeNumberField;
            }
            set {
                if ((this.ChargeNumberField.Equals(value) != true)) {
                    this.ChargeNumberField = value;
                    this.RaisePropertyChanged("ChargeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountTypeCode {
            get {
                return this.CountTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountTypeCodeField, value) != true)) {
                    this.CountTypeCodeField = value;
                    this.RaisePropertyChanged("CountTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EnteredDate {
            get {
                return this.EnteredDateField;
            }
            set {
                if ((this.EnteredDateField.Equals(value) != true)) {
                    this.EnteredDateField = value;
                    this.RaisePropertyChanged("EnteredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnteredDateIsChanged {
            get {
                return this.EnteredDateIsChangedField;
            }
            set {
                if ((this.EnteredDateIsChangedField.Equals(value) != true)) {
                    this.EnteredDateIsChangedField = value;
                    this.RaisePropertyChanged("EnteredDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExhibitName {
            get {
                return this.ExhibitNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExhibitNameField, value) != true)) {
                    this.ExhibitNameField = value;
                    this.RaisePropertyChanged("ExhibitName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExhibitNameIsChanged {
            get {
                return this.ExhibitNameIsChangedField;
            }
            set {
                if ((this.ExhibitNameIsChangedField.Equals(value) != true)) {
                    this.ExhibitNameIsChangedField = value;
                    this.RaisePropertyChanged("ExhibitNameIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationDescription {
            get {
                return this.LocationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationDescriptionField, value) != true)) {
                    this.LocationDescriptionField = value;
                    this.RaisePropertyChanged("LocationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NameIDIsChanged {
            get {
                return this.NameIDIsChangedField;
            }
            set {
                if ((this.NameIDIsChangedField.Equals(value) != true)) {
                    this.NameIDIsChangedField = value;
                    this.RaisePropertyChanged("NameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PhysicalLocationID {
            get {
                return this.PhysicalLocationIDField;
            }
            set {
                if ((this.PhysicalLocationIDField.Equals(value) != true)) {
                    this.PhysicalLocationIDField = value;
                    this.RaisePropertyChanged("PhysicalLocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PhysicalLocationIDIsChanged {
            get {
                return this.PhysicalLocationIDIsChangedField;
            }
            set {
                if ((this.PhysicalLocationIDIsChangedField.Equals(value) != true)) {
                    this.PhysicalLocationIDIsChangedField = value;
                    this.RaisePropertyChanged("PhysicalLocationIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReceivedDateIsChanged {
            get {
                return this.ReceivedDateIsChangedField;
            }
            set {
                if ((this.ReceivedDateIsChangedField.Equals(value) != true)) {
                    this.ReceivedDateIsChangedField = value;
                    this.RaisePropertyChanged("ReceivedDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValueIsChanged {
            get {
                return this.ValueIsChangedField;
            }
            set {
                if ((this.ValueIsChangedField.Equals(value) != true)) {
                    this.ValueIsChangedField = value;
                    this.RaisePropertyChanged("ValueIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Intoxicant", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Intoxicant : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChargeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ChargeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntoxicantCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IntoxicantCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> IntoxicantValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IntoxicantValueIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChargeID {
            get {
                return this.ChargeIDField;
            }
            set {
                if ((this.ChargeIDField.Equals(value) != true)) {
                    this.ChargeIDField = value;
                    this.RaisePropertyChanged("ChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeIDIsChanged {
            get {
                return this.ChargeIDIsChangedField;
            }
            set {
                if ((this.ChargeIDIsChangedField.Equals(value) != true)) {
                    this.ChargeIDIsChangedField = value;
                    this.RaisePropertyChanged("ChargeIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ChargeNumber {
            get {
                return this.ChargeNumberField;
            }
            set {
                if ((this.ChargeNumberField.Equals(value) != true)) {
                    this.ChargeNumberField = value;
                    this.RaisePropertyChanged("ChargeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountTypeCode {
            get {
                return this.CountTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountTypeCodeField, value) != true)) {
                    this.CountTypeCodeField = value;
                    this.RaisePropertyChanged("CountTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntoxicantCode {
            get {
                return this.IntoxicantCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IntoxicantCodeField, value) != true)) {
                    this.IntoxicantCodeField = value;
                    this.RaisePropertyChanged("IntoxicantCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IntoxicantCodeIsChanged {
            get {
                return this.IntoxicantCodeIsChangedField;
            }
            set {
                if ((this.IntoxicantCodeIsChangedField.Equals(value) != true)) {
                    this.IntoxicantCodeIsChangedField = value;
                    this.RaisePropertyChanged("IntoxicantCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> IntoxicantValue {
            get {
                return this.IntoxicantValueField;
            }
            set {
                if ((this.IntoxicantValueField.Equals(value) != true)) {
                    this.IntoxicantValueField = value;
                    this.RaisePropertyChanged("IntoxicantValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IntoxicantValueIsChanged {
            get {
                return this.IntoxicantValueIsChangedField;
            }
            set {
                if ((this.IntoxicantValueIsChangedField.Equals(value) != true)) {
                    this.IntoxicantValueIsChangedField = value;
                    this.RaisePropertyChanged("IntoxicantValueIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Judgment", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Judgment : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseInvolvedNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseInvolvedNameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChargeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> CountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> CountTypeMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispositionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DispositionCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DispositionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DispositionDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.CaseEvent JudgmentEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JudgmentEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool JudgmentEventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Notes2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Notes2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PleaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PleaCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PleaDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PleaDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatuteIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseInvolvedNameID {
            get {
                return this.CaseInvolvedNameIDField;
            }
            set {
                if ((this.CaseInvolvedNameIDField.Equals(value) != true)) {
                    this.CaseInvolvedNameIDField = value;
                    this.RaisePropertyChanged("CaseInvolvedNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseInvolvedNameIDIsChanged {
            get {
                return this.CaseInvolvedNameIDIsChangedField;
            }
            set {
                if ((this.CaseInvolvedNameIDIsChangedField.Equals(value) != true)) {
                    this.CaseInvolvedNameIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseInvolvedNameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChargeID {
            get {
                return this.ChargeIDField;
            }
            set {
                if ((this.ChargeIDField.Equals(value) != true)) {
                    this.ChargeIDField = value;
                    this.RaisePropertyChanged("ChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeIDIsChanged {
            get {
                return this.ChargeIDIsChangedField;
            }
            set {
                if ((this.ChargeIDIsChangedField.Equals(value) != true)) {
                    this.ChargeIDIsChangedField = value;
                    this.RaisePropertyChanged("ChargeIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> CountNumber {
            get {
                return this.CountNumberField;
            }
            set {
                if ((this.CountNumberField.Equals(value) != true)) {
                    this.CountNumberField = value;
                    this.RaisePropertyChanged("CountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountTypeCode {
            get {
                return this.CountTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountTypeCodeField, value) != true)) {
                    this.CountTypeCodeField = value;
                    this.RaisePropertyChanged("CountTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> CountTypeMasterCode {
            get {
                return this.CountTypeMasterCodeField;
            }
            set {
                if ((this.CountTypeMasterCodeField.Equals(value) != true)) {
                    this.CountTypeMasterCodeField = value;
                    this.RaisePropertyChanged("CountTypeMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispositionCode {
            get {
                return this.DispositionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DispositionCodeField, value) != true)) {
                    this.DispositionCodeField = value;
                    this.RaisePropertyChanged("DispositionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DispositionCodeIsChanged {
            get {
                return this.DispositionCodeIsChangedField;
            }
            set {
                if ((this.DispositionCodeIsChangedField.Equals(value) != true)) {
                    this.DispositionCodeIsChangedField = value;
                    this.RaisePropertyChanged("DispositionCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DispositionDate {
            get {
                return this.DispositionDateField;
            }
            set {
                if ((this.DispositionDateField.Equals(value) != true)) {
                    this.DispositionDateField = value;
                    this.RaisePropertyChanged("DispositionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DispositionDateIsChanged {
            get {
                return this.DispositionDateIsChangedField;
            }
            set {
                if ((this.DispositionDateIsChangedField.Equals(value) != true)) {
                    this.DispositionDateIsChangedField = value;
                    this.RaisePropertyChanged("DispositionDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.CaseEvent JudgmentEvent {
            get {
                return this.JudgmentEventField;
            }
            set {
                if ((object.ReferenceEquals(this.JudgmentEventField, value) != true)) {
                    this.JudgmentEventField = value;
                    this.RaisePropertyChanged("JudgmentEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JudgmentEventID {
            get {
                return this.JudgmentEventIDField;
            }
            set {
                if ((this.JudgmentEventIDField.Equals(value) != true)) {
                    this.JudgmentEventIDField = value;
                    this.RaisePropertyChanged("JudgmentEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool JudgmentEventIDIsChanged {
            get {
                return this.JudgmentEventIDIsChangedField;
            }
            set {
                if ((this.JudgmentEventIDIsChangedField.Equals(value) != true)) {
                    this.JudgmentEventIDIsChangedField = value;
                    this.RaisePropertyChanged("JudgmentEventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes2 {
            get {
                return this.Notes2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Notes2Field, value) != true)) {
                    this.Notes2Field = value;
                    this.RaisePropertyChanged("Notes2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Notes2IsChanged {
            get {
                return this.Notes2IsChangedField;
            }
            set {
                if ((this.Notes2IsChangedField.Equals(value) != true)) {
                    this.Notes2IsChangedField = value;
                    this.RaisePropertyChanged("Notes2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PleaCode {
            get {
                return this.PleaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PleaCodeField, value) != true)) {
                    this.PleaCodeField = value;
                    this.RaisePropertyChanged("PleaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PleaCodeIsChanged {
            get {
                return this.PleaCodeIsChangedField;
            }
            set {
                if ((this.PleaCodeIsChangedField.Equals(value) != true)) {
                    this.PleaCodeIsChangedField = value;
                    this.RaisePropertyChanged("PleaCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PleaDate {
            get {
                return this.PleaDateField;
            }
            set {
                if ((this.PleaDateField.Equals(value) != true)) {
                    this.PleaDateField = value;
                    this.RaisePropertyChanged("PleaDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PleaDateIsChanged {
            get {
                return this.PleaDateIsChangedField;
            }
            set {
                if ((this.PleaDateIsChangedField.Equals(value) != true)) {
                    this.PleaDateIsChangedField = value;
                    this.RaisePropertyChanged("PleaDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SealedIsChanged {
            get {
                return this.SealedIsChangedField;
            }
            set {
                if ((this.SealedIsChangedField.Equals(value) != true)) {
                    this.SealedIsChangedField = value;
                    this.RaisePropertyChanged("SealedIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatuteID {
            get {
                return this.StatuteIDField;
            }
            set {
                if ((this.StatuteIDField.Equals(value) != true)) {
                    this.StatuteIDField = value;
                    this.RaisePropertyChanged("StatuteID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseEvent", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CaseEvent : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountFromDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountToDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Case CaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CategoryCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourtNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DaysPastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DocketIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocketIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.DocketInstance DocketInstanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DocketOccurrenceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocketOccurrenceIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DurationDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventEndDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.EventInvolvedName> EventInvolvedNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InitiatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InitiatedByIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocationCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParentEventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TitleIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountFrom {
            get {
                return this.AmountFromField;
            }
            set {
                if ((this.AmountFromField.Equals(value) != true)) {
                    this.AmountFromField = value;
                    this.RaisePropertyChanged("AmountFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountFromDescription {
            get {
                return this.AmountFromDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountFromDescriptionField, value) != true)) {
                    this.AmountFromDescriptionField = value;
                    this.RaisePropertyChanged("AmountFromDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromDescriptionIsChanged {
            get {
                return this.AmountFromDescriptionIsChangedField;
            }
            set {
                if ((this.AmountFromDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountFromDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromIsChanged {
            get {
                return this.AmountFromIsChangedField;
            }
            set {
                if ((this.AmountFromIsChangedField.Equals(value) != true)) {
                    this.AmountFromIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountTo {
            get {
                return this.AmountToField;
            }
            set {
                if ((this.AmountToField.Equals(value) != true)) {
                    this.AmountToField = value;
                    this.RaisePropertyChanged("AmountTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountToDescription {
            get {
                return this.AmountToDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountToDescriptionField, value) != true)) {
                    this.AmountToDescriptionField = value;
                    this.RaisePropertyChanged("AmountToDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToDescriptionIsChanged {
            get {
                return this.AmountToDescriptionIsChangedField;
            }
            set {
                if ((this.AmountToDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountToDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountToDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToIsChanged {
            get {
                return this.AmountToIsChangedField;
            }
            set {
                if ((this.AmountToIsChangedField.Equals(value) != true)) {
                    this.AmountToIsChangedField = value;
                    this.RaisePropertyChanged("AmountToIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Case Case {
            get {
                return this.CaseField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseField, value) != true)) {
                    this.CaseField = value;
                    this.RaisePropertyChanged("Case");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseIDIsChanged {
            get {
                return this.CaseIDIsChangedField;
            }
            set {
                if ((this.CaseIDIsChangedField.Equals(value) != true)) {
                    this.CaseIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CategoryCodeIsChanged {
            get {
                return this.CategoryCodeIsChangedField;
            }
            set {
                if ((this.CategoryCodeIsChangedField.Equals(value) != true)) {
                    this.CategoryCodeIsChangedField = value;
                    this.RaisePropertyChanged("CategoryCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeID {
            get {
                return this.ChargeIDField;
            }
            set {
                if ((this.ChargeIDField.Equals(value) != true)) {
                    this.ChargeIDField = value;
                    this.RaisePropertyChanged("ChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeIDIsChanged {
            get {
                return this.ChargeIDIsChangedField;
            }
            set {
                if ((this.ChargeIDIsChangedField.Equals(value) != true)) {
                    this.ChargeIDIsChangedField = value;
                    this.RaisePropertyChanged("ChargeIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte CodeType {
            get {
                return this.CodeTypeField;
            }
            set {
                if ((this.CodeTypeField.Equals(value) != true)) {
                    this.CodeTypeField = value;
                    this.RaisePropertyChanged("CodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourtNumber {
            get {
                return this.CourtNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CourtNumberField, value) != true)) {
                    this.CourtNumberField = value;
                    this.RaisePropertyChanged("CourtNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency1 {
            get {
                return this.Currency1Field;
            }
            set {
                if ((this.Currency1Field.Equals(value) != true)) {
                    this.Currency1Field = value;
                    this.RaisePropertyChanged("Currency1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency1IsChanged {
            get {
                return this.Currency1IsChangedField;
            }
            set {
                if ((this.Currency1IsChangedField.Equals(value) != true)) {
                    this.Currency1IsChangedField = value;
                    this.RaisePropertyChanged("Currency1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency2 {
            get {
                return this.Currency2Field;
            }
            set {
                if ((this.Currency2Field.Equals(value) != true)) {
                    this.Currency2Field = value;
                    this.RaisePropertyChanged("Currency2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency2IsChanged {
            get {
                return this.Currency2IsChangedField;
            }
            set {
                if ((this.Currency2IsChangedField.Equals(value) != true)) {
                    this.Currency2IsChangedField = value;
                    this.RaisePropertyChanged("Currency2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsChanged {
            get {
                return this.DateIsChangedField;
            }
            set {
                if ((this.DateIsChangedField.Equals(value) != true)) {
                    this.DateIsChangedField = value;
                    this.RaisePropertyChanged("DateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DaysPast {
            get {
                return this.DaysPastField;
            }
            set {
                if ((this.DaysPastField.Equals(value) != true)) {
                    this.DaysPastField = value;
                    this.RaisePropertyChanged("DaysPast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocketID {
            get {
                return this.DocketIDField;
            }
            set {
                if ((this.DocketIDField.Equals(value) != true)) {
                    this.DocketIDField = value;
                    this.RaisePropertyChanged("DocketID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocketIDIsChanged {
            get {
                return this.DocketIDIsChangedField;
            }
            set {
                if ((this.DocketIDIsChangedField.Equals(value) != true)) {
                    this.DocketIDIsChangedField = value;
                    this.RaisePropertyChanged("DocketIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.DocketInstance DocketInstance {
            get {
                return this.DocketInstanceField;
            }
            set {
                if ((object.ReferenceEquals(this.DocketInstanceField, value) != true)) {
                    this.DocketInstanceField = value;
                    this.RaisePropertyChanged("DocketInstance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocketOccurrenceID {
            get {
                return this.DocketOccurrenceIDField;
            }
            set {
                if ((this.DocketOccurrenceIDField.Equals(value) != true)) {
                    this.DocketOccurrenceIDField = value;
                    this.RaisePropertyChanged("DocketOccurrenceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocketOccurrenceIDIsChanged {
            get {
                return this.DocketOccurrenceIDIsChangedField;
            }
            set {
                if ((this.DocketOccurrenceIDIsChangedField.Equals(value) != true)) {
                    this.DocketOccurrenceIDIsChangedField = value;
                    this.RaisePropertyChanged("DocketOccurrenceIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationDescription {
            get {
                return this.DurationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationDescriptionField, value) != true)) {
                    this.DurationDescriptionField = value;
                    this.RaisePropertyChanged("DurationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DurationDescriptionIsChanged {
            get {
                return this.DurationDescriptionIsChangedField;
            }
            set {
                if ((this.DurationDescriptionIsChangedField.Equals(value) != true)) {
                    this.DurationDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("DurationDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventDateIsChanged {
            get {
                return this.EventDateIsChangedField;
            }
            set {
                if ((this.EventDateIsChangedField.Equals(value) != true)) {
                    this.EventDateIsChangedField = value;
                    this.RaisePropertyChanged("EventDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventEndDate {
            get {
                return this.EventEndDateField;
            }
            set {
                if ((this.EventEndDateField.Equals(value) != true)) {
                    this.EventEndDateField = value;
                    this.RaisePropertyChanged("EventEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventEndDateIsChanged {
            get {
                return this.EventEndDateIsChangedField;
            }
            set {
                if ((this.EventEndDateIsChangedField.Equals(value) != true)) {
                    this.EventEndDateIsChangedField = value;
                    this.RaisePropertyChanged("EventEndDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.EventInvolvedName> EventInvolvedNames {
            get {
                return this.EventInvolvedNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.EventInvolvedNamesField, value) != true)) {
                    this.EventInvolvedNamesField = value;
                    this.RaisePropertyChanged("EventInvolvedNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InitiatedBy {
            get {
                return this.InitiatedByField;
            }
            set {
                if ((this.InitiatedByField.Equals(value) != true)) {
                    this.InitiatedByField = value;
                    this.RaisePropertyChanged("InitiatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InitiatedByIsChanged {
            get {
                return this.InitiatedByIsChangedField;
            }
            set {
                if ((this.InitiatedByIsChangedField.Equals(value) != true)) {
                    this.InitiatedByIsChangedField = value;
                    this.RaisePropertyChanged("InitiatedByIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalID {
            get {
                return this.LocalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalIDField, value) != true)) {
                    this.LocalIDField = value;
                    this.RaisePropertyChanged("LocalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LocationCodeIsChanged {
            get {
                return this.LocationCodeIsChangedField;
            }
            set {
                if ((this.LocationCodeIsChangedField.Equals(value) != true)) {
                    this.LocationCodeIsChangedField = value;
                    this.RaisePropertyChanged("LocationCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentEventID {
            get {
                return this.ParentEventIDField;
            }
            set {
                if ((this.ParentEventIDField.Equals(value) != true)) {
                    this.ParentEventIDField = value;
                    this.RaisePropertyChanged("ParentEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ParentEventIDIsChanged {
            get {
                return this.ParentEventIDIsChangedField;
            }
            set {
                if ((this.ParentEventIDIsChangedField.Equals(value) != true)) {
                    this.ParentEventIDIsChangedField = value;
                    this.RaisePropertyChanged("ParentEventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SealedIsChanged {
            get {
                return this.SealedIsChangedField;
            }
            set {
                if ((this.SealedIsChangedField.Equals(value) != true)) {
                    this.SealedIsChangedField = value;
                    this.RaisePropertyChanged("SealedIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatusMasterCode {
            get {
                return this.StatusMasterCodeField;
            }
            set {
                if ((this.StatusMasterCodeField.Equals(value) != true)) {
                    this.StatusMasterCodeField = value;
                    this.RaisePropertyChanged("StatusMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TitleIsChanged {
            get {
                return this.TitleIsChangedField;
            }
            set {
                if ((this.TitleIsChangedField.Equals(value) != true)) {
                    this.TitleIsChangedField = value;
                    this.RaisePropertyChanged("TitleIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocketInstance", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class DocketInstance : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.CalendarDocket CalendarDocketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseEvent> CaseEventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocketCapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DocketIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocketNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventLocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventLocationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OccurrenceCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.CalendarDocket CalendarDocket {
            get {
                return this.CalendarDocketField;
            }
            set {
                if ((object.ReferenceEquals(this.CalendarDocketField, value) != true)) {
                    this.CalendarDocketField = value;
                    this.RaisePropertyChanged("CalendarDocket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseEvent> CaseEvents {
            get {
                return this.CaseEventsField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseEventsField, value) != true)) {
                    this.CaseEventsField = value;
                    this.RaisePropertyChanged("CaseEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocketCapacity {
            get {
                return this.DocketCapacityField;
            }
            set {
                if ((this.DocketCapacityField.Equals(value) != true)) {
                    this.DocketCapacityField = value;
                    this.RaisePropertyChanged("DocketCapacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocketID {
            get {
                return this.DocketIDField;
            }
            set {
                if ((this.DocketIDField.Equals(value) != true)) {
                    this.DocketIDField = value;
                    this.RaisePropertyChanged("DocketID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocketName {
            get {
                return this.DocketNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocketNameField, value) != true)) {
                    this.DocketNameField = value;
                    this.RaisePropertyChanged("DocketName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventEndDate {
            get {
                return this.EventEndDateField;
            }
            set {
                if ((this.EventEndDateField.Equals(value) != true)) {
                    this.EventEndDateField = value;
                    this.RaisePropertyChanged("EventEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventLocationCode {
            get {
                return this.EventLocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EventLocationCodeField, value) != true)) {
                    this.EventLocationCodeField = value;
                    this.RaisePropertyChanged("EventLocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventLocationDescription {
            get {
                return this.EventLocationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EventLocationDescriptionField, value) != true)) {
                    this.EventLocationDescriptionField = value;
                    this.RaisePropertyChanged("EventLocationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventTypeCode {
            get {
                return this.EventTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EventTypeCodeField, value) != true)) {
                    this.EventTypeCodeField = value;
                    this.RaisePropertyChanged("EventTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OccurrenceCount {
            get {
                return this.OccurrenceCountField;
            }
            set {
                if ((this.OccurrenceCountField.Equals(value) != true)) {
                    this.OccurrenceCountField = value;
                    this.RaisePropertyChanged("OccurrenceCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalendarDocket", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CalendarDocket : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DocketEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.DocketInstance> DocketInstancesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocketNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DocketStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LetterRangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OccurrenceEndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OccurrenceStartTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddDate {
            get {
                return this.AddDateField;
            }
            set {
                if ((this.AddDateField.Equals(value) != true)) {
                    this.AddDateField = value;
                    this.RaisePropertyChanged("AddDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DocketEndDate {
            get {
                return this.DocketEndDateField;
            }
            set {
                if ((this.DocketEndDateField.Equals(value) != true)) {
                    this.DocketEndDateField = value;
                    this.RaisePropertyChanged("DocketEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.DocketInstance> DocketInstances {
            get {
                return this.DocketInstancesField;
            }
            set {
                if ((object.ReferenceEquals(this.DocketInstancesField, value) != true)) {
                    this.DocketInstancesField = value;
                    this.RaisePropertyChanged("DocketInstances");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocketName {
            get {
                return this.DocketNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocketNameField, value) != true)) {
                    this.DocketNameField = value;
                    this.RaisePropertyChanged("DocketName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DocketStartDate {
            get {
                return this.DocketStartDateField;
            }
            set {
                if ((this.DocketStartDateField.Equals(value) != true)) {
                    this.DocketStartDateField = value;
                    this.RaisePropertyChanged("DocketStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LetterRange {
            get {
                return this.LetterRangeField;
            }
            set {
                if ((object.ReferenceEquals(this.LetterRangeField, value) != true)) {
                    this.LetterRangeField = value;
                    this.RaisePropertyChanged("LetterRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OccurrenceEndTime {
            get {
                return this.OccurrenceEndTimeField;
            }
            set {
                if ((this.OccurrenceEndTimeField.Equals(value) != true)) {
                    this.OccurrenceEndTimeField = value;
                    this.RaisePropertyChanged("OccurrenceEndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OccurrenceStartTime {
            get {
                return this.OccurrenceStartTimeField;
            }
            set {
                if ((this.OccurrenceStartTimeField.Equals(value) != true)) {
                    this.OccurrenceStartTimeField = value;
                    this.RaisePropertyChanged("OccurrenceStartTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Location : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Charge ChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> CountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JurisdictionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool JurisdictionCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocationDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Charge Charge {
            get {
                return this.ChargeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeField, value) != true)) {
                    this.ChargeField = value;
                    this.RaisePropertyChanged("Charge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeID {
            get {
                return this.ChargeIDField;
            }
            set {
                if ((this.ChargeIDField.Equals(value) != true)) {
                    this.ChargeIDField = value;
                    this.RaisePropertyChanged("ChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeIDIsChanged {
            get {
                return this.ChargeIDIsChangedField;
            }
            set {
                if ((this.ChargeIDIsChangedField.Equals(value) != true)) {
                    this.ChargeIDIsChangedField = value;
                    this.RaisePropertyChanged("ChargeIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> CountNumber {
            get {
                return this.CountNumberField;
            }
            set {
                if ((this.CountNumberField.Equals(value) != true)) {
                    this.CountNumberField = value;
                    this.RaisePropertyChanged("CountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountTypeCode {
            get {
                return this.CountTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountTypeCodeField, value) != true)) {
                    this.CountTypeCodeField = value;
                    this.RaisePropertyChanged("CountTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JurisdictionCode {
            get {
                return this.JurisdictionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.JurisdictionCodeField, value) != true)) {
                    this.JurisdictionCodeField = value;
                    this.RaisePropertyChanged("JurisdictionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool JurisdictionCodeIsChanged {
            get {
                return this.JurisdictionCodeIsChangedField;
            }
            set {
                if ((this.JurisdictionCodeIsChangedField.Equals(value) != true)) {
                    this.JurisdictionCodeIsChangedField = value;
                    this.RaisePropertyChanged("JurisdictionCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationDescription {
            get {
                return this.LocationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationDescriptionField, value) != true)) {
                    this.LocationDescriptionField = value;
                    this.RaisePropertyChanged("LocationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LocationDescriptionIsChanged {
            get {
                return this.LocationDescriptionIsChangedField;
            }
            set {
                if ((this.LocationDescriptionIsChangedField.Equals(value) != true)) {
                    this.LocationDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("LocationDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseCorrespondence", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CaseCorrespondence : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountFromDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountToDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Case CaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CategoryCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.CorrespondenceInvolvedName> CorrespondenceInvolvedNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourtNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DaysPastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DocketIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocketIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DocketOccurrenceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocketOccurrenceIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DurationDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EventCodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventEndDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EventMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InitiatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InitiatedByIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocationCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OccurrenceCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OccurrenceCountIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParentEventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TitleIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountFrom {
            get {
                return this.AmountFromField;
            }
            set {
                if ((this.AmountFromField.Equals(value) != true)) {
                    this.AmountFromField = value;
                    this.RaisePropertyChanged("AmountFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountFromDescription {
            get {
                return this.AmountFromDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountFromDescriptionField, value) != true)) {
                    this.AmountFromDescriptionField = value;
                    this.RaisePropertyChanged("AmountFromDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromDescriptionIsChanged {
            get {
                return this.AmountFromDescriptionIsChangedField;
            }
            set {
                if ((this.AmountFromDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountFromDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromIsChanged {
            get {
                return this.AmountFromIsChangedField;
            }
            set {
                if ((this.AmountFromIsChangedField.Equals(value) != true)) {
                    this.AmountFromIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountTo {
            get {
                return this.AmountToField;
            }
            set {
                if ((this.AmountToField.Equals(value) != true)) {
                    this.AmountToField = value;
                    this.RaisePropertyChanged("AmountTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountToDescription {
            get {
                return this.AmountToDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountToDescriptionField, value) != true)) {
                    this.AmountToDescriptionField = value;
                    this.RaisePropertyChanged("AmountToDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToDescriptionIsChanged {
            get {
                return this.AmountToDescriptionIsChangedField;
            }
            set {
                if ((this.AmountToDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountToDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountToDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToIsChanged {
            get {
                return this.AmountToIsChangedField;
            }
            set {
                if ((this.AmountToIsChangedField.Equals(value) != true)) {
                    this.AmountToIsChangedField = value;
                    this.RaisePropertyChanged("AmountToIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Case Case {
            get {
                return this.CaseField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseField, value) != true)) {
                    this.CaseField = value;
                    this.RaisePropertyChanged("Case");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseIDIsChanged {
            get {
                return this.CaseIDIsChangedField;
            }
            set {
                if ((this.CaseIDIsChangedField.Equals(value) != true)) {
                    this.CaseIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CategoryCodeIsChanged {
            get {
                return this.CategoryCodeIsChangedField;
            }
            set {
                if ((this.CategoryCodeIsChangedField.Equals(value) != true)) {
                    this.CategoryCodeIsChangedField = value;
                    this.RaisePropertyChanged("CategoryCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeID {
            get {
                return this.ChargeIDField;
            }
            set {
                if ((this.ChargeIDField.Equals(value) != true)) {
                    this.ChargeIDField = value;
                    this.RaisePropertyChanged("ChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeIDIsChanged {
            get {
                return this.ChargeIDIsChangedField;
            }
            set {
                if ((this.ChargeIDIsChangedField.Equals(value) != true)) {
                    this.ChargeIDIsChangedField = value;
                    this.RaisePropertyChanged("ChargeIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CorrespondenceInvolvedName> CorrespondenceInvolvedNames {
            get {
                return this.CorrespondenceInvolvedNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.CorrespondenceInvolvedNamesField, value) != true)) {
                    this.CorrespondenceInvolvedNamesField = value;
                    this.RaisePropertyChanged("CorrespondenceInvolvedNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourtNumber {
            get {
                return this.CourtNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CourtNumberField, value) != true)) {
                    this.CourtNumberField = value;
                    this.RaisePropertyChanged("CourtNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency1 {
            get {
                return this.Currency1Field;
            }
            set {
                if ((this.Currency1Field.Equals(value) != true)) {
                    this.Currency1Field = value;
                    this.RaisePropertyChanged("Currency1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency1IsChanged {
            get {
                return this.Currency1IsChangedField;
            }
            set {
                if ((this.Currency1IsChangedField.Equals(value) != true)) {
                    this.Currency1IsChangedField = value;
                    this.RaisePropertyChanged("Currency1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency2 {
            get {
                return this.Currency2Field;
            }
            set {
                if ((this.Currency2Field.Equals(value) != true)) {
                    this.Currency2Field = value;
                    this.RaisePropertyChanged("Currency2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency2IsChanged {
            get {
                return this.Currency2IsChangedField;
            }
            set {
                if ((this.Currency2IsChangedField.Equals(value) != true)) {
                    this.Currency2IsChangedField = value;
                    this.RaisePropertyChanged("Currency2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsChanged {
            get {
                return this.DateIsChangedField;
            }
            set {
                if ((this.DateIsChangedField.Equals(value) != true)) {
                    this.DateIsChangedField = value;
                    this.RaisePropertyChanged("DateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DaysPast {
            get {
                return this.DaysPastField;
            }
            set {
                if ((this.DaysPastField.Equals(value) != true)) {
                    this.DaysPastField = value;
                    this.RaisePropertyChanged("DaysPast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocketID {
            get {
                return this.DocketIDField;
            }
            set {
                if ((this.DocketIDField.Equals(value) != true)) {
                    this.DocketIDField = value;
                    this.RaisePropertyChanged("DocketID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocketIDIsChanged {
            get {
                return this.DocketIDIsChangedField;
            }
            set {
                if ((this.DocketIDIsChangedField.Equals(value) != true)) {
                    this.DocketIDIsChangedField = value;
                    this.RaisePropertyChanged("DocketIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocketOccurrenceID {
            get {
                return this.DocketOccurrenceIDField;
            }
            set {
                if ((this.DocketOccurrenceIDField.Equals(value) != true)) {
                    this.DocketOccurrenceIDField = value;
                    this.RaisePropertyChanged("DocketOccurrenceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocketOccurrenceIDIsChanged {
            get {
                return this.DocketOccurrenceIDIsChangedField;
            }
            set {
                if ((this.DocketOccurrenceIDIsChangedField.Equals(value) != true)) {
                    this.DocketOccurrenceIDIsChangedField = value;
                    this.RaisePropertyChanged("DocketOccurrenceIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationDescription {
            get {
                return this.DurationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationDescriptionField, value) != true)) {
                    this.DurationDescriptionField = value;
                    this.RaisePropertyChanged("DurationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DurationDescriptionIsChanged {
            get {
                return this.DurationDescriptionIsChangedField;
            }
            set {
                if ((this.DurationDescriptionIsChangedField.Equals(value) != true)) {
                    this.DurationDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("DurationDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EventCodeType {
            get {
                return this.EventCodeTypeField;
            }
            set {
                if ((this.EventCodeTypeField.Equals(value) != true)) {
                    this.EventCodeTypeField = value;
                    this.RaisePropertyChanged("EventCodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventDateIsChanged {
            get {
                return this.EventDateIsChangedField;
            }
            set {
                if ((this.EventDateIsChangedField.Equals(value) != true)) {
                    this.EventDateIsChangedField = value;
                    this.RaisePropertyChanged("EventDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventEndDate {
            get {
                return this.EventEndDateField;
            }
            set {
                if ((this.EventEndDateField.Equals(value) != true)) {
                    this.EventEndDateField = value;
                    this.RaisePropertyChanged("EventEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventEndDateIsChanged {
            get {
                return this.EventEndDateIsChangedField;
            }
            set {
                if ((this.EventEndDateIsChangedField.Equals(value) != true)) {
                    this.EventEndDateIsChangedField = value;
                    this.RaisePropertyChanged("EventEndDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EventMasterCode {
            get {
                return this.EventMasterCodeField;
            }
            set {
                if ((this.EventMasterCodeField.Equals(value) != true)) {
                    this.EventMasterCodeField = value;
                    this.RaisePropertyChanged("EventMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InitiatedBy {
            get {
                return this.InitiatedByField;
            }
            set {
                if ((this.InitiatedByField.Equals(value) != true)) {
                    this.InitiatedByField = value;
                    this.RaisePropertyChanged("InitiatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InitiatedByIsChanged {
            get {
                return this.InitiatedByIsChangedField;
            }
            set {
                if ((this.InitiatedByIsChangedField.Equals(value) != true)) {
                    this.InitiatedByIsChangedField = value;
                    this.RaisePropertyChanged("InitiatedByIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalID {
            get {
                return this.LocalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalIDField, value) != true)) {
                    this.LocalIDField = value;
                    this.RaisePropertyChanged("LocalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LocationCodeIsChanged {
            get {
                return this.LocationCodeIsChangedField;
            }
            set {
                if ((this.LocationCodeIsChangedField.Equals(value) != true)) {
                    this.LocationCodeIsChangedField = value;
                    this.RaisePropertyChanged("LocationCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OccurrenceCount {
            get {
                return this.OccurrenceCountField;
            }
            set {
                if ((this.OccurrenceCountField.Equals(value) != true)) {
                    this.OccurrenceCountField = value;
                    this.RaisePropertyChanged("OccurrenceCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OccurrenceCountIsChanged {
            get {
                return this.OccurrenceCountIsChangedField;
            }
            set {
                if ((this.OccurrenceCountIsChangedField.Equals(value) != true)) {
                    this.OccurrenceCountIsChangedField = value;
                    this.RaisePropertyChanged("OccurrenceCountIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentEventID {
            get {
                return this.ParentEventIDField;
            }
            set {
                if ((this.ParentEventIDField.Equals(value) != true)) {
                    this.ParentEventIDField = value;
                    this.RaisePropertyChanged("ParentEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ParentEventIDIsChanged {
            get {
                return this.ParentEventIDIsChangedField;
            }
            set {
                if ((this.ParentEventIDIsChangedField.Equals(value) != true)) {
                    this.ParentEventIDIsChangedField = value;
                    this.RaisePropertyChanged("ParentEventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SealedIsChanged {
            get {
                return this.SealedIsChangedField;
            }
            set {
                if ((this.SealedIsChangedField.Equals(value) != true)) {
                    this.SealedIsChangedField = value;
                    this.RaisePropertyChanged("SealedIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatusMasterCode {
            get {
                return this.StatusMasterCodeField;
            }
            set {
                if ((this.StatusMasterCodeField.Equals(value) != true)) {
                    this.StatusMasterCodeField = value;
                    this.RaisePropertyChanged("StatusMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TitleIsChanged {
            get {
                return this.TitleIsChangedField;
            }
            set {
                if ((this.TitleIsChangedField.Equals(value) != true)) {
                    this.TitleIsChangedField = value;
                    this.RaisePropertyChanged("TitleIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreditSuspend", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CreditSuspend : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountFromDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountToDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CategoryIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ChargeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DurationDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> EventCodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventEndDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> EventMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParentEventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusTypeCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusTypeMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TitleIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountFrom {
            get {
                return this.AmountFromField;
            }
            set {
                if ((this.AmountFromField.Equals(value) != true)) {
                    this.AmountFromField = value;
                    this.RaisePropertyChanged("AmountFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountFromDescription {
            get {
                return this.AmountFromDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountFromDescriptionField, value) != true)) {
                    this.AmountFromDescriptionField = value;
                    this.RaisePropertyChanged("AmountFromDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromDescriptionIsChanged {
            get {
                return this.AmountFromDescriptionIsChangedField;
            }
            set {
                if ((this.AmountFromDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountFromDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromIsChanged {
            get {
                return this.AmountFromIsChangedField;
            }
            set {
                if ((this.AmountFromIsChangedField.Equals(value) != true)) {
                    this.AmountFromIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountTo {
            get {
                return this.AmountToField;
            }
            set {
                if ((this.AmountToField.Equals(value) != true)) {
                    this.AmountToField = value;
                    this.RaisePropertyChanged("AmountTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountToDescription {
            get {
                return this.AmountToDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountToDescriptionField, value) != true)) {
                    this.AmountToDescriptionField = value;
                    this.RaisePropertyChanged("AmountToDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToDescriptionIsChanged {
            get {
                return this.AmountToDescriptionIsChangedField;
            }
            set {
                if ((this.AmountToDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountToDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountToDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToIsChanged {
            get {
                return this.AmountToIsChangedField;
            }
            set {
                if ((this.AmountToIsChangedField.Equals(value) != true)) {
                    this.AmountToIsChangedField = value;
                    this.RaisePropertyChanged("AmountToIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseIDIsChanged {
            get {
                return this.CaseIDIsChangedField;
            }
            set {
                if ((this.CaseIDIsChangedField.Equals(value) != true)) {
                    this.CaseIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CategoryIsChanged {
            get {
                return this.CategoryIsChangedField;
            }
            set {
                if ((this.CategoryIsChangedField.Equals(value) != true)) {
                    this.CategoryIsChangedField = value;
                    this.RaisePropertyChanged("CategoryIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ChargeNumber {
            get {
                return this.ChargeNumberField;
            }
            set {
                if ((this.ChargeNumberField.Equals(value) != true)) {
                    this.ChargeNumberField = value;
                    this.RaisePropertyChanged("ChargeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency1 {
            get {
                return this.Currency1Field;
            }
            set {
                if ((this.Currency1Field.Equals(value) != true)) {
                    this.Currency1Field = value;
                    this.RaisePropertyChanged("Currency1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency1IsChanged {
            get {
                return this.Currency1IsChangedField;
            }
            set {
                if ((this.Currency1IsChangedField.Equals(value) != true)) {
                    this.Currency1IsChangedField = value;
                    this.RaisePropertyChanged("Currency1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency2 {
            get {
                return this.Currency2Field;
            }
            set {
                if ((this.Currency2Field.Equals(value) != true)) {
                    this.Currency2Field = value;
                    this.RaisePropertyChanged("Currency2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency2IsChanged {
            get {
                return this.Currency2IsChangedField;
            }
            set {
                if ((this.Currency2IsChangedField.Equals(value) != true)) {
                    this.Currency2IsChangedField = value;
                    this.RaisePropertyChanged("Currency2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsChanged {
            get {
                return this.DateIsChangedField;
            }
            set {
                if ((this.DateIsChangedField.Equals(value) != true)) {
                    this.DateIsChangedField = value;
                    this.RaisePropertyChanged("DateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationDescription {
            get {
                return this.DurationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationDescriptionField, value) != true)) {
                    this.DurationDescriptionField = value;
                    this.RaisePropertyChanged("DurationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DurationDescriptionIsChanged {
            get {
                return this.DurationDescriptionIsChangedField;
            }
            set {
                if ((this.DurationDescriptionIsChangedField.Equals(value) != true)) {
                    this.DurationDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("DurationDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> EventCodeType {
            get {
                return this.EventCodeTypeField;
            }
            set {
                if ((this.EventCodeTypeField.Equals(value) != true)) {
                    this.EventCodeTypeField = value;
                    this.RaisePropertyChanged("EventCodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventDateIsChanged {
            get {
                return this.EventDateIsChangedField;
            }
            set {
                if ((this.EventDateIsChangedField.Equals(value) != true)) {
                    this.EventDateIsChangedField = value;
                    this.RaisePropertyChanged("EventDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventEndDate {
            get {
                return this.EventEndDateField;
            }
            set {
                if ((this.EventEndDateField.Equals(value) != true)) {
                    this.EventEndDateField = value;
                    this.RaisePropertyChanged("EventEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventEndDateIsChanged {
            get {
                return this.EventEndDateIsChangedField;
            }
            set {
                if ((this.EventEndDateIsChangedField.Equals(value) != true)) {
                    this.EventEndDateIsChangedField = value;
                    this.RaisePropertyChanged("EventEndDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> EventMasterCode {
            get {
                return this.EventMasterCodeField;
            }
            set {
                if ((this.EventMasterCodeField.Equals(value) != true)) {
                    this.EventMasterCodeField = value;
                    this.RaisePropertyChanged("EventMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentEventID {
            get {
                return this.ParentEventIDField;
            }
            set {
                if ((this.ParentEventIDField.Equals(value) != true)) {
                    this.ParentEventIDField = value;
                    this.RaisePropertyChanged("ParentEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ParentEventIDIsChanged {
            get {
                return this.ParentEventIDIsChangedField;
            }
            set {
                if ((this.ParentEventIDIsChangedField.Equals(value) != true)) {
                    this.ParentEventIDIsChangedField = value;
                    this.RaisePropertyChanged("ParentEventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusTypeCode {
            get {
                return this.StatusTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusTypeCodeField, value) != true)) {
                    this.StatusTypeCodeField = value;
                    this.RaisePropertyChanged("StatusTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusTypeCodeIsChanged {
            get {
                return this.StatusTypeCodeIsChangedField;
            }
            set {
                if ((this.StatusTypeCodeIsChangedField.Equals(value) != true)) {
                    this.StatusTypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusTypeCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatusTypeMasterCode {
            get {
                return this.StatusTypeMasterCodeField;
            }
            set {
                if ((this.StatusTypeMasterCodeField.Equals(value) != true)) {
                    this.StatusTypeMasterCodeField = value;
                    this.RaisePropertyChanged("StatusTypeMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TitleIsChanged {
            get {
                return this.TitleIsChangedField;
            }
            set {
                if ((this.TitleIsChangedField.Equals(value) != true)) {
                    this.TitleIsChangedField = value;
                    this.RaisePropertyChanged("TitleIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseNote", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CaseNote : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTakenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateTakenIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrivateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrivateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TakenByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TakenByIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTaken {
            get {
                return this.DateTakenField;
            }
            set {
                if ((this.DateTakenField.Equals(value) != true)) {
                    this.DateTakenField = value;
                    this.RaisePropertyChanged("DateTaken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateTakenIsChanged {
            get {
                return this.DateTakenIsChangedField;
            }
            set {
                if ((this.DateTakenIsChangedField.Equals(value) != true)) {
                    this.DateTakenIsChangedField = value;
                    this.RaisePropertyChanged("DateTakenIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Private {
            get {
                return this.PrivateField;
            }
            set {
                if ((this.PrivateField.Equals(value) != true)) {
                    this.PrivateField = value;
                    this.RaisePropertyChanged("Private");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrivateIsChanged {
            get {
                return this.PrivateIsChangedField;
            }
            set {
                if ((this.PrivateIsChangedField.Equals(value) != true)) {
                    this.PrivateIsChangedField = value;
                    this.RaisePropertyChanged("PrivateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TakenBy {
            get {
                return this.TakenByField;
            }
            set {
                if ((this.TakenByField.Equals(value) != true)) {
                    this.TakenByField = value;
                    this.RaisePropertyChanged("TakenBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TakenByIsChanged {
            get {
                return this.TakenByIsChangedField;
            }
            set {
                if ((this.TakenByIsChangedField.Equals(value) != true)) {
                    this.TakenByIsChangedField = value;
                    this.RaisePropertyChanged("TakenByIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhysicalLocation", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class PhysicalLocation : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Case CaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseStatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseStatusCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CaseStatusMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseTypeCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseTypeMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourtNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> PhysicalLocationCodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PhysicalLocationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> PhysicalLocationMasterCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Case Case {
            get {
                return this.CaseField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseField, value) != true)) {
                    this.CaseField = value;
                    this.RaisePropertyChanged("Case");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseStatusCode {
            get {
                return this.CaseStatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseStatusCodeField, value) != true)) {
                    this.CaseStatusCodeField = value;
                    this.RaisePropertyChanged("CaseStatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseStatusCodeDescription {
            get {
                return this.CaseStatusCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseStatusCodeDescriptionField, value) != true)) {
                    this.CaseStatusCodeDescriptionField = value;
                    this.RaisePropertyChanged("CaseStatusCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte CaseStatusMasterCode {
            get {
                return this.CaseStatusMasterCodeField;
            }
            set {
                if ((this.CaseStatusMasterCodeField.Equals(value) != true)) {
                    this.CaseStatusMasterCodeField = value;
                    this.RaisePropertyChanged("CaseStatusMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseTitle {
            get {
                return this.CaseTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseTitleField, value) != true)) {
                    this.CaseTitleField = value;
                    this.RaisePropertyChanged("CaseTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseTypeCode {
            get {
                return this.CaseTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseTypeCodeField, value) != true)) {
                    this.CaseTypeCodeField = value;
                    this.RaisePropertyChanged("CaseTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseTypeCodeDescription {
            get {
                return this.CaseTypeCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseTypeCodeDescriptionField, value) != true)) {
                    this.CaseTypeCodeDescriptionField = value;
                    this.RaisePropertyChanged("CaseTypeCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseTypeMasterCode {
            get {
                return this.CaseTypeMasterCodeField;
            }
            set {
                if ((this.CaseTypeMasterCodeField.Equals(value) != true)) {
                    this.CaseTypeMasterCodeField = value;
                    this.RaisePropertyChanged("CaseTypeMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourtNumber {
            get {
                return this.CourtNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CourtNumberField, value) != true)) {
                    this.CourtNumberField = value;
                    this.RaisePropertyChanged("CourtNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationDescription {
            get {
                return this.LocationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationDescriptionField, value) != true)) {
                    this.LocationDescriptionField = value;
                    this.RaisePropertyChanged("LocationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> PhysicalLocationCodeType {
            get {
                return this.PhysicalLocationCodeTypeField;
            }
            set {
                if ((this.PhysicalLocationCodeTypeField.Equals(value) != true)) {
                    this.PhysicalLocationCodeTypeField = value;
                    this.RaisePropertyChanged("PhysicalLocationCodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PhysicalLocationID {
            get {
                return this.PhysicalLocationIDField;
            }
            set {
                if ((this.PhysicalLocationIDField.Equals(value) != true)) {
                    this.PhysicalLocationIDField = value;
                    this.RaisePropertyChanged("PhysicalLocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> PhysicalLocationMasterCode {
            get {
                return this.PhysicalLocationMasterCodeField;
            }
            set {
                if ((this.PhysicalLocationMasterCodeField.Equals(value) != true)) {
                    this.PhysicalLocationMasterCodeField = value;
                    this.RaisePropertyChanged("PhysicalLocationMasterCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseTask", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CaseTask : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountFromDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountToDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Case CaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CategoryCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourtNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DaysPastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DocketIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocketIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DocketOccurrenceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocketOccurrenceIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DurationDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EventCodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventEndDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EventMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InitiatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InitiatedByIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocationCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OccurrenceCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParentEventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PriorityIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecurringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RecurringEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecurringEventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.TaskInvolvedName> TaskInvolvedNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TitleIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountFrom {
            get {
                return this.AmountFromField;
            }
            set {
                if ((this.AmountFromField.Equals(value) != true)) {
                    this.AmountFromField = value;
                    this.RaisePropertyChanged("AmountFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountFromDescription {
            get {
                return this.AmountFromDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountFromDescriptionField, value) != true)) {
                    this.AmountFromDescriptionField = value;
                    this.RaisePropertyChanged("AmountFromDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromDescriptionIsChanged {
            get {
                return this.AmountFromDescriptionIsChangedField;
            }
            set {
                if ((this.AmountFromDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountFromDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromIsChanged {
            get {
                return this.AmountFromIsChangedField;
            }
            set {
                if ((this.AmountFromIsChangedField.Equals(value) != true)) {
                    this.AmountFromIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountTo {
            get {
                return this.AmountToField;
            }
            set {
                if ((this.AmountToField.Equals(value) != true)) {
                    this.AmountToField = value;
                    this.RaisePropertyChanged("AmountTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountToDescription {
            get {
                return this.AmountToDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountToDescriptionField, value) != true)) {
                    this.AmountToDescriptionField = value;
                    this.RaisePropertyChanged("AmountToDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToDescriptionIsChanged {
            get {
                return this.AmountToDescriptionIsChangedField;
            }
            set {
                if ((this.AmountToDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountToDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountToDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToIsChanged {
            get {
                return this.AmountToIsChangedField;
            }
            set {
                if ((this.AmountToIsChangedField.Equals(value) != true)) {
                    this.AmountToIsChangedField = value;
                    this.RaisePropertyChanged("AmountToIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Case Case {
            get {
                return this.CaseField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseField, value) != true)) {
                    this.CaseField = value;
                    this.RaisePropertyChanged("Case");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseIDIsChanged {
            get {
                return this.CaseIDIsChangedField;
            }
            set {
                if ((this.CaseIDIsChangedField.Equals(value) != true)) {
                    this.CaseIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseTitle {
            get {
                return this.CaseTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseTitleField, value) != true)) {
                    this.CaseTitleField = value;
                    this.RaisePropertyChanged("CaseTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CategoryCodeIsChanged {
            get {
                return this.CategoryCodeIsChangedField;
            }
            set {
                if ((this.CategoryCodeIsChangedField.Equals(value) != true)) {
                    this.CategoryCodeIsChangedField = value;
                    this.RaisePropertyChanged("CategoryCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeID {
            get {
                return this.ChargeIDField;
            }
            set {
                if ((this.ChargeIDField.Equals(value) != true)) {
                    this.ChargeIDField = value;
                    this.RaisePropertyChanged("ChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeIDIsChanged {
            get {
                return this.ChargeIDIsChangedField;
            }
            set {
                if ((this.ChargeIDIsChangedField.Equals(value) != true)) {
                    this.ChargeIDIsChangedField = value;
                    this.RaisePropertyChanged("ChargeIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourtNumber {
            get {
                return this.CourtNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CourtNumberField, value) != true)) {
                    this.CourtNumberField = value;
                    this.RaisePropertyChanged("CourtNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency1 {
            get {
                return this.Currency1Field;
            }
            set {
                if ((this.Currency1Field.Equals(value) != true)) {
                    this.Currency1Field = value;
                    this.RaisePropertyChanged("Currency1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency1IsChanged {
            get {
                return this.Currency1IsChangedField;
            }
            set {
                if ((this.Currency1IsChangedField.Equals(value) != true)) {
                    this.Currency1IsChangedField = value;
                    this.RaisePropertyChanged("Currency1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency2 {
            get {
                return this.Currency2Field;
            }
            set {
                if ((this.Currency2Field.Equals(value) != true)) {
                    this.Currency2Field = value;
                    this.RaisePropertyChanged("Currency2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency2IsChanged {
            get {
                return this.Currency2IsChangedField;
            }
            set {
                if ((this.Currency2IsChangedField.Equals(value) != true)) {
                    this.Currency2IsChangedField = value;
                    this.RaisePropertyChanged("Currency2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsChanged {
            get {
                return this.DateIsChangedField;
            }
            set {
                if ((this.DateIsChangedField.Equals(value) != true)) {
                    this.DateIsChangedField = value;
                    this.RaisePropertyChanged("DateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DaysPast {
            get {
                return this.DaysPastField;
            }
            set {
                if ((this.DaysPastField.Equals(value) != true)) {
                    this.DaysPastField = value;
                    this.RaisePropertyChanged("DaysPast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocketID {
            get {
                return this.DocketIDField;
            }
            set {
                if ((this.DocketIDField.Equals(value) != true)) {
                    this.DocketIDField = value;
                    this.RaisePropertyChanged("DocketID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocketIDIsChanged {
            get {
                return this.DocketIDIsChangedField;
            }
            set {
                if ((this.DocketIDIsChangedField.Equals(value) != true)) {
                    this.DocketIDIsChangedField = value;
                    this.RaisePropertyChanged("DocketIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocketOccurrenceID {
            get {
                return this.DocketOccurrenceIDField;
            }
            set {
                if ((this.DocketOccurrenceIDField.Equals(value) != true)) {
                    this.DocketOccurrenceIDField = value;
                    this.RaisePropertyChanged("DocketOccurrenceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocketOccurrenceIDIsChanged {
            get {
                return this.DocketOccurrenceIDIsChangedField;
            }
            set {
                if ((this.DocketOccurrenceIDIsChangedField.Equals(value) != true)) {
                    this.DocketOccurrenceIDIsChangedField = value;
                    this.RaisePropertyChanged("DocketOccurrenceIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationDescription {
            get {
                return this.DurationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationDescriptionField, value) != true)) {
                    this.DurationDescriptionField = value;
                    this.RaisePropertyChanged("DurationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DurationDescriptionIsChanged {
            get {
                return this.DurationDescriptionIsChangedField;
            }
            set {
                if ((this.DurationDescriptionIsChangedField.Equals(value) != true)) {
                    this.DurationDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("DurationDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EventCodeType {
            get {
                return this.EventCodeTypeField;
            }
            set {
                if ((this.EventCodeTypeField.Equals(value) != true)) {
                    this.EventCodeTypeField = value;
                    this.RaisePropertyChanged("EventCodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventDateIsChanged {
            get {
                return this.EventDateIsChangedField;
            }
            set {
                if ((this.EventDateIsChangedField.Equals(value) != true)) {
                    this.EventDateIsChangedField = value;
                    this.RaisePropertyChanged("EventDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventDescription {
            get {
                return this.EventDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EventDescriptionField, value) != true)) {
                    this.EventDescriptionField = value;
                    this.RaisePropertyChanged("EventDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventEndDate {
            get {
                return this.EventEndDateField;
            }
            set {
                if ((this.EventEndDateField.Equals(value) != true)) {
                    this.EventEndDateField = value;
                    this.RaisePropertyChanged("EventEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventEndDateIsChanged {
            get {
                return this.EventEndDateIsChangedField;
            }
            set {
                if ((this.EventEndDateIsChangedField.Equals(value) != true)) {
                    this.EventEndDateIsChangedField = value;
                    this.RaisePropertyChanged("EventEndDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EventMasterCode {
            get {
                return this.EventMasterCodeField;
            }
            set {
                if ((this.EventMasterCodeField.Equals(value) != true)) {
                    this.EventMasterCodeField = value;
                    this.RaisePropertyChanged("EventMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InitiatedBy {
            get {
                return this.InitiatedByField;
            }
            set {
                if ((this.InitiatedByField.Equals(value) != true)) {
                    this.InitiatedByField = value;
                    this.RaisePropertyChanged("InitiatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InitiatedByIsChanged {
            get {
                return this.InitiatedByIsChangedField;
            }
            set {
                if ((this.InitiatedByIsChangedField.Equals(value) != true)) {
                    this.InitiatedByIsChangedField = value;
                    this.RaisePropertyChanged("InitiatedByIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalID {
            get {
                return this.LocalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalIDField, value) != true)) {
                    this.LocalIDField = value;
                    this.RaisePropertyChanged("LocalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LocationCodeIsChanged {
            get {
                return this.LocationCodeIsChangedField;
            }
            set {
                if ((this.LocationCodeIsChangedField.Equals(value) != true)) {
                    this.LocationCodeIsChangedField = value;
                    this.RaisePropertyChanged("LocationCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OccurrenceCount {
            get {
                return this.OccurrenceCountField;
            }
            set {
                if ((this.OccurrenceCountField.Equals(value) != true)) {
                    this.OccurrenceCountField = value;
                    this.RaisePropertyChanged("OccurrenceCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentEventID {
            get {
                return this.ParentEventIDField;
            }
            set {
                if ((this.ParentEventIDField.Equals(value) != true)) {
                    this.ParentEventIDField = value;
                    this.RaisePropertyChanged("ParentEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ParentEventIDIsChanged {
            get {
                return this.ParentEventIDIsChangedField;
            }
            set {
                if ((this.ParentEventIDIsChangedField.Equals(value) != true)) {
                    this.ParentEventIDIsChangedField = value;
                    this.RaisePropertyChanged("ParentEventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PriorityIsChanged {
            get {
                return this.PriorityIsChangedField;
            }
            set {
                if ((this.PriorityIsChangedField.Equals(value) != true)) {
                    this.PriorityIsChangedField = value;
                    this.RaisePropertyChanged("PriorityIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Recurring {
            get {
                return this.RecurringField;
            }
            set {
                if ((object.ReferenceEquals(this.RecurringField, value) != true)) {
                    this.RecurringField = value;
                    this.RaisePropertyChanged("Recurring");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RecurringEventID {
            get {
                return this.RecurringEventIDField;
            }
            set {
                if ((this.RecurringEventIDField.Equals(value) != true)) {
                    this.RecurringEventIDField = value;
                    this.RaisePropertyChanged("RecurringEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecurringEventIDIsChanged {
            get {
                return this.RecurringEventIDIsChangedField;
            }
            set {
                if ((this.RecurringEventIDIsChangedField.Equals(value) != true)) {
                    this.RecurringEventIDIsChangedField = value;
                    this.RaisePropertyChanged("RecurringEventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SealedIsChanged {
            get {
                return this.SealedIsChangedField;
            }
            set {
                if ((this.SealedIsChangedField.Equals(value) != true)) {
                    this.SealedIsChangedField = value;
                    this.RaisePropertyChanged("SealedIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatusMasterCode {
            get {
                return this.StatusMasterCodeField;
            }
            set {
                if ((this.StatusMasterCodeField.Equals(value) != true)) {
                    this.StatusMasterCodeField = value;
                    this.RaisePropertyChanged("StatusMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.TaskInvolvedName> TaskInvolvedNames {
            get {
                return this.TaskInvolvedNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskInvolvedNamesField, value) != true)) {
                    this.TaskInvolvedNamesField = value;
                    this.RaisePropertyChanged("TaskInvolvedNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TitleIsChanged {
            get {
                return this.TitleIsChangedField;
            }
            set {
                if ((this.TitleIsChangedField.Equals(value) != true)) {
                    this.TitleIsChangedField = value;
                    this.RaisePropertyChanged("TitleIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskInvolvedName", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class TaskInvolvedName : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.EventEntityType AppliesToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseInvolvedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CaseInvolvedNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseInvolvedNameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseInvolvedNameIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CaseNotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag3IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag4IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Flag5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Flag5IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvolvementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvolvementCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvolvementCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvolvementIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MinutesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Name NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> NotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifyIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PopupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PopupIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.EventEntityType AppliesTo {
            get {
                return this.AppliesToField;
            }
            set {
                if ((this.AppliesToField.Equals(value) != true)) {
                    this.AppliesToField = value;
                    this.RaisePropertyChanged("AppliesTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseInvolvedName {
            get {
                return this.CaseInvolvedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseInvolvedNameField, value) != true)) {
                    this.CaseInvolvedNameField = value;
                    this.RaisePropertyChanged("CaseInvolvedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CaseInvolvedNameID {
            get {
                return this.CaseInvolvedNameIDField;
            }
            set {
                if ((this.CaseInvolvedNameIDField.Equals(value) != true)) {
                    this.CaseInvolvedNameIDField = value;
                    this.RaisePropertyChanged("CaseInvolvedNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseInvolvedNameIDIsChanged {
            get {
                return this.CaseInvolvedNameIDIsChangedField;
            }
            set {
                if ((this.CaseInvolvedNameIDIsChangedField.Equals(value) != true)) {
                    this.CaseInvolvedNameIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseInvolvedNameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseInvolvedNameIsChanged {
            get {
                return this.CaseInvolvedNameIsChangedField;
            }
            set {
                if ((this.CaseInvolvedNameIsChangedField.Equals(value) != true)) {
                    this.CaseInvolvedNameIsChangedField = value;
                    this.RaisePropertyChanged("CaseInvolvedNameIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CaseNotification {
            get {
                return this.CaseNotificationField;
            }
            set {
                if ((this.CaseNotificationField.Equals(value) != true)) {
                    this.CaseNotificationField = value;
                    this.RaisePropertyChanged("CaseNotification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsChanged {
            get {
                return this.DateIsChangedField;
            }
            set {
                if ((this.DateIsChangedField.Equals(value) != true)) {
                    this.DateIsChangedField = value;
                    this.RaisePropertyChanged("DateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Email {
            get {
                return this.EmailField;
            }
            set {
                if ((this.EmailField.Equals(value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailIsChanged {
            get {
                return this.EmailIsChangedField;
            }
            set {
                if ((this.EmailIsChangedField.Equals(value) != true)) {
                    this.EmailIsChangedField = value;
                    this.RaisePropertyChanged("EmailIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventIDIsChanged {
            get {
                return this.EventIDIsChangedField;
            }
            set {
                if ((this.EventIDIsChangedField.Equals(value) != true)) {
                    this.EventIDIsChangedField = value;
                    this.RaisePropertyChanged("EventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag1 {
            get {
                return this.Flag1Field;
            }
            set {
                if ((this.Flag1Field.Equals(value) != true)) {
                    this.Flag1Field = value;
                    this.RaisePropertyChanged("Flag1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag1IsChanged {
            get {
                return this.Flag1IsChangedField;
            }
            set {
                if ((this.Flag1IsChangedField.Equals(value) != true)) {
                    this.Flag1IsChangedField = value;
                    this.RaisePropertyChanged("Flag1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag2 {
            get {
                return this.Flag2Field;
            }
            set {
                if ((this.Flag2Field.Equals(value) != true)) {
                    this.Flag2Field = value;
                    this.RaisePropertyChanged("Flag2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag2IsChanged {
            get {
                return this.Flag2IsChangedField;
            }
            set {
                if ((this.Flag2IsChangedField.Equals(value) != true)) {
                    this.Flag2IsChangedField = value;
                    this.RaisePropertyChanged("Flag2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag3 {
            get {
                return this.Flag3Field;
            }
            set {
                if ((this.Flag3Field.Equals(value) != true)) {
                    this.Flag3Field = value;
                    this.RaisePropertyChanged("Flag3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag3IsChanged {
            get {
                return this.Flag3IsChangedField;
            }
            set {
                if ((this.Flag3IsChangedField.Equals(value) != true)) {
                    this.Flag3IsChangedField = value;
                    this.RaisePropertyChanged("Flag3IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag4 {
            get {
                return this.Flag4Field;
            }
            set {
                if ((this.Flag4Field.Equals(value) != true)) {
                    this.Flag4Field = value;
                    this.RaisePropertyChanged("Flag4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag4IsChanged {
            get {
                return this.Flag4IsChangedField;
            }
            set {
                if ((this.Flag4IsChangedField.Equals(value) != true)) {
                    this.Flag4IsChangedField = value;
                    this.RaisePropertyChanged("Flag4IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Flag5 {
            get {
                return this.Flag5Field;
            }
            set {
                if ((this.Flag5Field.Equals(value) != true)) {
                    this.Flag5Field = value;
                    this.RaisePropertyChanged("Flag5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag5IsChanged {
            get {
                return this.Flag5IsChangedField;
            }
            set {
                if ((this.Flag5IsChangedField.Equals(value) != true)) {
                    this.Flag5IsChangedField = value;
                    this.RaisePropertyChanged("Flag5IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Involvement {
            get {
                return this.InvolvementField;
            }
            set {
                if ((object.ReferenceEquals(this.InvolvementField, value) != true)) {
                    this.InvolvementField = value;
                    this.RaisePropertyChanged("Involvement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvolvementCode {
            get {
                return this.InvolvementCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvolvementCodeField, value) != true)) {
                    this.InvolvementCodeField = value;
                    this.RaisePropertyChanged("InvolvementCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvolvementCodeIsChanged {
            get {
                return this.InvolvementCodeIsChangedField;
            }
            set {
                if ((this.InvolvementCodeIsChangedField.Equals(value) != true)) {
                    this.InvolvementCodeIsChangedField = value;
                    this.RaisePropertyChanged("InvolvementCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvolvementIsChanged {
            get {
                return this.InvolvementIsChangedField;
            }
            set {
                if ((this.InvolvementIsChangedField.Equals(value) != true)) {
                    this.InvolvementIsChangedField = value;
                    this.RaisePropertyChanged("InvolvementIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Minutes {
            get {
                return this.MinutesField;
            }
            set {
                if ((this.MinutesField.Equals(value) != true)) {
                    this.MinutesField = value;
                    this.RaisePropertyChanged("Minutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MinutesIsChanged {
            get {
                return this.MinutesIsChangedField;
            }
            set {
                if ((this.MinutesIsChangedField.Equals(value) != true)) {
                    this.MinutesIsChangedField = value;
                    this.RaisePropertyChanged("MinutesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Name Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NameIDIsChanged {
            get {
                return this.NameIDIsChangedField;
            }
            set {
                if ((this.NameIDIsChangedField.Equals(value) != true)) {
                    this.NameIDIsChangedField = value;
                    this.RaisePropertyChanged("NameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Notify {
            get {
                return this.NotifyField;
            }
            set {
                if ((this.NotifyField.Equals(value) != true)) {
                    this.NotifyField = value;
                    this.RaisePropertyChanged("Notify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotifyIsChanged {
            get {
                return this.NotifyIsChangedField;
            }
            set {
                if ((this.NotifyIsChangedField.Equals(value) != true)) {
                    this.NotifyIsChangedField = value;
                    this.RaisePropertyChanged("NotifyIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Popup {
            get {
                return this.PopupField;
            }
            set {
                if ((this.PopupField.Equals(value) != true)) {
                    this.PopupField = value;
                    this.RaisePropertyChanged("Popup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PopupIsChanged {
            get {
                return this.PopupIsChangedField;
            }
            set {
                if ((this.PopupIsChangedField.Equals(value) != true)) {
                    this.PopupIsChangedField = value;
                    this.RaisePropertyChanged("PopupIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Payment", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Payment : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AllocateToEscrowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForCaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ForCaseIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Name NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReceivedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivedByFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReferenceNumberIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> StatusMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.Transfer> TransfersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyCode {
            get {
                return this.AgencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyCodeField, value) != true)) {
                    this.AgencyCodeField = value;
                    this.RaisePropertyChanged("AgencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AllocateToEscrow {
            get {
                return this.AllocateToEscrowField;
            }
            set {
                if ((this.AllocateToEscrowField.Equals(value) != true)) {
                    this.AllocateToEscrowField = value;
                    this.RaisePropertyChanged("AllocateToEscrow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte CodeType {
            get {
                return this.CodeTypeField;
            }
            set {
                if ((this.CodeTypeField.Equals(value) != true)) {
                    this.CodeTypeField = value;
                    this.RaisePropertyChanged("CodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForCaseID {
            get {
                return this.ForCaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ForCaseIDField, value) != true)) {
                    this.ForCaseIDField = value;
                    this.RaisePropertyChanged("ForCaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ForCaseIDIsChanged {
            get {
                return this.ForCaseIDIsChangedField;
            }
            set {
                if ((this.ForCaseIDIsChangedField.Equals(value) != true)) {
                    this.ForCaseIDIsChangedField = value;
                    this.RaisePropertyChanged("ForCaseIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Name Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Payer {
            get {
                return this.PayerField;
            }
            set {
                if ((this.PayerField.Equals(value) != true)) {
                    this.PayerField = value;
                    this.RaisePropertyChanged("Payer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiptNumber {
            get {
                return this.ReceiptNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptNumberField, value) != true)) {
                    this.ReceiptNumberField = value;
                    this.RaisePropertyChanged("ReceiptNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReceivedBy {
            get {
                return this.ReceivedByField;
            }
            set {
                if ((this.ReceivedByField.Equals(value) != true)) {
                    this.ReceivedByField = value;
                    this.RaisePropertyChanged("ReceivedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivedByFullName {
            get {
                return this.ReceivedByFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivedByFullNameField, value) != true)) {
                    this.ReceivedByFullNameField = value;
                    this.RaisePropertyChanged("ReceivedByFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceNumber {
            get {
                return this.ReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceNumberField, value) != true)) {
                    this.ReferenceNumberField = value;
                    this.RaisePropertyChanged("ReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReferenceNumberIsChanged {
            get {
                return this.ReferenceNumberIsChangedField;
            }
            set {
                if ((this.ReferenceNumberIsChangedField.Equals(value) != true)) {
                    this.ReferenceNumberIsChangedField = value;
                    this.RaisePropertyChanged("ReferenceNumberIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> StatusMasterCode {
            get {
                return this.StatusMasterCodeField;
            }
            set {
                if ((this.StatusMasterCodeField.Equals(value) != true)) {
                    this.StatusMasterCodeField = value;
                    this.RaisePropertyChanged("StatusMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Transfer> Transfers {
            get {
                return this.TransfersField;
            }
            set {
                if ((object.ReferenceEquals(this.TransfersField, value) != true)) {
                    this.TransfersField = value;
                    this.RaisePropertyChanged("Transfers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameNote", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class NameNote : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTakenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateTakenIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TakenByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TakenByIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTaken {
            get {
                return this.DateTakenField;
            }
            set {
                if ((this.DateTakenField.Equals(value) != true)) {
                    this.DateTakenField = value;
                    this.RaisePropertyChanged("DateTaken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateTakenIsChanged {
            get {
                return this.DateTakenIsChangedField;
            }
            set {
                if ((this.DateTakenIsChangedField.Equals(value) != true)) {
                    this.DateTakenIsChangedField = value;
                    this.RaisePropertyChanged("DateTakenIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TakenBy {
            get {
                return this.TakenByField;
            }
            set {
                if ((this.TakenByField.Equals(value) != true)) {
                    this.TakenByField = value;
                    this.RaisePropertyChanged("TakenBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TakenByIsChanged {
            get {
                return this.TakenByIsChangedField;
            }
            set {
                if ((this.TakenByIsChangedField.Equals(value) != true)) {
                    this.TakenByIsChangedField = value;
                    this.RaisePropertyChanged("TakenByIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameNumber", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class NameNumber : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsDuplicateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTypeCodeActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NumberIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActiveIsChanged {
            get {
                return this.IsActiveIsChangedField;
            }
            set {
                if ((this.IsActiveIsChangedField.Equals(value) != true)) {
                    this.IsActiveIsChangedField = value;
                    this.RaisePropertyChanged("IsActiveIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsDuplicate {
            get {
                return this.IsDuplicateField;
            }
            set {
                if ((this.IsDuplicateField.Equals(value) != true)) {
                    this.IsDuplicateField = value;
                    this.RaisePropertyChanged("IsDuplicate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTypeCodeActive {
            get {
                return this.IsTypeCodeActiveField;
            }
            set {
                if ((this.IsTypeCodeActiveField.Equals(value) != true)) {
                    this.IsTypeCodeActiveField = value;
                    this.RaisePropertyChanged("IsTypeCodeActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NumberIsChanged {
            get {
                return this.NumberIsChangedField;
            }
            set {
                if ((this.NumberIsChangedField.Equals(value) != true)) {
                    this.NumberIsChangedField = value;
                    this.RaisePropertyChanged("NumberIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PendingTimeTrackingEntry", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class PendingTimeTrackingEntry : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EndDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Name NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PostedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StartDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> StatusMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseIDIsChanged {
            get {
                return this.CaseIDIsChangedField;
            }
            set {
                if ((this.CaseIDIsChangedField.Equals(value) != true)) {
                    this.CaseIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EndDateIsChanged {
            get {
                return this.EndDateIsChangedField;
            }
            set {
                if ((this.EndDateIsChangedField.Equals(value) != true)) {
                    this.EndDateIsChangedField = value;
                    this.RaisePropertyChanged("EndDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventIDIsChanged {
            get {
                return this.EventIDIsChangedField;
            }
            set {
                if ((this.EventIDIsChangedField.Equals(value) != true)) {
                    this.EventIDIsChangedField = value;
                    this.RaisePropertyChanged("EventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Name Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NameIDIsChanged {
            get {
                return this.NameIDIsChangedField;
            }
            set {
                if ((this.NameIDIsChangedField.Equals(value) != true)) {
                    this.NameIDIsChangedField = value;
                    this.RaisePropertyChanged("NameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PostedDate {
            get {
                return this.PostedDateField;
            }
            set {
                if ((this.PostedDateField.Equals(value) != true)) {
                    this.PostedDateField = value;
                    this.RaisePropertyChanged("PostedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StartDateIsChanged {
            get {
                return this.StartDateIsChangedField;
            }
            set {
                if ((this.StartDateIsChangedField.Equals(value) != true)) {
                    this.StartDateIsChangedField = value;
                    this.RaisePropertyChanged("StartDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> StatusMasterCode {
            get {
                return this.StatusMasterCodeField;
            }
            set {
                if ((this.StatusMasterCodeField.Equals(value) != true)) {
                    this.StatusMasterCodeField = value;
                    this.RaisePropertyChanged("StatusMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Phone", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Phone : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NumberIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ActiveDateIsChanged {
            get {
                return this.ActiveDateIsChangedField;
            }
            set {
                if ((this.ActiveDateIsChangedField.Equals(value) != true)) {
                    this.ActiveDateIsChangedField = value;
                    this.RaisePropertyChanged("ActiveDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NumberIsChanged {
            get {
                return this.NumberIsChangedField;
            }
            set {
                if ((this.NumberIsChangedField.Equals(value) != true)) {
                    this.NumberIsChangedField = value;
                    this.RaisePropertyChanged("NumberIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrimaryNameRelationship", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class PrimaryNameRelationship : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Name NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Name RelatedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RelatedNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RelatedNameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelationshipCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RelationshipCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Name Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Name RelatedName {
            get {
                return this.RelatedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedNameField, value) != true)) {
                    this.RelatedNameField = value;
                    this.RaisePropertyChanged("RelatedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelatedNameID {
            get {
                return this.RelatedNameIDField;
            }
            set {
                if ((this.RelatedNameIDField.Equals(value) != true)) {
                    this.RelatedNameIDField = value;
                    this.RaisePropertyChanged("RelatedNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RelatedNameIDIsChanged {
            get {
                return this.RelatedNameIDIsChangedField;
            }
            set {
                if ((this.RelatedNameIDIsChangedField.Equals(value) != true)) {
                    this.RelatedNameIDIsChangedField = value;
                    this.RaisePropertyChanged("RelatedNameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelationshipCode {
            get {
                return this.RelationshipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationshipCodeField, value) != true)) {
                    this.RelationshipCodeField = value;
                    this.RaisePropertyChanged("RelationshipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RelationshipCodeIsChanged {
            get {
                return this.RelationshipCodeIsChangedField;
            }
            set {
                if ((this.RelationshipCodeIsChangedField.Equals(value) != true)) {
                    this.RelationshipCodeIsChangedField = value;
                    this.RaisePropertyChanged("RelationshipCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecondaryNameRelationship", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class SecondaryNameRelationship : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Name NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Name RelatedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RelatedNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RelatedNameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelationshipCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RelationshipCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Name Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Name RelatedName {
            get {
                return this.RelatedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedNameField, value) != true)) {
                    this.RelatedNameField = value;
                    this.RaisePropertyChanged("RelatedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelatedNameID {
            get {
                return this.RelatedNameIDField;
            }
            set {
                if ((this.RelatedNameIDField.Equals(value) != true)) {
                    this.RelatedNameIDField = value;
                    this.RaisePropertyChanged("RelatedNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RelatedNameIDIsChanged {
            get {
                return this.RelatedNameIDIsChangedField;
            }
            set {
                if ((this.RelatedNameIDIsChangedField.Equals(value) != true)) {
                    this.RelatedNameIDIsChangedField = value;
                    this.RaisePropertyChanged("RelatedNameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelationshipCode {
            get {
                return this.RelationshipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationshipCodeField, value) != true)) {
                    this.RelationshipCodeField = value;
                    this.RaisePropertyChanged("RelationshipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RelationshipCodeIsChanged {
            get {
                return this.RelationshipCodeIsChangedField;
            }
            set {
                if ((this.RelationshipCodeIsChangedField.Equals(value) != true)) {
                    this.RelationshipCodeIsChangedField = value;
                    this.RaisePropertyChanged("RelationshipCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameTask", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class NameTask : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountFromDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountFromIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AmountToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountToDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmountToIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaseIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CategoryCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourtNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency1IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Currency2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Currency2IsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DaysPastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DocketIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocketIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DocketOccurrenceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocketOccurrenceIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DurationDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EventCodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EventEndDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EventMasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InitiatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InitiatedByIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocationCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Name NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NameIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParentEventIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PriorityIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SealedIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.TaskInvolvedName> TaskInvolvedNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TitleIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountFrom {
            get {
                return this.AmountFromField;
            }
            set {
                if ((this.AmountFromField.Equals(value) != true)) {
                    this.AmountFromField = value;
                    this.RaisePropertyChanged("AmountFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountFromDescription {
            get {
                return this.AmountFromDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountFromDescriptionField, value) != true)) {
                    this.AmountFromDescriptionField = value;
                    this.RaisePropertyChanged("AmountFromDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromDescriptionIsChanged {
            get {
                return this.AmountFromDescriptionIsChangedField;
            }
            set {
                if ((this.AmountFromDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountFromDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountFromIsChanged {
            get {
                return this.AmountFromIsChangedField;
            }
            set {
                if ((this.AmountFromIsChangedField.Equals(value) != true)) {
                    this.AmountFromIsChangedField = value;
                    this.RaisePropertyChanged("AmountFromIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AmountTo {
            get {
                return this.AmountToField;
            }
            set {
                if ((this.AmountToField.Equals(value) != true)) {
                    this.AmountToField = value;
                    this.RaisePropertyChanged("AmountTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountToDescription {
            get {
                return this.AmountToDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountToDescriptionField, value) != true)) {
                    this.AmountToDescriptionField = value;
                    this.RaisePropertyChanged("AmountToDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToDescriptionIsChanged {
            get {
                return this.AmountToDescriptionIsChangedField;
            }
            set {
                if ((this.AmountToDescriptionIsChangedField.Equals(value) != true)) {
                    this.AmountToDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("AmountToDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmountToIsChanged {
            get {
                return this.AmountToIsChangedField;
            }
            set {
                if ((this.AmountToIsChangedField.Equals(value) != true)) {
                    this.AmountToIsChangedField = value;
                    this.RaisePropertyChanged("AmountToIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CaseIDIsChanged {
            get {
                return this.CaseIDIsChangedField;
            }
            set {
                if ((this.CaseIDIsChangedField.Equals(value) != true)) {
                    this.CaseIDIsChangedField = value;
                    this.RaisePropertyChanged("CaseIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseTitle {
            get {
                return this.CaseTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseTitleField, value) != true)) {
                    this.CaseTitleField = value;
                    this.RaisePropertyChanged("CaseTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CategoryCodeIsChanged {
            get {
                return this.CategoryCodeIsChangedField;
            }
            set {
                if ((this.CategoryCodeIsChangedField.Equals(value) != true)) {
                    this.CategoryCodeIsChangedField = value;
                    this.RaisePropertyChanged("CategoryCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeID {
            get {
                return this.ChargeIDField;
            }
            set {
                if ((this.ChargeIDField.Equals(value) != true)) {
                    this.ChargeIDField = value;
                    this.RaisePropertyChanged("ChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeIDIsChanged {
            get {
                return this.ChargeIDIsChangedField;
            }
            set {
                if ((this.ChargeIDIsChangedField.Equals(value) != true)) {
                    this.ChargeIDIsChangedField = value;
                    this.RaisePropertyChanged("ChargeIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourtNumber {
            get {
                return this.CourtNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CourtNumberField, value) != true)) {
                    this.CourtNumberField = value;
                    this.RaisePropertyChanged("CourtNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency1 {
            get {
                return this.Currency1Field;
            }
            set {
                if ((this.Currency1Field.Equals(value) != true)) {
                    this.Currency1Field = value;
                    this.RaisePropertyChanged("Currency1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency1IsChanged {
            get {
                return this.Currency1IsChangedField;
            }
            set {
                if ((this.Currency1IsChangedField.Equals(value) != true)) {
                    this.Currency1IsChangedField = value;
                    this.RaisePropertyChanged("Currency1IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Currency2 {
            get {
                return this.Currency2Field;
            }
            set {
                if ((this.Currency2Field.Equals(value) != true)) {
                    this.Currency2Field = value;
                    this.RaisePropertyChanged("Currency2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Currency2IsChanged {
            get {
                return this.Currency2IsChangedField;
            }
            set {
                if ((this.Currency2IsChangedField.Equals(value) != true)) {
                    this.Currency2IsChangedField = value;
                    this.RaisePropertyChanged("Currency2IsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DateIsChanged {
            get {
                return this.DateIsChangedField;
            }
            set {
                if ((this.DateIsChangedField.Equals(value) != true)) {
                    this.DateIsChangedField = value;
                    this.RaisePropertyChanged("DateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DaysPast {
            get {
                return this.DaysPastField;
            }
            set {
                if ((this.DaysPastField.Equals(value) != true)) {
                    this.DaysPastField = value;
                    this.RaisePropertyChanged("DaysPast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocketID {
            get {
                return this.DocketIDField;
            }
            set {
                if ((this.DocketIDField.Equals(value) != true)) {
                    this.DocketIDField = value;
                    this.RaisePropertyChanged("DocketID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocketIDIsChanged {
            get {
                return this.DocketIDIsChangedField;
            }
            set {
                if ((this.DocketIDIsChangedField.Equals(value) != true)) {
                    this.DocketIDIsChangedField = value;
                    this.RaisePropertyChanged("DocketIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocketOccurrenceID {
            get {
                return this.DocketOccurrenceIDField;
            }
            set {
                if ((this.DocketOccurrenceIDField.Equals(value) != true)) {
                    this.DocketOccurrenceIDField = value;
                    this.RaisePropertyChanged("DocketOccurrenceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocketOccurrenceIDIsChanged {
            get {
                return this.DocketOccurrenceIDIsChangedField;
            }
            set {
                if ((this.DocketOccurrenceIDIsChangedField.Equals(value) != true)) {
                    this.DocketOccurrenceIDIsChangedField = value;
                    this.RaisePropertyChanged("DocketOccurrenceIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationDescription {
            get {
                return this.DurationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationDescriptionField, value) != true)) {
                    this.DurationDescriptionField = value;
                    this.RaisePropertyChanged("DurationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DurationDescriptionIsChanged {
            get {
                return this.DurationDescriptionIsChangedField;
            }
            set {
                if ((this.DurationDescriptionIsChangedField.Equals(value) != true)) {
                    this.DurationDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("DurationDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EventCodeType {
            get {
                return this.EventCodeTypeField;
            }
            set {
                if ((this.EventCodeTypeField.Equals(value) != true)) {
                    this.EventCodeTypeField = value;
                    this.RaisePropertyChanged("EventCodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventDateIsChanged {
            get {
                return this.EventDateIsChangedField;
            }
            set {
                if ((this.EventDateIsChangedField.Equals(value) != true)) {
                    this.EventDateIsChangedField = value;
                    this.RaisePropertyChanged("EventDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventEndDate {
            get {
                return this.EventEndDateField;
            }
            set {
                if ((this.EventEndDateField.Equals(value) != true)) {
                    this.EventEndDateField = value;
                    this.RaisePropertyChanged("EventEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EventEndDateIsChanged {
            get {
                return this.EventEndDateIsChangedField;
            }
            set {
                if ((this.EventEndDateIsChangedField.Equals(value) != true)) {
                    this.EventEndDateIsChangedField = value;
                    this.RaisePropertyChanged("EventEndDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EventMasterCode {
            get {
                return this.EventMasterCodeField;
            }
            set {
                if ((this.EventMasterCodeField.Equals(value) != true)) {
                    this.EventMasterCodeField = value;
                    this.RaisePropertyChanged("EventMasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InitiatedBy {
            get {
                return this.InitiatedByField;
            }
            set {
                if ((this.InitiatedByField.Equals(value) != true)) {
                    this.InitiatedByField = value;
                    this.RaisePropertyChanged("InitiatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InitiatedByIsChanged {
            get {
                return this.InitiatedByIsChangedField;
            }
            set {
                if ((this.InitiatedByIsChangedField.Equals(value) != true)) {
                    this.InitiatedByIsChangedField = value;
                    this.RaisePropertyChanged("InitiatedByIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalID {
            get {
                return this.LocalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalIDField, value) != true)) {
                    this.LocalIDField = value;
                    this.RaisePropertyChanged("LocalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LocationCodeIsChanged {
            get {
                return this.LocationCodeIsChangedField;
            }
            set {
                if ((this.LocationCodeIsChangedField.Equals(value) != true)) {
                    this.LocationCodeIsChangedField = value;
                    this.RaisePropertyChanged("LocationCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Name Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NameIDIsChanged {
            get {
                return this.NameIDIsChangedField;
            }
            set {
                if ((this.NameIDIsChangedField.Equals(value) != true)) {
                    this.NameIDIsChangedField = value;
                    this.RaisePropertyChanged("NameIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentEventID {
            get {
                return this.ParentEventIDField;
            }
            set {
                if ((this.ParentEventIDField.Equals(value) != true)) {
                    this.ParentEventIDField = value;
                    this.RaisePropertyChanged("ParentEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ParentEventIDIsChanged {
            get {
                return this.ParentEventIDIsChangedField;
            }
            set {
                if ((this.ParentEventIDIsChangedField.Equals(value) != true)) {
                    this.ParentEventIDIsChangedField = value;
                    this.RaisePropertyChanged("ParentEventIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PriorityIsChanged {
            get {
                return this.PriorityIsChangedField;
            }
            set {
                if ((this.PriorityIsChangedField.Equals(value) != true)) {
                    this.PriorityIsChangedField = value;
                    this.RaisePropertyChanged("PriorityIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sealed {
            get {
                return this.SealedField;
            }
            set {
                if ((this.SealedField.Equals(value) != true)) {
                    this.SealedField = value;
                    this.RaisePropertyChanged("Sealed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SealedIsChanged {
            get {
                return this.SealedIsChangedField;
            }
            set {
                if ((this.SealedIsChangedField.Equals(value) != true)) {
                    this.SealedIsChangedField = value;
                    this.RaisePropertyChanged("SealedIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.TaskInvolvedName> TaskInvolvedNames {
            get {
                return this.TaskInvolvedNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskInvolvedNamesField, value) != true)) {
                    this.TaskInvolvedNamesField = value;
                    this.RaisePropertyChanged("TaskInvolvedNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TitleIsChanged {
            get {
                return this.TitleIsChangedField;
            }
            set {
                if ((this.TitleIsChangedField.Equals(value) != true)) {
                    this.TitleIsChangedField = value;
                    this.RaisePropertyChanged("TitleIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BondConditionType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class BondConditionType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BondStatusType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class BondStatusType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte CodeType {
            get {
                return this.CodeTypeField;
            }
            set {
                if ((this.CodeTypeField.Equals(value) != true)) {
                    this.CodeTypeField = value;
                    this.RaisePropertyChanged("CodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BondType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class BondType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultCollectingAgencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultCollectingAgencyDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> DefaultPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultCollectingAgency {
            get {
                return this.DefaultCollectingAgencyField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultCollectingAgencyField, value) != true)) {
                    this.DefaultCollectingAgencyField = value;
                    this.RaisePropertyChanged("DefaultCollectingAgency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultCollectingAgencyDesc {
            get {
                return this.DefaultCollectingAgencyDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultCollectingAgencyDescField, value) != true)) {
                    this.DefaultCollectingAgencyDescField = value;
                    this.RaisePropertyChanged("DefaultCollectingAgencyDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> DefaultPercent {
            get {
                return this.DefaultPercentField;
            }
            set {
                if ((this.DefaultPercentField.Equals(value) != true)) {
                    this.DefaultPercentField = value;
                    this.RaisePropertyChanged("DefaultPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseAttributeCodeListType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CaseAttributeCodeListType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseAttributeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseAttributeCode {
            get {
                return this.CaseAttributeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseAttributeCodeField, value) != true)) {
                    this.CaseAttributeCodeField = value;
                    this.RaisePropertyChanged("CaseAttributeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseAttributeType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CaseAttributeType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Notify {
            get {
                return this.NotifyField;
            }
            set {
                if ((this.NotifyField.Equals(value) != true)) {
                    this.NotifyField = value;
                    this.RaisePropertyChanged("Notify");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseNoteType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CaseNoteType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseStatusType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CaseStatusType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CaseType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CategoryType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChargeAttributeCodeListType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ChargeAttributeCodeListType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChargeAttributeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChargeAttributeCode {
            get {
                return this.ChargeAttributeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeAttributeCodeField, value) != true)) {
                    this.ChargeAttributeCodeField = value;
                    this.RaisePropertyChanged("ChargeAttributeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChargeAttributeType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ChargeAttributeType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Notify {
            get {
                return this.NotifyField;
            }
            set {
                if ((this.NotifyField.Equals(value) != true)) {
                    this.NotifyField = value;
                    this.RaisePropertyChanged("Notify");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChargeEnhancementType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ChargeEnhancementType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChargeHistoryType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ChargeHistoryType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MastercodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Mastercode {
            get {
                return this.MastercodeField;
            }
            set {
                if ((this.MastercodeField.Equals(value) != true)) {
                    this.MastercodeField = value;
                    this.RaisePropertyChanged("Mastercode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChargeType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ChargeType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConditionType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ConditionType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CorrespondenceType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CorrespondenceType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountyType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CountyType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreditSuspendType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CreditSuspendType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DispositionType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class DispositionType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocketInstanceType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class DocketInstanceType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class DocumentType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentExtensionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JDATemplateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> LockTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PrintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RunField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentExtension {
            get {
                return this.DocumentExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentExtensionField, value) != true)) {
                    this.DocumentExtensionField = value;
                    this.RaisePropertyChanged("DocumentExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentExtensionCode {
            get {
                return this.DocumentExtensionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentExtensionCodeField, value) != true)) {
                    this.DocumentExtensionCodeField = value;
                    this.RaisePropertyChanged("DocumentExtensionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JDATemplateID {
            get {
                return this.JDATemplateIDField;
            }
            set {
                if ((this.JDATemplateIDField.Equals(value) != true)) {
                    this.JDATemplateIDField = value;
                    this.RaisePropertyChanged("JDATemplateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> LockType {
            get {
                return this.LockTypeField;
            }
            set {
                if ((this.LockTypeField.Equals(value) != true)) {
                    this.LockTypeField = value;
                    this.RaisePropertyChanged("LockType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Print {
            get {
                return this.PrintField;
            }
            set {
                if ((this.PrintField.Equals(value) != true)) {
                    this.PrintField = value;
                    this.RaisePropertyChanged("Print");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Run {
            get {
                return this.RunField;
            }
            set {
                if ((this.RunField.Equals(value) != true)) {
                    this.RunField = value;
                    this.RaisePropertyChanged("Run");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Template {
            get {
                return this.TemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateField, value) != true)) {
                    this.TemplateField = value;
                    this.RaisePropertyChanged("Template");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class EmailType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventLocationType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class EventLocationType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventStatusType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class EventStatusType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class EventType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DefaultDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultDurationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DefaultStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DefaultDuration {
            get {
                return this.DefaultDurationField;
            }
            set {
                if ((this.DefaultDurationField.Equals(value) != true)) {
                    this.DefaultDurationField = value;
                    this.RaisePropertyChanged("DefaultDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultDurationDescription {
            get {
                return this.DefaultDurationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultDurationDescriptionField, value) != true)) {
                    this.DefaultDurationDescriptionField = value;
                    this.RaisePropertyChanged("DefaultDurationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DefaultStartTime {
            get {
                return this.DefaultStartTimeField;
            }
            set {
                if ((this.DefaultStartTimeField.Equals(value) != true)) {
                    this.DefaultStartTimeField = value;
                    this.RaisePropertyChanged("DefaultStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExhibitStatusType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ExhibitStatusType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExhibitType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ExhibitType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IntoxicantType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class IntoxicantType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvolveType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class InvolveType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GrantCaseVisibilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GrantCaseVisibility {
            get {
                return this.GrantCaseVisibilityField;
            }
            set {
                if ((this.GrantCaseVisibilityField.Equals(value) != true)) {
                    this.GrantCaseVisibilityField = value;
                    this.RaisePropertyChanged("GrantCaseVisibility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JurisdictionType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class JurisdictionType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountyCode {
            get {
                return this.CountyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyCodeField, value) != true)) {
                    this.CountyCodeField = value;
                    this.RaisePropertyChanged("CountyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictCode {
            get {
                return this.DistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictCodeField, value) != true)) {
                    this.DistrictCodeField = value;
                    this.RaisePropertyChanged("DistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateCode {
            get {
                return this.StateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StateCodeField, value) != true)) {
                    this.StateCodeField = value;
                    this.RaisePropertyChanged("StateCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JusticeBrokerMessageQueue", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class JusticeBrokerMessageQueue : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ActionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActionNumberIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExchangeEntityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExchangeEntityIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FilenameIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MessageIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NoteIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StatusDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ActionNumber {
            get {
                return this.ActionNumberField;
            }
            set {
                if ((this.ActionNumberField.Equals(value) != true)) {
                    this.ActionNumberField = value;
                    this.RaisePropertyChanged("ActionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ActionNumberIsChanged {
            get {
                return this.ActionNumberIsChangedField;
            }
            set {
                if ((this.ActionNumberIsChangedField.Equals(value) != true)) {
                    this.ActionNumberIsChangedField = value;
                    this.RaisePropertyChanged("ActionNumberIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExchangeEntityID {
            get {
                return this.ExchangeEntityIDField;
            }
            set {
                if ((this.ExchangeEntityIDField.Equals(value) != true)) {
                    this.ExchangeEntityIDField = value;
                    this.RaisePropertyChanged("ExchangeEntityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExchangeEntityIDIsChanged {
            get {
                return this.ExchangeEntityIDIsChangedField;
            }
            set {
                if ((this.ExchangeEntityIDIsChangedField.Equals(value) != true)) {
                    this.ExchangeEntityIDIsChangedField = value;
                    this.RaisePropertyChanged("ExchangeEntityIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filename {
            get {
                return this.FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameField, value) != true)) {
                    this.FilenameField = value;
                    this.RaisePropertyChanged("Filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FilenameIsChanged {
            get {
                return this.FilenameIsChangedField;
            }
            set {
                if ((this.FilenameIsChangedField.Equals(value) != true)) {
                    this.FilenameIsChangedField = value;
                    this.RaisePropertyChanged("FilenameIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MessageIsChanged {
            get {
                return this.MessageIsChangedField;
            }
            set {
                if ((this.MessageIsChangedField.Equals(value) != true)) {
                    this.MessageIsChangedField = value;
                    this.RaisePropertyChanged("MessageIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NoteIsChanged {
            get {
                return this.NoteIsChangedField;
            }
            set {
                if ((this.NoteIsChangedField.Equals(value) != true)) {
                    this.NoteIsChangedField = value;
                    this.RaisePropertyChanged("NoteIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StatusDate {
            get {
                return this.StatusDateField;
            }
            set {
                if ((this.StatusDateField.Equals(value) != true)) {
                    this.StatusDateField = value;
                    this.RaisePropertyChanged("StatusDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameAttributeCodeListType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class NameAttributeCodeListType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameAttributeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameAttributeCode {
            get {
                return this.NameAttributeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NameAttributeCodeField, value) != true)) {
                    this.NameAttributeCodeField = value;
                    this.RaisePropertyChanged("NameAttributeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameAttributeType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class NameAttributeType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Notify {
            get {
                return this.NotifyField;
            }
            set {
                if ((this.NotifyField.Equals(value) != true)) {
                    this.NotifyField = value;
                    this.RaisePropertyChanged("Notify");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class NameType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NonCasePaymentItemType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class NonCasePaymentItemType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PricePerUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToAccountIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Payee {
            get {
                return this.PayeeField;
            }
            set {
                if ((this.PayeeField.Equals(value) != true)) {
                    this.PayeeField = value;
                    this.RaisePropertyChanged("Payee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PricePerUnit {
            get {
                return this.PricePerUnitField;
            }
            set {
                if ((this.PricePerUnitField.Equals(value) != true)) {
                    this.PricePerUnitField = value;
                    this.RaisePropertyChanged("PricePerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToAccountID {
            get {
                return this.ToAccountIDField;
            }
            set {
                if ((this.ToAccountIDField.Equals(value) != true)) {
                    this.ToAccountIDField = value;
                    this.RaisePropertyChanged("ToAccountID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NonCollectableFinancialType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class NonCollectableFinancialType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NumberType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class NumberType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mask {
            get {
                return this.MaskField;
            }
            set {
                if ((object.ReferenceEquals(this.MaskField, value) != true)) {
                    this.MaskField = value;
                    this.RaisePropertyChanged("Mask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObligationType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ObligationType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AcceptNonMonetaryPaymentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AllocationPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AllocationPriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CompareDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultAgencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DefaultAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DefaultDueOffSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DefaultFromAccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultFromAgencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DefaultPayeeNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DefaultToAccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AcceptNonMonetaryPayments {
            get {
                return this.AcceptNonMonetaryPaymentsField;
            }
            set {
                if ((this.AcceptNonMonetaryPaymentsField.Equals(value) != true)) {
                    this.AcceptNonMonetaryPaymentsField = value;
                    this.RaisePropertyChanged("AcceptNonMonetaryPayments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AllocationPercent {
            get {
                return this.AllocationPercentField;
            }
            set {
                if ((this.AllocationPercentField.Equals(value) != true)) {
                    this.AllocationPercentField = value;
                    this.RaisePropertyChanged("AllocationPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AllocationPriority {
            get {
                return this.AllocationPriorityField;
            }
            set {
                if ((this.AllocationPriorityField.Equals(value) != true)) {
                    this.AllocationPriorityField = value;
                    this.RaisePropertyChanged("AllocationPriority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte CompareDate {
            get {
                return this.CompareDateField;
            }
            set {
                if ((this.CompareDateField.Equals(value) != true)) {
                    this.CompareDateField = value;
                    this.RaisePropertyChanged("CompareDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultAgencyCode {
            get {
                return this.DefaultAgencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultAgencyCodeField, value) != true)) {
                    this.DefaultAgencyCodeField = value;
                    this.RaisePropertyChanged("DefaultAgencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> DefaultAmount {
            get {
                return this.DefaultAmountField;
            }
            set {
                if ((this.DefaultAmountField.Equals(value) != true)) {
                    this.DefaultAmountField = value;
                    this.RaisePropertyChanged("DefaultAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DefaultDueOffSet {
            get {
                return this.DefaultDueOffSetField;
            }
            set {
                if ((this.DefaultDueOffSetField.Equals(value) != true)) {
                    this.DefaultDueOffSetField = value;
                    this.RaisePropertyChanged("DefaultDueOffSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DefaultFromAccountID {
            get {
                return this.DefaultFromAccountIDField;
            }
            set {
                if ((this.DefaultFromAccountIDField.Equals(value) != true)) {
                    this.DefaultFromAccountIDField = value;
                    this.RaisePropertyChanged("DefaultFromAccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultFromAgencyCode {
            get {
                return this.DefaultFromAgencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultFromAgencyCodeField, value) != true)) {
                    this.DefaultFromAgencyCodeField = value;
                    this.RaisePropertyChanged("DefaultFromAgencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DefaultPayeeNameID {
            get {
                return this.DefaultPayeeNameIDField;
            }
            set {
                if ((this.DefaultPayeeNameIDField.Equals(value) != true)) {
                    this.DefaultPayeeNameIDField = value;
                    this.RaisePropertyChanged("DefaultPayeeNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DefaultToAccountID {
            get {
                return this.DefaultToAccountIDField;
            }
            set {
                if ((this.DefaultToAccountIDField.Equals(value) != true)) {
                    this.DefaultToAccountIDField = value;
                    this.RaisePropertyChanged("DefaultToAccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentStatusType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class PaymentStatusType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class PaymentType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte CodeType {
            get {
                return this.CodeTypeField;
            }
            set {
                if ((this.CodeTypeField.Equals(value) != true)) {
                    this.CodeTypeField = value;
                    this.RaisePropertyChanged("CodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhoneType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class PhoneType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhysicalLocationType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class PhysicalLocationType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentPhysicalLocationIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte CodeType {
            get {
                return this.CodeTypeField;
            }
            set {
                if ((this.CodeTypeField.Equals(value) != true)) {
                    this.CodeTypeField = value;
                    this.RaisePropertyChanged("CodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentPhysicalLocationID {
            get {
                return this.ParentPhysicalLocationIDField;
            }
            set {
                if ((this.ParentPhysicalLocationIDField.Equals(value) != true)) {
                    this.ParentPhysicalLocationIDField = value;
                    this.RaisePropertyChanged("ParentPhysicalLocationID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PleaType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class PleaType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelatedCaseType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class RelatedCaseType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte CodeType {
            get {
                return this.CodeTypeField;
            }
            set {
                if ((this.CodeTypeField.Equals(value) != true)) {
                    this.CodeTypeField = value;
                    this.RaisePropertyChanged("CodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelationshipType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class RelationshipType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SentenceType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class SentenceType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Statute", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Statute : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CategoryCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChargeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChargeIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ClassCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CompareDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CompareDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnhancerModifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnhancerModifierIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExpirationDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeverityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SeverityCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShortDescriptionIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteAttribute> StatuteAttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatuteCombinedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteText> StatuteTextsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ActiveDateIsChanged {
            get {
                return this.ActiveDateIsChangedField;
            }
            set {
                if ((this.ActiveDateIsChangedField.Equals(value) != true)) {
                    this.ActiveDateIsChangedField = value;
                    this.RaisePropertyChanged("ActiveDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CategoryCodeIsChanged {
            get {
                return this.CategoryCodeIsChangedField;
            }
            set {
                if ((this.CategoryCodeIsChangedField.Equals(value) != true)) {
                    this.CategoryCodeIsChangedField = value;
                    this.RaisePropertyChanged("CategoryCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChargeID {
            get {
                return this.ChargeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeIDField, value) != true)) {
                    this.ChargeIDField = value;
                    this.RaisePropertyChanged("ChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChargeIDIsChanged {
            get {
                return this.ChargeIDIsChangedField;
            }
            set {
                if ((this.ChargeIDIsChangedField.Equals(value) != true)) {
                    this.ChargeIDIsChangedField = value;
                    this.RaisePropertyChanged("ChargeIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassCode {
            get {
                return this.ClassCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassCodeField, value) != true)) {
                    this.ClassCodeField = value;
                    this.RaisePropertyChanged("ClassCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ClassCodeIsChanged {
            get {
                return this.ClassCodeIsChangedField;
            }
            set {
                if ((this.ClassCodeIsChangedField.Equals(value) != true)) {
                    this.ClassCodeIsChangedField = value;
                    this.RaisePropertyChanged("ClassCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CodeIsChanged {
            get {
                return this.CodeIsChangedField;
            }
            set {
                if ((this.CodeIsChangedField.Equals(value) != true)) {
                    this.CodeIsChangedField = value;
                    this.RaisePropertyChanged("CodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte CompareDate {
            get {
                return this.CompareDateField;
            }
            set {
                if ((this.CompareDateField.Equals(value) != true)) {
                    this.CompareDateField = value;
                    this.RaisePropertyChanged("CompareDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CompareDateIsChanged {
            get {
                return this.CompareDateIsChangedField;
            }
            set {
                if ((this.CompareDateIsChangedField.Equals(value) != true)) {
                    this.CompareDateIsChangedField = value;
                    this.RaisePropertyChanged("CompareDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DescriptionIsChanged {
            get {
                return this.DescriptionIsChangedField;
            }
            set {
                if ((this.DescriptionIsChangedField.Equals(value) != true)) {
                    this.DescriptionIsChangedField = value;
                    this.RaisePropertyChanged("DescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnhancerModifier {
            get {
                return this.EnhancerModifierField;
            }
            set {
                if ((object.ReferenceEquals(this.EnhancerModifierField, value) != true)) {
                    this.EnhancerModifierField = value;
                    this.RaisePropertyChanged("EnhancerModifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnhancerModifierIsChanged {
            get {
                return this.EnhancerModifierIsChangedField;
            }
            set {
                if ((this.EnhancerModifierIsChangedField.Equals(value) != true)) {
                    this.EnhancerModifierIsChangedField = value;
                    this.RaisePropertyChanged("EnhancerModifierIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExpirationDateIsChanged {
            get {
                return this.ExpirationDateIsChangedField;
            }
            set {
                if ((this.ExpirationDateIsChangedField.Equals(value) != true)) {
                    this.ExpirationDateIsChangedField = value;
                    this.RaisePropertyChanged("ExpirationDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeverityCode {
            get {
                return this.SeverityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SeverityCodeField, value) != true)) {
                    this.SeverityCodeField = value;
                    this.RaisePropertyChanged("SeverityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SeverityCodeIsChanged {
            get {
                return this.SeverityCodeIsChangedField;
            }
            set {
                if ((this.SeverityCodeIsChangedField.Equals(value) != true)) {
                    this.SeverityCodeIsChangedField = value;
                    this.RaisePropertyChanged("SeverityCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortDescription {
            get {
                return this.ShortDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortDescriptionField, value) != true)) {
                    this.ShortDescriptionField = value;
                    this.RaisePropertyChanged("ShortDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShortDescriptionIsChanged {
            get {
                return this.ShortDescriptionIsChangedField;
            }
            set {
                if ((this.ShortDescriptionIsChangedField.Equals(value) != true)) {
                    this.ShortDescriptionIsChangedField = value;
                    this.RaisePropertyChanged("ShortDescriptionIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteAttribute> StatuteAttributes {
            get {
                return this.StatuteAttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteAttributesField, value) != true)) {
                    this.StatuteAttributesField = value;
                    this.RaisePropertyChanged("StatuteAttributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatuteCombined {
            get {
                return this.StatuteCombinedField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteCombinedField, value) != true)) {
                    this.StatuteCombinedField = value;
                    this.RaisePropertyChanged("StatuteCombined");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteText> StatuteTexts {
            get {
                return this.StatuteTextsField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteTextsField, value) != true)) {
                    this.StatuteTextsField = value;
                    this.RaisePropertyChanged("StatuteTexts");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatuteAttribute", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class StatuteAttribute : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MasterCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Statute StatuteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatuteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatuteIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ValueDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueDurationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValueDurationIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ValueMoneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValueMoneyIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ValueNumericField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValueNumericIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValueStringIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CodeIsChanged {
            get {
                return this.CodeIsChangedField;
            }
            set {
                if ((this.CodeIsChangedField.Equals(value) != true)) {
                    this.CodeIsChangedField = value;
                    this.RaisePropertyChanged("CodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MasterCodeIsChanged {
            get {
                return this.MasterCodeIsChangedField;
            }
            set {
                if ((this.MasterCodeIsChangedField.Equals(value) != true)) {
                    this.MasterCodeIsChangedField = value;
                    this.RaisePropertyChanged("MasterCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Statute Statute {
            get {
                return this.StatuteField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteField, value) != true)) {
                    this.StatuteField = value;
                    this.RaisePropertyChanged("Statute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatuteID {
            get {
                return this.StatuteIDField;
            }
            set {
                if ((this.StatuteIDField.Equals(value) != true)) {
                    this.StatuteIDField = value;
                    this.RaisePropertyChanged("StatuteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatuteIDIsChanged {
            get {
                return this.StatuteIDIsChangedField;
            }
            set {
                if ((this.StatuteIDIsChangedField.Equals(value) != true)) {
                    this.StatuteIDIsChangedField = value;
                    this.RaisePropertyChanged("StatuteIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ValueDuration {
            get {
                return this.ValueDurationField;
            }
            set {
                if ((this.ValueDurationField.Equals(value) != true)) {
                    this.ValueDurationField = value;
                    this.RaisePropertyChanged("ValueDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueDurationDescription {
            get {
                return this.ValueDurationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueDurationDescriptionField, value) != true)) {
                    this.ValueDurationDescriptionField = value;
                    this.RaisePropertyChanged("ValueDurationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValueDurationIsChanged {
            get {
                return this.ValueDurationIsChangedField;
            }
            set {
                if ((this.ValueDurationIsChangedField.Equals(value) != true)) {
                    this.ValueDurationIsChangedField = value;
                    this.RaisePropertyChanged("ValueDurationIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ValueMoney {
            get {
                return this.ValueMoneyField;
            }
            set {
                if ((this.ValueMoneyField.Equals(value) != true)) {
                    this.ValueMoneyField = value;
                    this.RaisePropertyChanged("ValueMoney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValueMoneyIsChanged {
            get {
                return this.ValueMoneyIsChangedField;
            }
            set {
                if ((this.ValueMoneyIsChangedField.Equals(value) != true)) {
                    this.ValueMoneyIsChangedField = value;
                    this.RaisePropertyChanged("ValueMoneyIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ValueNumeric {
            get {
                return this.ValueNumericField;
            }
            set {
                if ((this.ValueNumericField.Equals(value) != true)) {
                    this.ValueNumericField = value;
                    this.RaisePropertyChanged("ValueNumeric");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValueNumericIsChanged {
            get {
                return this.ValueNumericIsChangedField;
            }
            set {
                if ((this.ValueNumericIsChangedField.Equals(value) != true)) {
                    this.ValueNumericIsChangedField = value;
                    this.RaisePropertyChanged("ValueNumericIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueString {
            get {
                return this.ValueStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueStringField, value) != true)) {
                    this.ValueStringField = value;
                    this.RaisePropertyChanged("ValueString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValueStringIsChanged {
            get {
                return this.ValueStringIsChangedField;
            }
            set {
                if ((this.ValueStringIsChangedField.Equals(value) != true)) {
                    this.ValueStringIsChangedField = value;
                    this.RaisePropertyChanged("ValueStringIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatuteText", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class StatuteText : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActivationDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnhancerModifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExpirationDateIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Statute StatuteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatuteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatuteIDIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TextIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TypeCodeIsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivationDate {
            get {
                return this.ActivationDateField;
            }
            set {
                if ((this.ActivationDateField.Equals(value) != true)) {
                    this.ActivationDateField = value;
                    this.RaisePropertyChanged("ActivationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ActivationDateIsChanged {
            get {
                return this.ActivationDateIsChangedField;
            }
            set {
                if ((this.ActivationDateIsChangedField.Equals(value) != true)) {
                    this.ActivationDateIsChangedField = value;
                    this.RaisePropertyChanged("ActivationDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnhancerModifier {
            get {
                return this.EnhancerModifierField;
            }
            set {
                if ((object.ReferenceEquals(this.EnhancerModifierField, value) != true)) {
                    this.EnhancerModifierField = value;
                    this.RaisePropertyChanged("EnhancerModifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExpirationDateIsChanged {
            get {
                return this.ExpirationDateIsChangedField;
            }
            set {
                if ((this.ExpirationDateIsChangedField.Equals(value) != true)) {
                    this.ExpirationDateIsChangedField = value;
                    this.RaisePropertyChanged("ExpirationDateIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Statute Statute {
            get {
                return this.StatuteField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteField, value) != true)) {
                    this.StatuteField = value;
                    this.RaisePropertyChanged("Statute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatuteID {
            get {
                return this.StatuteIDField;
            }
            set {
                if ((this.StatuteIDField.Equals(value) != true)) {
                    this.StatuteIDField = value;
                    this.RaisePropertyChanged("StatuteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatuteIDIsChanged {
            get {
                return this.StatuteIDIsChangedField;
            }
            set {
                if ((this.StatuteIDIsChangedField.Equals(value) != true)) {
                    this.StatuteIDIsChangedField = value;
                    this.RaisePropertyChanged("StatuteIDIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TextIsChanged {
            get {
                return this.TextIsChangedField;
            }
            set {
                if ((this.TextIsChangedField.Equals(value) != true)) {
                    this.TextIsChangedField = value;
                    this.RaisePropertyChanged("TextIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCodeDescription {
            get {
                return this.TypeCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeDescriptionField, value) != true)) {
                    this.TypeCodeDescriptionField = value;
                    this.RaisePropertyChanged("TypeCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TypeCodeIsChanged {
            get {
                return this.TypeCodeIsChangedField;
            }
            set {
                if ((this.TypeCodeIsChangedField.Equals(value) != true)) {
                    this.TypeCodeIsChangedField = value;
                    this.RaisePropertyChanged("TypeCodeIsChanged");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatuteAttributeType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class StatuteAttributeType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionWithTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionWithType {
            get {
                return this.DescriptionWithTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionWithTypeField, value) != true)) {
                    this.DescriptionWithTypeField = value;
                    this.RaisePropertyChanged("DescriptionWithType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatuteCategoryType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class StatuteCategoryType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatuteClassType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class StatuteClassType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatuteSeverityType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class StatuteSeverityType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatuteTextType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class StatuteTextType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class TaskType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryCodeField, value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeTrackingStatusType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class TimeTrackingStatusType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeTrackingType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class TimeTrackingType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VoucherType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class VoucherType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte CodeType {
            get {
                return this.CodeTypeField;
            }
            set {
                if ((this.CodeTypeField.Equals(value) != true)) {
                    this.CodeTypeField = value;
                    this.RaisePropertyChanged("CodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VoucherStatusType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class VoucherStatusType : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MasterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MasterCode {
            get {
                return this.MasterCodeField;
            }
            set {
                if ((this.MasterCodeField.Equals(value) != true)) {
                    this.MasterCodeField = value;
                    this.RaisePropertyChanged("MasterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Voucher", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Voucher : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateWrittenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FromAccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotesIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReferenceNumberIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusCodeIsChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Name WrittenByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WrittenByNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Name WrittenToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WrittenToNameIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((this.AddedByField.Equals(value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyCode {
            get {
                return this.AgencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyCodeField, value) != true)) {
                    this.AgencyCodeField = value;
                    this.RaisePropertyChanged("AgencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateWritten {
            get {
                return this.DateWrittenField;
            }
            set {
                if ((this.DateWrittenField.Equals(value) != true)) {
                    this.DateWrittenField = value;
                    this.RaisePropertyChanged("DateWritten");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FromAccountID {
            get {
                return this.FromAccountIDField;
            }
            set {
                if ((this.FromAccountIDField.Equals(value) != true)) {
                    this.FromAccountIDField = value;
                    this.RaisePropertyChanged("FromAccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotesIsChanged {
            get {
                return this.NotesIsChangedField;
            }
            set {
                if ((this.NotesIsChangedField.Equals(value) != true)) {
                    this.NotesIsChangedField = value;
                    this.RaisePropertyChanged("NotesIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceNumber {
            get {
                return this.ReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceNumberField, value) != true)) {
                    this.ReferenceNumberField = value;
                    this.RaisePropertyChanged("ReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReferenceNumberIsChanged {
            get {
                return this.ReferenceNumberIsChangedField;
            }
            set {
                if ((this.ReferenceNumberIsChangedField.Equals(value) != true)) {
                    this.ReferenceNumberIsChangedField = value;
                    this.RaisePropertyChanged("ReferenceNumberIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StatusCodeIsChanged {
            get {
                return this.StatusCodeIsChangedField;
            }
            set {
                if ((this.StatusCodeIsChangedField.Equals(value) != true)) {
                    this.StatusCodeIsChangedField = value;
                    this.RaisePropertyChanged("StatusCodeIsChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Name WrittenBy {
            get {
                return this.WrittenByField;
            }
            set {
                if ((object.ReferenceEquals(this.WrittenByField, value) != true)) {
                    this.WrittenByField = value;
                    this.RaisePropertyChanged("WrittenBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WrittenByNameID {
            get {
                return this.WrittenByNameIDField;
            }
            set {
                if ((this.WrittenByNameIDField.Equals(value) != true)) {
                    this.WrittenByNameIDField = value;
                    this.RaisePropertyChanged("WrittenByNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Name WrittenTo {
            get {
                return this.WrittenToField;
            }
            set {
                if ((object.ReferenceEquals(this.WrittenToField, value) != true)) {
                    this.WrittenToField = value;
                    this.RaisePropertyChanged("WrittenTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WrittenToNameID {
            get {
                return this.WrittenToNameIDField;
            }
            set {
                if ((this.WrittenToNameIDField.Equals(value) != true)) {
                    this.WrittenToNameIDField = value;
                    this.RaisePropertyChanged("WrittenToNameID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VoucherableAmount", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class VoucherableAmount : AdvancedJustWareAPI.api.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountDueTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountUnallocatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountVoucheredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((this.AccountIDField.Equals(value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyCode {
            get {
                return this.AgencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyCodeField, value) != true)) {
                    this.AgencyCodeField = value;
                    this.RaisePropertyChanged("AgencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AmountAvailable {
            get {
                return this.AmountAvailableField;
            }
            set {
                if ((this.AmountAvailableField.Equals(value) != true)) {
                    this.AmountAvailableField = value;
                    this.RaisePropertyChanged("AmountAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AmountDueTotal {
            get {
                return this.AmountDueTotalField;
            }
            set {
                if ((this.AmountDueTotalField.Equals(value) != true)) {
                    this.AmountDueTotalField = value;
                    this.RaisePropertyChanged("AmountDueTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AmountUnallocated {
            get {
                return this.AmountUnallocatedField;
            }
            set {
                if ((this.AmountUnallocatedField.Equals(value) != true)) {
                    this.AmountUnallocatedField = value;
                    this.RaisePropertyChanged("AmountUnallocated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AmountVouchered {
            get {
                return this.AmountVoucheredField;
            }
            set {
                if ((this.AmountVoucheredField.Equals(value) != true)) {
                    this.AmountVoucheredField = value;
                    this.RaisePropertyChanged("AmountVouchered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities")]
    public enum OperationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Insert = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Update = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventEntityType", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities")]
    public enum EventEntityType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Name = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Case = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Key", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api")]
    [System.SerializableAttribute()]
    public partial class Key : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewCaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TempIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewCaseID {
            get {
                return this.NewCaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NewCaseIDField, value) != true)) {
                    this.NewCaseIDField = value;
                    this.RaisePropertyChanged("NewCaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewID {
            get {
                return this.NewIDField;
            }
            set {
                if ((this.NewIDField.Equals(value) != true)) {
                    this.NewIDField = value;
                    this.RaisePropertyChanged("NewID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TempID {
            get {
                return this.TempIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TempIDField, value) != true)) {
                    this.TempIDField = value;
                    this.RaisePropertyChanged("TempID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CopyCaseParameters", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api")]
    [System.SerializableAttribute()]
    public partial class CopyCaseParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyAddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseRelationshipTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CopyCaseAttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CopyCaseNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CopyCaseStatusHistoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CopyChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CopyFutureEventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CopyNonPipInvolvementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CopyPastEventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CopyRcvdDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NewPipNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PipInvolveTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyAddedBy {
            get {
                return this.AgencyAddedByField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyAddedByField, value) != true)) {
                    this.AgencyAddedByField = value;
                    this.RaisePropertyChanged("AgencyAddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseRelationshipTypeCode {
            get {
                return this.CaseRelationshipTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseRelationshipTypeCodeField, value) != true)) {
                    this.CaseRelationshipTypeCodeField = value;
                    this.RaisePropertyChanged("CaseRelationshipTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CopyCaseAttributes {
            get {
                return this.CopyCaseAttributesField;
            }
            set {
                if ((this.CopyCaseAttributesField.Equals(value) != true)) {
                    this.CopyCaseAttributesField = value;
                    this.RaisePropertyChanged("CopyCaseAttributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CopyCaseNotes {
            get {
                return this.CopyCaseNotesField;
            }
            set {
                if ((this.CopyCaseNotesField.Equals(value) != true)) {
                    this.CopyCaseNotesField = value;
                    this.RaisePropertyChanged("CopyCaseNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CopyCaseStatusHistory {
            get {
                return this.CopyCaseStatusHistoryField;
            }
            set {
                if ((this.CopyCaseStatusHistoryField.Equals(value) != true)) {
                    this.CopyCaseStatusHistoryField = value;
                    this.RaisePropertyChanged("CopyCaseStatusHistory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CopyCharges {
            get {
                return this.CopyChargesField;
            }
            set {
                if ((this.CopyChargesField.Equals(value) != true)) {
                    this.CopyChargesField = value;
                    this.RaisePropertyChanged("CopyCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CopyFutureEvents {
            get {
                return this.CopyFutureEventsField;
            }
            set {
                if ((this.CopyFutureEventsField.Equals(value) != true)) {
                    this.CopyFutureEventsField = value;
                    this.RaisePropertyChanged("CopyFutureEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CopyNonPipInvolvements {
            get {
                return this.CopyNonPipInvolvementsField;
            }
            set {
                if ((this.CopyNonPipInvolvementsField.Equals(value) != true)) {
                    this.CopyNonPipInvolvementsField = value;
                    this.RaisePropertyChanged("CopyNonPipInvolvements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CopyPastEvents {
            get {
                return this.CopyPastEventsField;
            }
            set {
                if ((this.CopyPastEventsField.Equals(value) != true)) {
                    this.CopyPastEventsField = value;
                    this.RaisePropertyChanged("CopyPastEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CopyRcvdDt {
            get {
                return this.CopyRcvdDtField;
            }
            set {
                if ((this.CopyRcvdDtField.Equals(value) != true)) {
                    this.CopyRcvdDtField = value;
                    this.RaisePropertyChanged("CopyRcvdDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NewPipNameID {
            get {
                return this.NewPipNameIDField;
            }
            set {
                if ((this.NewPipNameIDField.Equals(value) != true)) {
                    this.NewPipNameIDField = value;
                    this.RaisePropertyChanged("NewPipNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PipInvolveTypeCode {
            get {
                return this.PipInvolveTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PipInvolveTypeCodeField, value) != true)) {
                    this.PipInvolveTypeCodeField = value;
                    this.RaisePropertyChanged("PipInvolveTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeCodeField, value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VerifyInstallResult", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities")]
    [System.SerializableAttribute()]
    public partial class VerifyInstallResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AppPersonIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssemblyVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DbVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DownloadTempFolderPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Permissions DownloadTempFolderPermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AdvancedJustWareAPI.api.EntityPermissions> EntityPermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FileAccessCredentialsAreValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastUpgradeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UploadTempFolderPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AdvancedJustWareAPI.api.Permissions UploadTempFolderPermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UsingDownloadTempFolderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyCode {
            get {
                return this.AgencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyCodeField, value) != true)) {
                    this.AgencyCodeField = value;
                    this.RaisePropertyChanged("AgencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppPersonID {
            get {
                return this.AppPersonIDField;
            }
            set {
                if ((this.AppPersonIDField.Equals(value) != true)) {
                    this.AppPersonIDField = value;
                    this.RaisePropertyChanged("AppPersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyVersion {
            get {
                return this.AssemblyVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyVersionField, value) != true)) {
                    this.AssemblyVersionField = value;
                    this.RaisePropertyChanged("AssemblyVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DbVersion {
            get {
                return this.DbVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.DbVersionField, value) != true)) {
                    this.DbVersionField = value;
                    this.RaisePropertyChanged("DbVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DownloadTempFolderPath {
            get {
                return this.DownloadTempFolderPathField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadTempFolderPathField, value) != true)) {
                    this.DownloadTempFolderPathField = value;
                    this.RaisePropertyChanged("DownloadTempFolderPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Permissions DownloadTempFolderPermissions {
            get {
                return this.DownloadTempFolderPermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadTempFolderPermissionsField, value) != true)) {
                    this.DownloadTempFolderPermissionsField = value;
                    this.RaisePropertyChanged("DownloadTempFolderPermissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.EntityPermissions> EntityPermissions {
            get {
                return this.EntityPermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityPermissionsField, value) != true)) {
                    this.EntityPermissionsField = value;
                    this.RaisePropertyChanged("EntityPermissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FileAccessCredentialsAreValid {
            get {
                return this.FileAccessCredentialsAreValidField;
            }
            set {
                if ((this.FileAccessCredentialsAreValidField.Equals(value) != true)) {
                    this.FileAccessCredentialsAreValidField = value;
                    this.RaisePropertyChanged("FileAccessCredentialsAreValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileVersion {
            get {
                return this.FileVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.FileVersionField, value) != true)) {
                    this.FileVersionField = value;
                    this.RaisePropertyChanged("FileVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActiveUser {
            get {
                return this.IsActiveUserField;
            }
            set {
                if ((this.IsActiveUserField.Equals(value) != true)) {
                    this.IsActiveUserField = value;
                    this.RaisePropertyChanged("IsActiveUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastUpgradeDate {
            get {
                return this.LastUpgradeDateField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpgradeDateField, value) != true)) {
                    this.LastUpgradeDateField = value;
                    this.RaisePropertyChanged("LastUpgradeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UploadTempFolderPath {
            get {
                return this.UploadTempFolderPathField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadTempFolderPathField, value) != true)) {
                    this.UploadTempFolderPathField = value;
                    this.RaisePropertyChanged("UploadTempFolderPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AdvancedJustWareAPI.api.Permissions UploadTempFolderPermissions {
            get {
                return this.UploadTempFolderPermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadTempFolderPermissionsField, value) != true)) {
                    this.UploadTempFolderPermissionsField = value;
                    this.RaisePropertyChanged("UploadTempFolderPermissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UsingDownloadTempFolder {
            get {
                return this.UsingDownloadTempFolderField;
            }
            set {
                if ((this.UsingDownloadTempFolderField.Equals(value) != true)) {
                    this.UsingDownloadTempFolderField = value;
                    this.RaisePropertyChanged("UsingDownloadTempFolder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Permissions", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AdvancedJustWareAPI.api.EntityPermissions))]
    public partial class Permissions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanInsertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanViewField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanDelete {
            get {
                return this.CanDeleteField;
            }
            set {
                if ((this.CanDeleteField.Equals(value) != true)) {
                    this.CanDeleteField = value;
                    this.RaisePropertyChanged("CanDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanInsert {
            get {
                return this.CanInsertField;
            }
            set {
                if ((this.CanInsertField.Equals(value) != true)) {
                    this.CanInsertField = value;
                    this.RaisePropertyChanged("CanInsert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanUpdate {
            get {
                return this.CanUpdateField;
            }
            set {
                if ((this.CanUpdateField.Equals(value) != true)) {
                    this.CanUpdateField = value;
                    this.RaisePropertyChanged("CanUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanView {
            get {
                return this.CanViewField;
            }
            set {
                if ((this.CanViewField.Equals(value) != true)) {
                    this.CanViewField = value;
                    this.RaisePropertyChanged("CanView");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityPermissions", Namespace="http://schemas.datacontract.org/2004/07/Ndt.Api.Entities")]
    [System.SerializableAttribute()]
    public partial class EntityPermissions : AdvancedJustWareAPI.api.Permissions {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="api.IJustWareApi")]
    public interface IJustWareApi {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/RequestFileDownload", ReplyAction="http://tempuri.org/IJustWareApi/RequestFileDownloadResponse")]
        string RequestFileDownload(AdvancedJustWareAPI.api.DataContractBase document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/RequestFileDownload", ReplyAction="http://tempuri.org/IJustWareApi/RequestFileDownloadResponse")]
        System.Threading.Tasks.Task<string> RequestFileDownloadAsync(AdvancedJustWareAPI.api.DataContractBase document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/RequestFileUpload", ReplyAction="http://tempuri.org/IJustWareApi/RequestFileUploadResponse")]
        string RequestFileUpload(AdvancedJustWareAPI.api.DataContractBase document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/RequestFileUpload", ReplyAction="http://tempuri.org/IJustWareApi/RequestFileUploadResponse")]
        System.Threading.Tasks.Task<string> RequestFileUploadAsync(AdvancedJustWareAPI.api.DataContractBase document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FinalizeFileUpload", ReplyAction="http://tempuri.org/IJustWareApi/FinalizeFileUploadResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Key> FinalizeFileUpload(AdvancedJustWareAPI.api.DataContractBase document, string uploadUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FinalizeFileUpload", ReplyAction="http://tempuri.org/IJustWareApi/FinalizeFileUploadResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Key>> FinalizeFileUploadAsync(AdvancedJustWareAPI.api.DataContractBase document, string uploadUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCallerNameID", ReplyAction="http://tempuri.org/IJustWareApi/GetCallerNameIDResponse")]
        int GetCallerNameID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCallerNameID", ReplyAction="http://tempuri.org/IJustWareApi/GetCallerNameIDResponse")]
        System.Threading.Tasks.Task<int> GetCallerNameIDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetRecordCount", ReplyAction="http://tempuri.org/IJustWareApi/GetRecordCountResponse")]
        int GetRecordCount(string entityName, string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetRecordCount", ReplyAction="http://tempuri.org/IJustWareApi/GetRecordCountResponse")]
        System.Threading.Tasks.Task<int> GetRecordCountAsync(string entityName, string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseType> FindCaseTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseType>> FindCaseTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindEventTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindEventTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.EventType> FindEventTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindEventTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindEventTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.EventType>> FindEventTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseStatusTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseStatusTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseStatusType> FindCaseStatusTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseStatusTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseStatusTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseStatusType>> FindCaseStatusTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCorrespondenceTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindCorrespondenceTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CorrespondenceType> FindCorrespondenceTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCorrespondenceTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindCorrespondenceTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CorrespondenceType>> FindCorrespondenceTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindSentenceTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindSentenceTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.SentenceType> FindSentenceTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindSentenceTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindSentenceTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.SentenceType>> FindSentenceTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindConditionTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindConditionTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.ConditionType> FindConditionTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindConditionTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindConditionTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ConditionType>> FindConditionTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindTaskTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindTaskTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.TaskType> FindTaskTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindTaskTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindTaskTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.TaskType>> FindTaskTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNonCollectableFinancialTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindNonCollectableFinancialTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCollectableFinancialType> FindNonCollectableFinancialTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNonCollectableFinancialTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindNonCollectableFinancialTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCollectableFinancialType>> FindNonCollectableFinancialTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindDocumentTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindDocumentTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.DocumentType> FindDocumentTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindDocumentTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindDocumentTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.DocumentType>> FindDocumentTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindEventStatusTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindEventStatusTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.EventStatusType> FindEventStatusTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindEventStatusTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindEventStatusTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.EventStatusType>> FindEventStatusTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindObligationTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindObligationTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.ObligationType> FindObligationTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindObligationTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindObligationTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ObligationType>> FindObligationTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindAddressTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindAddressTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.AddressType> FindAddressTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindAddressTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindAddressTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.AddressType>> FindAddressTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPhoneTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindPhoneTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.PhoneType> FindPhoneTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPhoneTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindPhoneTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.PhoneType>> FindPhoneTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindEmailTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindEmailTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.EmailType> FindEmailTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindEmailTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindEmailTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.EmailType>> FindEmailTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindRelationshipTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindRelationshipTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.RelationshipType> FindRelationshipTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindRelationshipTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindRelationshipTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.RelationshipType>> FindRelationshipTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPleaTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindPleaTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.PleaType> FindPleaTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPleaTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindPleaTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.PleaType>> FindPleaTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindDispositionTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindDispositionTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.DispositionType> FindDispositionTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindDispositionTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindDispositionTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.DispositionType>> FindDispositionTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCountyTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindCountyTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CountyType> FindCountyTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCountyTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindCountyTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CountyType>> FindCountyTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindJurisdictionTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindJurisdictionTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.JurisdictionType> FindJurisdictionTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindJurisdictionTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindJurisdictionTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.JurisdictionType>> FindJurisdictionTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindAgencyTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindAgencyTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.AgencyType> FindAgencyTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindAgencyTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindAgencyTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.AgencyType>> FindAgencyTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCategoryTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindCategoryTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CategoryType> FindCategoryTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCategoryTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindCategoryTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CategoryType>> FindCategoryTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNonCasePaymentItemTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindNonCasePaymentItemTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCasePaymentItemType> FindNonCasePaymentItemTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNonCasePaymentItemTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindNonCasePaymentItemTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCasePaymentItemType>> FindNonCasePaymentItemTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseNoteTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseNoteTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseNoteType> FindCaseNoteTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseNoteTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseNoteTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseNoteType>> FindCaseNoteTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindEventLocationTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindEventLocationTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.EventLocationType> FindEventLocationTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindEventLocationTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindEventLocationTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.EventLocationType>> FindEventLocationTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNumberTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindNumberTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.NumberType> FindNumberTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNumberTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindNumberTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NumberType>> FindNumberTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindInvolveTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindInvolveTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.InvolveType> FindInvolveTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindInvolveTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindInvolveTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.InvolveType>> FindInvolveTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseAttributeTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseAttributeTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseAttributeType> FindCaseAttributeTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseAttributeTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseAttributeTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseAttributeType>> FindCaseAttributeTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseAttributeCodeListTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseAttributeCodeListTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseAttributeCodeListType> FindCaseAttributeCodeListTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseAttributeCodeListTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseAttributeCodeListTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseAttributeCodeListType>> FindCaseAttributeCodeListTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeAttributeTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeAttributeTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAttributeType> FindChargeAttributeTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeAttributeTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeAttributeTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAttributeType>> FindChargeAttributeTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeAttributeCodeListTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeAttributeCodeListTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAttributeCodeListType> FindChargeAttributeCodeListTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeAttributeCodeListTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeAttributeCodeListTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAttributeCodeListType>> FindChargeAttributeCodeListTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeEnhancementTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeEnhancementTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeEnhancementType> FindChargeEnhancementTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeEnhancementTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeEnhancementTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeEnhancementType>> FindChargeEnhancementTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeHistoryTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeHistoryTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeHistoryType> FindChargeHistoryTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeHistoryTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeHistoryTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeHistoryType>> FindChargeHistoryTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeType> FindChargeTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeType>> FindChargeTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindDocketInstanceTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindDocketInstanceTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.DocketInstanceType> FindDocketInstanceTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindDocketInstanceTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindDocketInstanceTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.DocketInstanceType>> FindDocketInstanceTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindExhibitStatusTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindExhibitStatusTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.ExhibitStatusType> FindExhibitStatusTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindExhibitStatusTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindExhibitStatusTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ExhibitStatusType>> FindExhibitStatusTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindExhibitTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindExhibitTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.ExhibitType> FindExhibitTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindExhibitTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindExhibitTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ExhibitType>> FindExhibitTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindIntoxicantTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindIntoxicantTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.IntoxicantType> FindIntoxicantTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindIntoxicantTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindIntoxicantTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.IntoxicantType>> FindIntoxicantTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameAttributeCodeListTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindNameAttributeCodeListTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.NameAttributeCodeListType> FindNameAttributeCodeListTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameAttributeCodeListTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindNameAttributeCodeListTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameAttributeCodeListType>> FindNameAttributeCodeListTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameAttributeTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindNameAttributeTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.NameAttributeType> FindNameAttributeTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameAttributeTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindNameAttributeTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameAttributeType>> FindNameAttributeTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindNameTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.NameType> FindNameTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindNameTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameType>> FindNameTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPaymentStatusTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindPaymentStatusTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.PaymentStatusType> FindPaymentStatusTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPaymentStatusTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindPaymentStatusTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.PaymentStatusType>> FindPaymentStatusTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPaymentTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindPaymentTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.PaymentType> FindPaymentTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPaymentTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindPaymentTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.PaymentType>> FindPaymentTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPhysicalLocationTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindPhysicalLocationTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.PhysicalLocationType> FindPhysicalLocationTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPhysicalLocationTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindPhysicalLocationTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.PhysicalLocationType>> FindPhysicalLocationTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindStatuteAttributeTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindStatuteAttributeTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteAttributeType> FindStatuteAttributeTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindStatuteAttributeTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindStatuteAttributeTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteAttributeType>> FindStatuteAttributeTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindStatuteCategoryTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindStatuteCategoryTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteCategoryType> FindStatuteCategoryTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindStatuteCategoryTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindStatuteCategoryTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteCategoryType>> FindStatuteCategoryTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindStatuteClassTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindStatuteClassTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteClassType> FindStatuteClassTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindStatuteClassTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindStatuteClassTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteClassType>> FindStatuteClassTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindStatuteSeverityTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindStatuteSeverityTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteSeverityType> FindStatuteSeverityTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindStatuteSeverityTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindStatuteSeverityTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteSeverityType>> FindStatuteSeverityTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindStatuteTextTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindStatuteTextTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteTextType> FindStatuteTextTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindStatuteTextTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindStatuteTextTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteTextType>> FindStatuteTextTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindTimeTrackingStatusTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindTimeTrackingStatusTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.TimeTrackingStatusType> FindTimeTrackingStatusTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindTimeTrackingStatusTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindTimeTrackingStatusTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.TimeTrackingStatusType>> FindTimeTrackingStatusTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindTimeTrackingTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindTimeTrackingTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.TimeTrackingType> FindTimeTrackingTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindTimeTrackingTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindTimeTrackingTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.TimeTrackingType>> FindTimeTrackingTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindBondStatusTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindBondStatusTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.BondStatusType> FindBondStatusTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindBondStatusTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindBondStatusTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.BondStatusType>> FindBondStatusTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindBondTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindBondTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.BondType> FindBondTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindBondTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindBondTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.BondType>> FindBondTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindBondConditionTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindBondConditionTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.BondConditionType> FindBondConditionTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindBondConditionTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindBondConditionTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.BondConditionType>> FindBondConditionTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindVoucherTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindVoucherTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.VoucherType> FindVoucherTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindVoucherTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindVoucherTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.VoucherType>> FindVoucherTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindVoucherStatusTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindVoucherStatusTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.VoucherStatusType> FindVoucherStatusTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindVoucherStatusTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindVoucherStatusTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.VoucherStatusType>> FindVoucherStatusTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindRelatedCaseTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindRelatedCaseTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.RelatedCaseType> FindRelatedCaseTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindRelatedCaseTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindRelatedCaseTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.RelatedCaseType>> FindRelatedCaseTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindAccountTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindAccountTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.AccountType> FindAccountTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindAccountTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindAccountTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.AccountType>> FindAccountTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindAccountStatuses", ReplyAction="http://tempuri.org/IJustWareApi/FindAccountStatusesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.AccountStatus> FindAccountStatuses(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindAccountStatuses", ReplyAction="http://tempuri.org/IJustWareApi/FindAccountStatusesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.AccountStatus>> FindAccountStatusesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindAccounts", ReplyAction="http://tempuri.org/IJustWareApi/FindAccountsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Account> FindAccounts(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindAccounts", ReplyAction="http://tempuri.org/IJustWareApi/FindAccountsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Account>> FindAccountsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetAccount", ReplyAction="http://tempuri.org/IJustWareApi/GetAccountResponse")]
        AdvancedJustWareAPI.api.Account GetAccount(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetAccount", ReplyAction="http://tempuri.org/IJustWareApi/GetAccountResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Account> GetAccountAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetJusticeBrokerMessageQueue", ReplyAction="http://tempuri.org/IJustWareApi/GetJusticeBrokerMessageQueueResponse")]
        AdvancedJustWareAPI.api.JusticeBrokerMessageQueue GetJusticeBrokerMessageQueue(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetJusticeBrokerMessageQueue", ReplyAction="http://tempuri.org/IJustWareApi/GetJusticeBrokerMessageQueueResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.JusticeBrokerMessageQueue> GetJusticeBrokerMessageQueueAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindJusticeBrokerMessageQueues", ReplyAction="http://tempuri.org/IJustWareApi/FindJusticeBrokerMessageQueuesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.JusticeBrokerMessageQueue> FindJusticeBrokerMessageQueues(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindJusticeBrokerMessageQueues", ReplyAction="http://tempuri.org/IJustWareApi/FindJusticeBrokerMessageQueuesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.JusticeBrokerMessageQueue>> FindJusticeBrokerMessageQueuesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetVoucher", ReplyAction="http://tempuri.org/IJustWareApi/GetVoucherResponse")]
        AdvancedJustWareAPI.api.Voucher GetVoucher(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetVoucher", ReplyAction="http://tempuri.org/IJustWareApi/GetVoucherResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Voucher> GetVoucherAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindVouchers", ReplyAction="http://tempuri.org/IJustWareApi/FindVouchersResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Voucher> FindVouchers(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindVouchers", ReplyAction="http://tempuri.org/IJustWareApi/FindVouchersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Voucher>> FindVouchersAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindVoucherableAmounts", ReplyAction="http://tempuri.org/IJustWareApi/FindVoucherableAmountsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.VoucherableAmount> FindVoucherableAmounts(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindVoucherableAmounts", ReplyAction="http://tempuri.org/IJustWareApi/FindVoucherableAmountsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.VoucherableAmount>> FindVoucherableAmountsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/CopyCase", ReplyAction="http://tempuri.org/IJustWareApi/CopyCaseResponse")]
        string CopyCase(AdvancedJustWareAPI.api.CopyCaseParameters copyCaseParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/CopyCase", ReplyAction="http://tempuri.org/IJustWareApi/CopyCaseResponse")]
        System.Threading.Tasks.Task<string> CopyCaseAsync(AdvancedJustWareAPI.api.CopyCaseParameters copyCaseParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCreditSuspendType", ReplyAction="http://tempuri.org/IJustWareApi/GetCreditSuspendTypeResponse")]
        AdvancedJustWareAPI.api.CreditSuspendType GetCreditSuspendType(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCreditSuspendType", ReplyAction="http://tempuri.org/IJustWareApi/GetCreditSuspendTypeResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CreditSuspendType> GetCreditSuspendTypeAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCreditSuspendTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindCreditSuspendTypesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CreditSuspendType> FindCreditSuspendTypes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCreditSuspendTypes", ReplyAction="http://tempuri.org/IJustWareApi/FindCreditSuspendTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CreditSuspendType>> FindCreditSuspendTypesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCreditSuspend", ReplyAction="http://tempuri.org/IJustWareApi/GetCreditSuspendResponse")]
        AdvancedJustWareAPI.api.CreditSuspend GetCreditSuspend(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCreditSuspend", ReplyAction="http://tempuri.org/IJustWareApi/GetCreditSuspendResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CreditSuspend> GetCreditSuspendAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCreditSuspends", ReplyAction="http://tempuri.org/IJustWareApi/FindCreditSuspendsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CreditSuspend> FindCreditSuspends(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCreditSuspends", ReplyAction="http://tempuri.org/IJustWareApi/FindCreditSuspendsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CreditSuspend>> FindCreditSuspendsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/VerifyInstall", ReplyAction="http://tempuri.org/IJustWareApi/VerifyInstallResponse")]
        AdvancedJustWareAPI.api.VerifyInstallResult VerifyInstall();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/VerifyInstall", ReplyAction="http://tempuri.org/IJustWareApi/VerifyInstallResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.VerifyInstallResult> VerifyInstallAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/SetFileAccessCredentialsForFileUpload", ReplyAction="http://tempuri.org/IJustWareApi/SetFileAccessCredentialsForFileUploadResponse")]
        void SetFileAccessCredentialsForFileUpload(string domain, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/SetFileAccessCredentialsForFileUpload", ReplyAction="http://tempuri.org/IJustWareApi/SetFileAccessCredentialsForFileUploadResponse")]
        System.Threading.Tasks.Task SetFileAccessCredentialsForFileUploadAsync(string domain, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetName", ReplyAction="http://tempuri.org/IJustWareApi/GetNameResponse")]
        AdvancedJustWareAPI.api.Name GetName(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetName", ReplyAction="http://tempuri.org/IJustWareApi/GetNameResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Name> GetNameAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNames", ReplyAction="http://tempuri.org/IJustWareApi/FindNamesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Name> FindNames(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNames", ReplyAction="http://tempuri.org/IJustWareApi/FindNamesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Name>> FindNamesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetAddress", ReplyAction="http://tempuri.org/IJustWareApi/GetAddressResponse")]
        AdvancedJustWareAPI.api.Address GetAddress(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetAddress", ReplyAction="http://tempuri.org/IJustWareApi/GetAddressResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Address> GetAddressAsync(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindAddresses", ReplyAction="http://tempuri.org/IJustWareApi/FindAddressesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Address> FindAddresses(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindAddresses", ReplyAction="http://tempuri.org/IJustWareApi/FindAddressesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Address>> FindAddressesAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCase", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseResponse")]
        AdvancedJustWareAPI.api.Case GetCase(string justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCase", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Case> GetCaseAsync(string justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCases", ReplyAction="http://tempuri.org/IJustWareApi/FindCasesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Case> FindCases(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCases", ReplyAction="http://tempuri.org/IJustWareApi/FindCasesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Case>> FindCasesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetInvolvedName", ReplyAction="http://tempuri.org/IJustWareApi/GetInvolvedNameResponse")]
        AdvancedJustWareAPI.api.CaseInvolvedName GetInvolvedName(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetInvolvedName", ReplyAction="http://tempuri.org/IJustWareApi/GetInvolvedNameResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseInvolvedName> GetInvolvedNameAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindInvolvedNames", ReplyAction="http://tempuri.org/IJustWareApi/FindInvolvedNamesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseInvolvedName> FindInvolvedNames(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindInvolvedNames", ReplyAction="http://tempuri.org/IJustWareApi/FindInvolvedNamesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseInvolvedName>> FindInvolvedNamesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetPhone", ReplyAction="http://tempuri.org/IJustWareApi/GetPhoneResponse")]
        AdvancedJustWareAPI.api.Phone GetPhone(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetPhone", ReplyAction="http://tempuri.org/IJustWareApi/GetPhoneResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Phone> GetPhoneAsync(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPhones", ReplyAction="http://tempuri.org/IJustWareApi/FindPhonesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Phone> FindPhones(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPhones", ReplyAction="http://tempuri.org/IJustWareApi/FindPhonesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Phone>> FindPhonesAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetEmail", ReplyAction="http://tempuri.org/IJustWareApi/GetEmailResponse")]
        AdvancedJustWareAPI.api.Email GetEmail(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetEmail", ReplyAction="http://tempuri.org/IJustWareApi/GetEmailResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Email> GetEmailAsync(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindEmails", ReplyAction="http://tempuri.org/IJustWareApi/FindEmailsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Email> FindEmails(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindEmails", ReplyAction="http://tempuri.org/IJustWareApi/FindEmailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Email>> FindEmailsAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameNumber", ReplyAction="http://tempuri.org/IJustWareApi/GetNameNumberResponse")]
        AdvancedJustWareAPI.api.NameNumber GetNameNumber(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameNumber", ReplyAction="http://tempuri.org/IJustWareApi/GetNameNumberResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameNumber> GetNameNumberAsync(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameNumbers", ReplyAction="http://tempuri.org/IJustWareApi/FindNameNumbersResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.NameNumber> FindNameNumbers(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameNumbers", ReplyAction="http://tempuri.org/IJustWareApi/FindNameNumbersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameNumber>> FindNameNumbersAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameAttribute", ReplyAction="http://tempuri.org/IJustWareApi/GetNameAttributeResponse")]
        AdvancedJustWareAPI.api.NameAttribute GetNameAttribute(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameAttribute", ReplyAction="http://tempuri.org/IJustWareApi/GetNameAttributeResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameAttribute> GetNameAttributeAsync(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameAttributes", ReplyAction="http://tempuri.org/IJustWareApi/FindNameAttributesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.NameAttribute> FindNameAttributes(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameAttributes", ReplyAction="http://tempuri.org/IJustWareApi/FindNameAttributesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameAttribute>> FindNameAttributesAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameNote", ReplyAction="http://tempuri.org/IJustWareApi/GetNameNoteResponse")]
        AdvancedJustWareAPI.api.NameNote GetNameNote(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameNote", ReplyAction="http://tempuri.org/IJustWareApi/GetNameNoteResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameNote> GetNameNoteAsync(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameNotes", ReplyAction="http://tempuri.org/IJustWareApi/FindNameNotesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.NameNote> FindNameNotes(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameNotes", ReplyAction="http://tempuri.org/IJustWareApi/FindNameNotesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameNote>> FindNameNotesAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameEvent", ReplyAction="http://tempuri.org/IJustWareApi/GetNameEventResponse")]
        AdvancedJustWareAPI.api.NameEvent GetNameEvent(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameEvent", ReplyAction="http://tempuri.org/IJustWareApi/GetNameEventResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameEvent> GetNameEventAsync(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameEventWithNameID", ReplyAction="http://tempuri.org/IJustWareApi/GetNameEventWithNameIDResponse")]
        AdvancedJustWareAPI.api.NameEvent GetNameEventWithNameID(int justWareID, int nameID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameEventWithNameID", ReplyAction="http://tempuri.org/IJustWareApi/GetNameEventWithNameIDResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameEvent> GetNameEventWithNameIDAsync(int justWareID, int nameID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameEvents", ReplyAction="http://tempuri.org/IJustWareApi/FindNameEventsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.NameEvent> FindNameEvents(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameEvents", ReplyAction="http://tempuri.org/IJustWareApi/FindNameEventsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameEvent>> FindNameEventsAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetEventInvolvedName", ReplyAction="http://tempuri.org/IJustWareApi/GetEventInvolvedNameResponse")]
        AdvancedJustWareAPI.api.EventInvolvedName GetEventInvolvedName(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetEventInvolvedName", ReplyAction="http://tempuri.org/IJustWareApi/GetEventInvolvedNameResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.EventInvolvedName> GetEventInvolvedNameAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindEventInvolvedNames", ReplyAction="http://tempuri.org/IJustWareApi/FindEventInvolvedNamesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.EventInvolvedName> FindEventInvolvedNames(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindEventInvolvedNames", ReplyAction="http://tempuri.org/IJustWareApi/FindEventInvolvedNamesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.EventInvolvedName>> FindEventInvolvedNamesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCaseAttribute", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseAttributeResponse")]
        AdvancedJustWareAPI.api.CaseAttribute GetCaseAttribute(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCaseAttribute", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseAttributeResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseAttribute> GetCaseAttributeAsync(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseAttributes", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseAttributesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseAttribute> FindCaseAttributes(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseAttributes", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseAttributesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseAttribute>> FindCaseAttributesAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCaseNote", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseNoteResponse")]
        AdvancedJustWareAPI.api.CaseNote GetCaseNote(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCaseNote", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseNoteResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseNote> GetCaseNoteAsync(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseNotes", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseNotesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseNote> FindCaseNotes(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseNotes", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseNotesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseNote>> FindCaseNotesAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCaseEvent", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseEventResponse")]
        AdvancedJustWareAPI.api.CaseEvent GetCaseEvent(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCaseEvent", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseEventResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseEvent> GetCaseEventAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseEvents", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseEventsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseEvent> FindCaseEvents(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseEvents", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseEventsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseEvent>> FindCaseEventsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetAgency", ReplyAction="http://tempuri.org/IJustWareApi/GetAgencyResponse")]
        AdvancedJustWareAPI.api.Agency GetAgency(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetAgency", ReplyAction="http://tempuri.org/IJustWareApi/GetAgencyResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Agency> GetAgencyAsync(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindAgencies", ReplyAction="http://tempuri.org/IJustWareApi/FindAgenciesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Agency> FindAgencies(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindAgencies", ReplyAction="http://tempuri.org/IJustWareApi/FindAgenciesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Agency>> FindAgenciesAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetLocation", ReplyAction="http://tempuri.org/IJustWareApi/GetLocationResponse")]
        AdvancedJustWareAPI.api.Location GetLocation(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetLocation", ReplyAction="http://tempuri.org/IJustWareApi/GetLocationResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Location> GetLocationAsync(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindLocations", ReplyAction="http://tempuri.org/IJustWareApi/FindLocationsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Location> FindLocations(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindLocations", ReplyAction="http://tempuri.org/IJustWareApi/FindLocationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Location>> FindLocationsAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCharge", ReplyAction="http://tempuri.org/IJustWareApi/GetChargeResponse")]
        AdvancedJustWareAPI.api.Charge GetCharge(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCharge", ReplyAction="http://tempuri.org/IJustWareApi/GetChargeResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Charge> GetChargeAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCharges", ReplyAction="http://tempuri.org/IJustWareApi/FindChargesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Charge> FindCharges(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCharges", ReplyAction="http://tempuri.org/IJustWareApi/FindChargesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Charge>> FindChargesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetChargeInvolvedName", ReplyAction="http://tempuri.org/IJustWareApi/GetChargeInvolvedNameResponse")]
        AdvancedJustWareAPI.api.ChargeInvolvedName GetChargeInvolvedName(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetChargeInvolvedName", ReplyAction="http://tempuri.org/IJustWareApi/GetChargeInvolvedNameResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.ChargeInvolvedName> GetChargeInvolvedNameAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeInvolvedNames", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeInvolvedNamesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeInvolvedName> FindChargeInvolvedNames(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeInvolvedNames", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeInvolvedNamesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeInvolvedName>> FindChargeInvolvedNamesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetChargeAttribute", ReplyAction="http://tempuri.org/IJustWareApi/GetChargeAttributeResponse")]
        AdvancedJustWareAPI.api.ChargeAttribute GetChargeAttribute(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetChargeAttribute", ReplyAction="http://tempuri.org/IJustWareApi/GetChargeAttributeResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.ChargeAttribute> GetChargeAttributeAsync(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeAttributes", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeAttributesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAttribute> FindChargeAttributes(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeAttributes", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeAttributesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAttribute>> FindChargeAttributesAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetJudgment", ReplyAction="http://tempuri.org/IJustWareApi/GetJudgmentResponse")]
        AdvancedJustWareAPI.api.Judgment GetJudgment(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetJudgment", ReplyAction="http://tempuri.org/IJustWareApi/GetJudgmentResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Judgment> GetJudgmentAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindJudgments", ReplyAction="http://tempuri.org/IJustWareApi/FindJudgmentsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Judgment> FindJudgments(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindJudgments", ReplyAction="http://tempuri.org/IJustWareApi/FindJudgmentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Judgment>> FindJudgmentsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetSentence", ReplyAction="http://tempuri.org/IJustWareApi/GetSentenceResponse")]
        AdvancedJustWareAPI.api.Sentence GetSentence(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetSentence", ReplyAction="http://tempuri.org/IJustWareApi/GetSentenceResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Sentence> GetSentenceAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindSentences", ReplyAction="http://tempuri.org/IJustWareApi/FindSentencesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Sentence> FindSentences(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindSentences", ReplyAction="http://tempuri.org/IJustWareApi/FindSentencesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Sentence>> FindSentencesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCaseTask", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseTaskResponse")]
        AdvancedJustWareAPI.api.CaseTask GetCaseTask(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCaseTask", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseTaskResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseTask> GetCaseTaskAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseTasks", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseTasksResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseTask> FindCaseTasks(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseTasks", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseTasksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseTask>> FindCaseTasksAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameTask", ReplyAction="http://tempuri.org/IJustWareApi/GetNameTaskResponse")]
        AdvancedJustWareAPI.api.NameTask GetNameTask(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameTask", ReplyAction="http://tempuri.org/IJustWareApi/GetNameTaskResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameTask> GetNameTaskAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameTaskWithNameID", ReplyAction="http://tempuri.org/IJustWareApi/GetNameTaskWithNameIDResponse")]
        AdvancedJustWareAPI.api.NameTask GetNameTaskWithNameID(int justWareID, int nameID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameTaskWithNameID", ReplyAction="http://tempuri.org/IJustWareApi/GetNameTaskWithNameIDResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameTask> GetNameTaskWithNameIDAsync(int justWareID, int nameID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameTasks", ReplyAction="http://tempuri.org/IJustWareApi/FindNameTasksResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.NameTask> FindNameTasks(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameTasks", ReplyAction="http://tempuri.org/IJustWareApi/FindNameTasksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameTask>> FindNameTasksAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetTaskInvolvedName", ReplyAction="http://tempuri.org/IJustWareApi/GetTaskInvolvedNameResponse")]
        AdvancedJustWareAPI.api.TaskInvolvedName GetTaskInvolvedName(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetTaskInvolvedName", ReplyAction="http://tempuri.org/IJustWareApi/GetTaskInvolvedNameResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.TaskInvolvedName> GetTaskInvolvedNameAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindTaskInvolvedNames", ReplyAction="http://tempuri.org/IJustWareApi/FindTaskInvolvedNamesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.TaskInvolvedName> FindTaskInvolvedNames(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindTaskInvolvedNames", ReplyAction="http://tempuri.org/IJustWareApi/FindTaskInvolvedNamesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.TaskInvolvedName>> FindTaskInvolvedNamesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCorrespondenceInvolvedName", ReplyAction="http://tempuri.org/IJustWareApi/GetCorrespondenceInvolvedNameResponse")]
        AdvancedJustWareAPI.api.CorrespondenceInvolvedName GetCorrespondenceInvolvedName(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCorrespondenceInvolvedName", ReplyAction="http://tempuri.org/IJustWareApi/GetCorrespondenceInvolvedNameResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CorrespondenceInvolvedName> GetCorrespondenceInvolvedNameAsync(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCorrespondenceInvolvedNames", ReplyAction="http://tempuri.org/IJustWareApi/FindCorrespondenceInvolvedNamesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CorrespondenceInvolvedName> FindCorrespondenceInvolvedNames(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCorrespondenceInvolvedNames", ReplyAction="http://tempuri.org/IJustWareApi/FindCorrespondenceInvolvedNamesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CorrespondenceInvolvedName>> FindCorrespondenceInvolvedNamesAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameCorrespondence", ReplyAction="http://tempuri.org/IJustWareApi/GetNameCorrespondenceResponse")]
        AdvancedJustWareAPI.api.NameCorrespondence GetNameCorrespondence(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameCorrespondence", ReplyAction="http://tempuri.org/IJustWareApi/GetNameCorrespondenceResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameCorrespondence> GetNameCorrespondenceAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameCorrespondenceWithNameID", ReplyAction="http://tempuri.org/IJustWareApi/GetNameCorrespondenceWithNameIDResponse")]
        AdvancedJustWareAPI.api.NameCorrespondence GetNameCorrespondenceWithNameID(int justWareID, int nameID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameCorrespondenceWithNameID", ReplyAction="http://tempuri.org/IJustWareApi/GetNameCorrespondenceWithNameIDResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameCorrespondence> GetNameCorrespondenceWithNameIDAsync(int justWareID, int nameID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameCorrespondences", ReplyAction="http://tempuri.org/IJustWareApi/FindNameCorrespondencesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.NameCorrespondence> FindNameCorrespondences(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameCorrespondences", ReplyAction="http://tempuri.org/IJustWareApi/FindNameCorrespondencesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameCorrespondence>> FindNameCorrespondencesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCaseCorrespondence", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseCorrespondenceResponse")]
        AdvancedJustWareAPI.api.CaseCorrespondence GetCaseCorrespondence(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCaseCorrespondence", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseCorrespondenceResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseCorrespondence> GetCaseCorrespondenceAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseCorrespondences", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseCorrespondencesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseCorrespondence> FindCaseCorrespondences(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseCorrespondences", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseCorrespondencesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseCorrespondence>> FindCaseCorrespondencesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCondition", ReplyAction="http://tempuri.org/IJustWareApi/GetConditionResponse")]
        AdvancedJustWareAPI.api.Condition GetCondition(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCondition", ReplyAction="http://tempuri.org/IJustWareApi/GetConditionResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Condition> GetConditionAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindConditions", ReplyAction="http://tempuri.org/IJustWareApi/FindConditionsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Condition> FindConditions(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindConditions", ReplyAction="http://tempuri.org/IJustWareApi/FindConditionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Condition>> FindConditionsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetChargeAgency", ReplyAction="http://tempuri.org/IJustWareApi/GetChargeAgencyResponse")]
        AdvancedJustWareAPI.api.ChargeAgency GetChargeAgency(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetChargeAgency", ReplyAction="http://tempuri.org/IJustWareApi/GetChargeAgencyResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.ChargeAgency> GetChargeAgencyAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeAgencies", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeAgenciesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAgency> FindChargeAgencies(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeAgencies", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeAgenciesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAgency>> FindChargeAgenciesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetChargeEnhancement", ReplyAction="http://tempuri.org/IJustWareApi/GetChargeEnhancementResponse")]
        AdvancedJustWareAPI.api.ChargeEnhancement GetChargeEnhancement(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetChargeEnhancement", ReplyAction="http://tempuri.org/IJustWareApi/GetChargeEnhancementResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.ChargeEnhancement> GetChargeEnhancementAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeEnhancements", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeEnhancementsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeEnhancement> FindChargeEnhancements(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeEnhancements", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeEnhancementsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeEnhancement>> FindChargeEnhancementsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetPendingTimeTrackingEntry", ReplyAction="http://tempuri.org/IJustWareApi/GetPendingTimeTrackingEntryResponse")]
        AdvancedJustWareAPI.api.PendingTimeTrackingEntry GetPendingTimeTrackingEntry(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetPendingTimeTrackingEntry", ReplyAction="http://tempuri.org/IJustWareApi/GetPendingTimeTrackingEntryResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.PendingTimeTrackingEntry> GetPendingTimeTrackingEntryAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPendingTimeTrackingEntries", ReplyAction="http://tempuri.org/IJustWareApi/FindPendingTimeTrackingEntriesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.PendingTimeTrackingEntry> FindPendingTimeTrackingEntries(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPendingTimeTrackingEntries", ReplyAction="http://tempuri.org/IJustWareApi/FindPendingTimeTrackingEntriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.PendingTimeTrackingEntry>> FindPendingTimeTrackingEntriesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetIntoxicant", ReplyAction="http://tempuri.org/IJustWareApi/GetIntoxicantResponse")]
        AdvancedJustWareAPI.api.Intoxicant GetIntoxicant(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetIntoxicant", ReplyAction="http://tempuri.org/IJustWareApi/GetIntoxicantResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Intoxicant> GetIntoxicantAsync(int justWareID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindIntoxicants", ReplyAction="http://tempuri.org/IJustWareApi/FindIntoxicantsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Intoxicant> FindIntoxicants(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindIntoxicants", ReplyAction="http://tempuri.org/IJustWareApi/FindIntoxicantsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Intoxicant>> FindIntoxicantsAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetExhibit", ReplyAction="http://tempuri.org/IJustWareApi/GetExhibitResponse")]
        AdvancedJustWareAPI.api.Exhibit GetExhibit(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetExhibit", ReplyAction="http://tempuri.org/IJustWareApi/GetExhibitResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Exhibit> GetExhibitAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindExhibits", ReplyAction="http://tempuri.org/IJustWareApi/FindExhibitsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Exhibit> FindExhibits(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindExhibits", ReplyAction="http://tempuri.org/IJustWareApi/FindExhibitsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Exhibit>> FindExhibitsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameNonCollectableFinancial", ReplyAction="http://tempuri.org/IJustWareApi/GetNameNonCollectableFinancialResponse")]
        AdvancedJustWareAPI.api.NameNonCollectableFinancial GetNameNonCollectableFinancial(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameNonCollectableFinancial", ReplyAction="http://tempuri.org/IJustWareApi/GetNameNonCollectableFinancialResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameNonCollectableFinancial> GetNameNonCollectableFinancialAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameNonCollectableFinancials", ReplyAction="http://tempuri.org/IJustWareApi/FindNameNonCollectableFinancialsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.NameNonCollectableFinancial> FindNameNonCollectableFinancials(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameNonCollectableFinancials", ReplyAction="http://tempuri.org/IJustWareApi/FindNameNonCollectableFinancialsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameNonCollectableFinancial>> FindNameNonCollectableFinancialsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetPhysicalLocation", ReplyAction="http://tempuri.org/IJustWareApi/GetPhysicalLocationResponse")]
        AdvancedJustWareAPI.api.PhysicalLocation GetPhysicalLocation(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetPhysicalLocation", ReplyAction="http://tempuri.org/IJustWareApi/GetPhysicalLocationResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.PhysicalLocation> GetPhysicalLocationAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPhysicalLocations", ReplyAction="http://tempuri.org/IJustWareApi/FindPhysicalLocationsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.PhysicalLocation> FindPhysicalLocations(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPhysicalLocations", ReplyAction="http://tempuri.org/IJustWareApi/FindPhysicalLocationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.PhysicalLocation>> FindPhysicalLocationsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCaseNonCollectableFinancial", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseNonCollectableFinancialResponse")]
        AdvancedJustWareAPI.api.CaseNonCollectableFinancial GetCaseNonCollectableFinancial(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCaseNonCollectableFinancial", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseNonCollectableFinancialResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseNonCollectableFinancial> GetCaseNonCollectableFinancialAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseNonCollectableFinancials", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseNonCollectableFinancialsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseNonCollectableFinancial> FindCaseNonCollectableFinancials(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseNonCollectableFinancials", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseNonCollectableFinancialsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseNonCollectableFinancial>> FindCaseNonCollectableFinancialsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNonCollectableFinancialInvolvedName", ReplyAction="http://tempuri.org/IJustWareApi/GetNonCollectableFinancialInvolvedNameResponse")]
        AdvancedJustWareAPI.api.NonCollectableFinancialInvolvedName GetNonCollectableFinancialInvolvedName(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNonCollectableFinancialInvolvedName", ReplyAction="http://tempuri.org/IJustWareApi/GetNonCollectableFinancialInvolvedNameResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NonCollectableFinancialInvolvedName> GetNonCollectableFinancialInvolvedNameAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNonCollectableFinancialInvolvedNames", ReplyAction="http://tempuri.org/IJustWareApi/FindNonCollectableFinancialInvolvedNamesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCollectableFinancialInvolvedName> FindNonCollectableFinancialInvolvedNames(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNonCollectableFinancialInvolvedNames", ReplyAction="http://tempuri.org/IJustWareApi/FindNonCollectableFinancialInvolvedNamesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCollectableFinancialInvolvedName>> FindNonCollectableFinancialInvolvedNamesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameDocument", ReplyAction="http://tempuri.org/IJustWareApi/GetNameDocumentResponse")]
        AdvancedJustWareAPI.api.NameDocument GetNameDocument(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNameDocument", ReplyAction="http://tempuri.org/IJustWareApi/GetNameDocumentResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameDocument> GetNameDocumentAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameDocuments", ReplyAction="http://tempuri.org/IJustWareApi/FindNameDocumentsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.NameDocument> FindNameDocuments(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNameDocuments", ReplyAction="http://tempuri.org/IJustWareApi/FindNameDocumentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameDocument>> FindNameDocumentsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCaseDocument", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseDocumentResponse")]
        AdvancedJustWareAPI.api.CaseDocument GetCaseDocument(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCaseDocument", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseDocumentResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseDocument> GetCaseDocumentAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseDocuments", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseDocumentsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseDocument> FindCaseDocuments(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseDocuments", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseDocumentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseDocument>> FindCaseDocumentsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetDocumentInvolvedName", ReplyAction="http://tempuri.org/IJustWareApi/GetDocumentInvolvedNameResponse")]
        AdvancedJustWareAPI.api.DocumentInvolvedName GetDocumentInvolvedName(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetDocumentInvolvedName", ReplyAction="http://tempuri.org/IJustWareApi/GetDocumentInvolvedNameResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.DocumentInvolvedName> GetDocumentInvolvedNameAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindDocumentInvolvedNames", ReplyAction="http://tempuri.org/IJustWareApi/FindDocumentInvolvedNamesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.DocumentInvolvedName> FindDocumentInvolvedNames(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindDocumentInvolvedNames", ReplyAction="http://tempuri.org/IJustWareApi/FindDocumentInvolvedNamesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.DocumentInvolvedName>> FindDocumentInvolvedNamesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetApplicationPerson", ReplyAction="http://tempuri.org/IJustWareApi/GetApplicationPersonResponse")]
        AdvancedJustWareAPI.api.ApplicationPerson GetApplicationPerson(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetApplicationPerson", ReplyAction="http://tempuri.org/IJustWareApi/GetApplicationPersonResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.ApplicationPerson> GetApplicationPersonAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindApplicationPersons", ReplyAction="http://tempuri.org/IJustWareApi/FindApplicationPersonsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.ApplicationPerson> FindApplicationPersons(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindApplicationPersons", ReplyAction="http://tempuri.org/IJustWareApi/FindApplicationPersonsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ApplicationPerson>> FindApplicationPersonsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetChargeHistory", ReplyAction="http://tempuri.org/IJustWareApi/GetChargeHistoryResponse")]
        AdvancedJustWareAPI.api.ChargeHistory GetChargeHistory(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetChargeHistory", ReplyAction="http://tempuri.org/IJustWareApi/GetChargeHistoryResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.ChargeHistory> GetChargeHistoryAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeHistories", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeHistoriesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeHistory> FindChargeHistories(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindChargeHistories", ReplyAction="http://tempuri.org/IJustWareApi/FindChargeHistoriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeHistory>> FindChargeHistoriesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetStatute", ReplyAction="http://tempuri.org/IJustWareApi/GetStatuteResponse")]
        AdvancedJustWareAPI.api.Statute GetStatute(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetStatute", ReplyAction="http://tempuri.org/IJustWareApi/GetStatuteResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Statute> GetStatuteAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindStatutes", ReplyAction="http://tempuri.org/IJustWareApi/FindStatutesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Statute> FindStatutes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindStatutes", ReplyAction="http://tempuri.org/IJustWareApi/FindStatutesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Statute>> FindStatutesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetStatuteAttribute", ReplyAction="http://tempuri.org/IJustWareApi/GetStatuteAttributeResponse")]
        AdvancedJustWareAPI.api.StatuteAttribute GetStatuteAttribute(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetStatuteAttribute", ReplyAction="http://tempuri.org/IJustWareApi/GetStatuteAttributeResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.StatuteAttribute> GetStatuteAttributeAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindStatuteAttributes", ReplyAction="http://tempuri.org/IJustWareApi/FindStatuteAttributesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteAttribute> FindStatuteAttributes(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindStatuteAttributes", ReplyAction="http://tempuri.org/IJustWareApi/FindStatuteAttributesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteAttribute>> FindStatuteAttributesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetStatuteText", ReplyAction="http://tempuri.org/IJustWareApi/GetStatuteTextResponse")]
        AdvancedJustWareAPI.api.StatuteText GetStatuteText(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetStatuteText", ReplyAction="http://tempuri.org/IJustWareApi/GetStatuteTextResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.StatuteText> GetStatuteTextAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindStatuteTexts", ReplyAction="http://tempuri.org/IJustWareApi/FindStatuteTextsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteText> FindStatuteTexts(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindStatuteTexts", ReplyAction="http://tempuri.org/IJustWareApi/FindStatuteTextsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteText>> FindStatuteTextsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetObligation", ReplyAction="http://tempuri.org/IJustWareApi/GetObligationResponse")]
        AdvancedJustWareAPI.api.Obligation GetObligation(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetObligation", ReplyAction="http://tempuri.org/IJustWareApi/GetObligationResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Obligation> GetObligationAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindObligations", ReplyAction="http://tempuri.org/IJustWareApi/FindObligationsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Obligation> FindObligations(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindObligations", ReplyAction="http://tempuri.org/IJustWareApi/FindObligationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Obligation>> FindObligationsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetPayment", ReplyAction="http://tempuri.org/IJustWareApi/GetPaymentResponse")]
        AdvancedJustWareAPI.api.Payment GetPayment(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetPayment", ReplyAction="http://tempuri.org/IJustWareApi/GetPaymentResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Payment> GetPaymentAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPayments", ReplyAction="http://tempuri.org/IJustWareApi/FindPaymentsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Payment> FindPayments(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPayments", ReplyAction="http://tempuri.org/IJustWareApi/FindPaymentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Payment>> FindPaymentsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetTransfer", ReplyAction="http://tempuri.org/IJustWareApi/GetTransferResponse")]
        AdvancedJustWareAPI.api.Transfer GetTransfer(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetTransfer", ReplyAction="http://tempuri.org/IJustWareApi/GetTransferResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Transfer> GetTransferAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindTransfers", ReplyAction="http://tempuri.org/IJustWareApi/FindTransfersResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Transfer> FindTransfers(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindTransfers", ReplyAction="http://tempuri.org/IJustWareApi/FindTransfersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Transfer>> FindTransfersAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetPrimaryNameRelationship", ReplyAction="http://tempuri.org/IJustWareApi/GetPrimaryNameRelationshipResponse")]
        AdvancedJustWareAPI.api.PrimaryNameRelationship GetPrimaryNameRelationship(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetPrimaryNameRelationship", ReplyAction="http://tempuri.org/IJustWareApi/GetPrimaryNameRelationshipResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.PrimaryNameRelationship> GetPrimaryNameRelationshipAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPrimaryNameRelationships", ReplyAction="http://tempuri.org/IJustWareApi/FindPrimaryNameRelationshipsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.PrimaryNameRelationship> FindPrimaryNameRelationships(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindPrimaryNameRelationships", ReplyAction="http://tempuri.org/IJustWareApi/FindPrimaryNameRelationshipsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.PrimaryNameRelationship>> FindPrimaryNameRelationshipsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetSecondaryNameRelationship", ReplyAction="http://tempuri.org/IJustWareApi/GetSecondaryNameRelationshipResponse")]
        AdvancedJustWareAPI.api.SecondaryNameRelationship GetSecondaryNameRelationship(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetSecondaryNameRelationship", ReplyAction="http://tempuri.org/IJustWareApi/GetSecondaryNameRelationshipResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.SecondaryNameRelationship> GetSecondaryNameRelationshipAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindSecondaryNameRelationships", ReplyAction="http://tempuri.org/IJustWareApi/FindSecondaryNameRelationshipsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.SecondaryNameRelationship> FindSecondaryNameRelationships(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindSecondaryNameRelationships", ReplyAction="http://tempuri.org/IJustWareApi/FindSecondaryNameRelationshipsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.SecondaryNameRelationship>> FindSecondaryNameRelationshipsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCaseRelationship", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseRelationshipResponse")]
        AdvancedJustWareAPI.api.CaseRelationship GetCaseRelationship(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCaseRelationship", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseRelationshipResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseRelationship> GetCaseRelationshipAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseRelationships", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseRelationshipsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseRelationship> FindCaseRelationships(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseRelationships", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseRelationshipsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseRelationship>> FindCaseRelationshipsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNonCasePayment", ReplyAction="http://tempuri.org/IJustWareApi/GetNonCasePaymentResponse")]
        AdvancedJustWareAPI.api.NonCasePayment GetNonCasePayment(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNonCasePayment", ReplyAction="http://tempuri.org/IJustWareApi/GetNonCasePaymentResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NonCasePayment> GetNonCasePaymentAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNonCasePayments", ReplyAction="http://tempuri.org/IJustWareApi/FindNonCasePaymentsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCasePayment> FindNonCasePayments(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNonCasePayments", ReplyAction="http://tempuri.org/IJustWareApi/FindNonCasePaymentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCasePayment>> FindNonCasePaymentsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNonCasePaymentItem", ReplyAction="http://tempuri.org/IJustWareApi/GetNonCasePaymentItemResponse")]
        AdvancedJustWareAPI.api.NonCasePaymentItem GetNonCasePaymentItem(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetNonCasePaymentItem", ReplyAction="http://tempuri.org/IJustWareApi/GetNonCasePaymentItemResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NonCasePaymentItem> GetNonCasePaymentItemAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNonCasePaymentItems", ReplyAction="http://tempuri.org/IJustWareApi/FindNonCasePaymentItemsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCasePaymentItem> FindNonCasePaymentItems(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindNonCasePaymentItems", ReplyAction="http://tempuri.org/IJustWareApi/FindNonCasePaymentItemsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCasePaymentItem>> FindNonCasePaymentItemsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCalendarDocket", ReplyAction="http://tempuri.org/IJustWareApi/GetCalendarDocketResponse")]
        AdvancedJustWareAPI.api.CalendarDocket GetCalendarDocket(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCalendarDocket", ReplyAction="http://tempuri.org/IJustWareApi/GetCalendarDocketResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CalendarDocket> GetCalendarDocketAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCalendarDockets", ReplyAction="http://tempuri.org/IJustWareApi/FindCalendarDocketsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CalendarDocket> FindCalendarDockets(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCalendarDockets", ReplyAction="http://tempuri.org/IJustWareApi/FindCalendarDocketsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CalendarDocket>> FindCalendarDocketsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetDocketInstance", ReplyAction="http://tempuri.org/IJustWareApi/GetDocketInstanceResponse")]
        AdvancedJustWareAPI.api.DocketInstance GetDocketInstance(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetDocketInstance", ReplyAction="http://tempuri.org/IJustWareApi/GetDocketInstanceResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.DocketInstance> GetDocketInstanceAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindDocketInstances", ReplyAction="http://tempuri.org/IJustWareApi/FindDocketInstancesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.DocketInstance> FindDocketInstances(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindDocketInstances", ReplyAction="http://tempuri.org/IJustWareApi/FindDocketInstancesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.DocketInstance>> FindDocketInstancesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetBond", ReplyAction="http://tempuri.org/IJustWareApi/GetBondResponse")]
        AdvancedJustWareAPI.api.Bond GetBond(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetBond", ReplyAction="http://tempuri.org/IJustWareApi/GetBondResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Bond> GetBondAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindBonds", ReplyAction="http://tempuri.org/IJustWareApi/FindBondsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Bond> FindBonds(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindBonds", ReplyAction="http://tempuri.org/IJustWareApi/FindBondsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Bond>> FindBondsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetBondCondition", ReplyAction="http://tempuri.org/IJustWareApi/GetBondConditionResponse")]
        AdvancedJustWareAPI.api.BondCondition GetBondCondition(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetBondCondition", ReplyAction="http://tempuri.org/IJustWareApi/GetBondConditionResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.BondCondition> GetBondConditionAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindBondConditions", ReplyAction="http://tempuri.org/IJustWareApi/FindBondConditionsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.BondCondition> FindBondConditions(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindBondConditions", ReplyAction="http://tempuri.org/IJustWareApi/FindBondConditionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.BondCondition>> FindBondConditionsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetBondAmendment", ReplyAction="http://tempuri.org/IJustWareApi/GetBondAmendmentResponse")]
        AdvancedJustWareAPI.api.BondAmendment GetBondAmendment(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetBondAmendment", ReplyAction="http://tempuri.org/IJustWareApi/GetBondAmendmentResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.BondAmendment> GetBondAmendmentAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindBondAmendments", ReplyAction="http://tempuri.org/IJustWareApi/FindBondAmendmentsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.BondAmendment> FindBondAmendments(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindBondAmendments", ReplyAction="http://tempuri.org/IJustWareApi/FindBondAmendmentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.BondAmendment>> FindBondAmendmentsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetOnlineDocument", ReplyAction="http://tempuri.org/IJustWareApi/GetOnlineDocumentResponse")]
        AdvancedJustWareAPI.api.OnlineDocument GetOnlineDocument(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetOnlineDocument", ReplyAction="http://tempuri.org/IJustWareApi/GetOnlineDocumentResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.OnlineDocument> GetOnlineDocumentAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindOnlineDocuments", ReplyAction="http://tempuri.org/IJustWareApi/FindOnlineDocumentsResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.OnlineDocument> FindOnlineDocuments(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindOnlineDocuments", ReplyAction="http://tempuri.org/IJustWareApi/FindOnlineDocumentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.OnlineDocument>> FindOnlineDocumentsAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetOnlineDocumentAuthorizedName", ReplyAction="http://tempuri.org/IJustWareApi/GetOnlineDocumentAuthorizedNameResponse")]
        AdvancedJustWareAPI.api.OnlineDocumentAuthorizedName GetOnlineDocumentAuthorizedName(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetOnlineDocumentAuthorizedName", ReplyAction="http://tempuri.org/IJustWareApi/GetOnlineDocumentAuthorizedNameResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.OnlineDocumentAuthorizedName> GetOnlineDocumentAuthorizedNameAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindOnlineDocumentAuthorizedNames", ReplyAction="http://tempuri.org/IJustWareApi/FindOnlineDocumentAuthorizedNamesResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.OnlineDocumentAuthorizedName> FindOnlineDocumentAuthorizedNames(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindOnlineDocumentAuthorizedNames", ReplyAction="http://tempuri.org/IJustWareApi/FindOnlineDocumentAuthorizedNamesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.OnlineDocumentAuthorizedName>> FindOnlineDocumentAuthorizedNamesAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCaseStatusHistory", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseStatusHistoryResponse")]
        AdvancedJustWareAPI.api.CaseStatusHistory GetCaseStatusHistory(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/GetCaseStatusHistory", ReplyAction="http://tempuri.org/IJustWareApi/GetCaseStatusHistoryResponse")]
        System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseStatusHistory> GetCaseStatusHistoryAsync(int justWareID, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseStatusHistory", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseStatusHistoryResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseStatusHistory> FindCaseStatusHistory(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/FindCaseStatusHistory", ReplyAction="http://tempuri.org/IJustWareApi/FindCaseStatusHistoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseStatusHistory>> FindCaseStatusHistoryAsync(string query, System.Collections.Generic.List<string> includedCollections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/Submit", ReplyAction="http://tempuri.org/IJustWareApi/SubmitResponse")]
        System.Collections.Generic.List<AdvancedJustWareAPI.api.Key> Submit(AdvancedJustWareAPI.api.DataContractBase data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJustWareApi/Submit", ReplyAction="http://tempuri.org/IJustWareApi/SubmitResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Key>> SubmitAsync(AdvancedJustWareAPI.api.DataContractBase data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJustWareApiChannel : AdvancedJustWareAPI.api.IJustWareApi, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JustWareApiClient : System.ServiceModel.ClientBase<AdvancedJustWareAPI.api.IJustWareApi>, AdvancedJustWareAPI.api.IJustWareApi {
        
        public JustWareApiClient() {
        }
        
        public JustWareApiClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JustWareApiClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JustWareApiClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JustWareApiClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string RequestFileDownload(AdvancedJustWareAPI.api.DataContractBase document) {
            return base.Channel.RequestFileDownload(document);
        }
        
        public System.Threading.Tasks.Task<string> RequestFileDownloadAsync(AdvancedJustWareAPI.api.DataContractBase document) {
            return base.Channel.RequestFileDownloadAsync(document);
        }
        
        public string RequestFileUpload(AdvancedJustWareAPI.api.DataContractBase document) {
            return base.Channel.RequestFileUpload(document);
        }
        
        public System.Threading.Tasks.Task<string> RequestFileUploadAsync(AdvancedJustWareAPI.api.DataContractBase document) {
            return base.Channel.RequestFileUploadAsync(document);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Key> FinalizeFileUpload(AdvancedJustWareAPI.api.DataContractBase document, string uploadUri) {
            return base.Channel.FinalizeFileUpload(document, uploadUri);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Key>> FinalizeFileUploadAsync(AdvancedJustWareAPI.api.DataContractBase document, string uploadUri) {
            return base.Channel.FinalizeFileUploadAsync(document, uploadUri);
        }
        
        public int GetCallerNameID() {
            return base.Channel.GetCallerNameID();
        }
        
        public System.Threading.Tasks.Task<int> GetCallerNameIDAsync() {
            return base.Channel.GetCallerNameIDAsync();
        }
        
        public int GetRecordCount(string entityName, string query) {
            return base.Channel.GetRecordCount(entityName, query);
        }
        
        public System.Threading.Tasks.Task<int> GetRecordCountAsync(string entityName, string query) {
            return base.Channel.GetRecordCountAsync(entityName, query);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseType> FindCaseTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseType>> FindCaseTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.EventType> FindEventTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindEventTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.EventType>> FindEventTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindEventTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseStatusType> FindCaseStatusTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseStatusTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseStatusType>> FindCaseStatusTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseStatusTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CorrespondenceType> FindCorrespondenceTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCorrespondenceTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CorrespondenceType>> FindCorrespondenceTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCorrespondenceTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.SentenceType> FindSentenceTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindSentenceTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.SentenceType>> FindSentenceTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindSentenceTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ConditionType> FindConditionTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindConditionTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ConditionType>> FindConditionTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindConditionTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.TaskType> FindTaskTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindTaskTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.TaskType>> FindTaskTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindTaskTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCollectableFinancialType> FindNonCollectableFinancialTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNonCollectableFinancialTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCollectableFinancialType>> FindNonCollectableFinancialTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNonCollectableFinancialTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.DocumentType> FindDocumentTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindDocumentTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.DocumentType>> FindDocumentTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindDocumentTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.EventStatusType> FindEventStatusTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindEventStatusTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.EventStatusType>> FindEventStatusTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindEventStatusTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ObligationType> FindObligationTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindObligationTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ObligationType>> FindObligationTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindObligationTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.AddressType> FindAddressTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindAddressTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.AddressType>> FindAddressTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindAddressTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.PhoneType> FindPhoneTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindPhoneTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.PhoneType>> FindPhoneTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindPhoneTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.EmailType> FindEmailTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindEmailTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.EmailType>> FindEmailTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindEmailTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.RelationshipType> FindRelationshipTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindRelationshipTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.RelationshipType>> FindRelationshipTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindRelationshipTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.PleaType> FindPleaTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindPleaTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.PleaType>> FindPleaTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindPleaTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.DispositionType> FindDispositionTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindDispositionTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.DispositionType>> FindDispositionTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindDispositionTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CountyType> FindCountyTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCountyTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CountyType>> FindCountyTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCountyTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.JurisdictionType> FindJurisdictionTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindJurisdictionTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.JurisdictionType>> FindJurisdictionTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindJurisdictionTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.AgencyType> FindAgencyTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindAgencyTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.AgencyType>> FindAgencyTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindAgencyTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CategoryType> FindCategoryTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCategoryTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CategoryType>> FindCategoryTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCategoryTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCasePaymentItemType> FindNonCasePaymentItemTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNonCasePaymentItemTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCasePaymentItemType>> FindNonCasePaymentItemTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNonCasePaymentItemTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseNoteType> FindCaseNoteTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseNoteTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseNoteType>> FindCaseNoteTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseNoteTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.EventLocationType> FindEventLocationTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindEventLocationTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.EventLocationType>> FindEventLocationTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindEventLocationTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NumberType> FindNumberTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNumberTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NumberType>> FindNumberTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNumberTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.InvolveType> FindInvolveTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindInvolveTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.InvolveType>> FindInvolveTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindInvolveTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseAttributeType> FindCaseAttributeTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseAttributeTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseAttributeType>> FindCaseAttributeTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseAttributeTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseAttributeCodeListType> FindCaseAttributeCodeListTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseAttributeCodeListTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseAttributeCodeListType>> FindCaseAttributeCodeListTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseAttributeCodeListTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAttributeType> FindChargeAttributeTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindChargeAttributeTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAttributeType>> FindChargeAttributeTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindChargeAttributeTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAttributeCodeListType> FindChargeAttributeCodeListTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindChargeAttributeCodeListTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAttributeCodeListType>> FindChargeAttributeCodeListTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindChargeAttributeCodeListTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeEnhancementType> FindChargeEnhancementTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindChargeEnhancementTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeEnhancementType>> FindChargeEnhancementTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindChargeEnhancementTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeHistoryType> FindChargeHistoryTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindChargeHistoryTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeHistoryType>> FindChargeHistoryTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindChargeHistoryTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeType> FindChargeTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindChargeTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeType>> FindChargeTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindChargeTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.DocketInstanceType> FindDocketInstanceTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindDocketInstanceTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.DocketInstanceType>> FindDocketInstanceTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindDocketInstanceTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ExhibitStatusType> FindExhibitStatusTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindExhibitStatusTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ExhibitStatusType>> FindExhibitStatusTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindExhibitStatusTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ExhibitType> FindExhibitTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindExhibitTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ExhibitType>> FindExhibitTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindExhibitTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.IntoxicantType> FindIntoxicantTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindIntoxicantTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.IntoxicantType>> FindIntoxicantTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindIntoxicantTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NameAttributeCodeListType> FindNameAttributeCodeListTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNameAttributeCodeListTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameAttributeCodeListType>> FindNameAttributeCodeListTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNameAttributeCodeListTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NameAttributeType> FindNameAttributeTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNameAttributeTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameAttributeType>> FindNameAttributeTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNameAttributeTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NameType> FindNameTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNameTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameType>> FindNameTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNameTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.PaymentStatusType> FindPaymentStatusTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindPaymentStatusTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.PaymentStatusType>> FindPaymentStatusTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindPaymentStatusTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.PaymentType> FindPaymentTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindPaymentTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.PaymentType>> FindPaymentTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindPaymentTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.PhysicalLocationType> FindPhysicalLocationTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindPhysicalLocationTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.PhysicalLocationType>> FindPhysicalLocationTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindPhysicalLocationTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteAttributeType> FindStatuteAttributeTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindStatuteAttributeTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteAttributeType>> FindStatuteAttributeTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindStatuteAttributeTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteCategoryType> FindStatuteCategoryTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindStatuteCategoryTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteCategoryType>> FindStatuteCategoryTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindStatuteCategoryTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteClassType> FindStatuteClassTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindStatuteClassTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteClassType>> FindStatuteClassTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindStatuteClassTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteSeverityType> FindStatuteSeverityTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindStatuteSeverityTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteSeverityType>> FindStatuteSeverityTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindStatuteSeverityTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteTextType> FindStatuteTextTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindStatuteTextTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteTextType>> FindStatuteTextTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindStatuteTextTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.TimeTrackingStatusType> FindTimeTrackingStatusTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindTimeTrackingStatusTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.TimeTrackingStatusType>> FindTimeTrackingStatusTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindTimeTrackingStatusTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.TimeTrackingType> FindTimeTrackingTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindTimeTrackingTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.TimeTrackingType>> FindTimeTrackingTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindTimeTrackingTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.BondStatusType> FindBondStatusTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindBondStatusTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.BondStatusType>> FindBondStatusTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindBondStatusTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.BondType> FindBondTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindBondTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.BondType>> FindBondTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindBondTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.BondConditionType> FindBondConditionTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindBondConditionTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.BondConditionType>> FindBondConditionTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindBondConditionTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.VoucherType> FindVoucherTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindVoucherTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.VoucherType>> FindVoucherTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindVoucherTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.VoucherStatusType> FindVoucherStatusTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindVoucherStatusTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.VoucherStatusType>> FindVoucherStatusTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindVoucherStatusTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.RelatedCaseType> FindRelatedCaseTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindRelatedCaseTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.RelatedCaseType>> FindRelatedCaseTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindRelatedCaseTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.AccountType> FindAccountTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindAccountTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.AccountType>> FindAccountTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindAccountTypesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.AccountStatus> FindAccountStatuses(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindAccountStatuses(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.AccountStatus>> FindAccountStatusesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindAccountStatusesAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Account> FindAccounts(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindAccounts(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Account>> FindAccountsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindAccountsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.Account GetAccount(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetAccount(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Account> GetAccountAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetAccountAsync(justWareID, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.JusticeBrokerMessageQueue GetJusticeBrokerMessageQueue(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetJusticeBrokerMessageQueue(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.JusticeBrokerMessageQueue> GetJusticeBrokerMessageQueueAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetJusticeBrokerMessageQueueAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.JusticeBrokerMessageQueue> FindJusticeBrokerMessageQueues(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindJusticeBrokerMessageQueues(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.JusticeBrokerMessageQueue>> FindJusticeBrokerMessageQueuesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindJusticeBrokerMessageQueuesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.Voucher GetVoucher(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetVoucher(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Voucher> GetVoucherAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetVoucherAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Voucher> FindVouchers(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindVouchers(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Voucher>> FindVouchersAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindVouchersAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.VoucherableAmount> FindVoucherableAmounts(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindVoucherableAmounts(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.VoucherableAmount>> FindVoucherableAmountsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindVoucherableAmountsAsync(query, includedCollections);
        }
        
        public string CopyCase(AdvancedJustWareAPI.api.CopyCaseParameters copyCaseParameters) {
            return base.Channel.CopyCase(copyCaseParameters);
        }
        
        public System.Threading.Tasks.Task<string> CopyCaseAsync(AdvancedJustWareAPI.api.CopyCaseParameters copyCaseParameters) {
            return base.Channel.CopyCaseAsync(copyCaseParameters);
        }
        
        public AdvancedJustWareAPI.api.CreditSuspendType GetCreditSuspendType(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCreditSuspendType(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CreditSuspendType> GetCreditSuspendTypeAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCreditSuspendTypeAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CreditSuspendType> FindCreditSuspendTypes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCreditSuspendTypes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CreditSuspendType>> FindCreditSuspendTypesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCreditSuspendTypesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.CreditSuspend GetCreditSuspend(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCreditSuspend(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CreditSuspend> GetCreditSuspendAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCreditSuspendAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CreditSuspend> FindCreditSuspends(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCreditSuspends(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CreditSuspend>> FindCreditSuspendsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCreditSuspendsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.VerifyInstallResult VerifyInstall() {
            return base.Channel.VerifyInstall();
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.VerifyInstallResult> VerifyInstallAsync() {
            return base.Channel.VerifyInstallAsync();
        }
        
        public void SetFileAccessCredentialsForFileUpload(string domain, string username, string password) {
            base.Channel.SetFileAccessCredentialsForFileUpload(domain, username, password);
        }
        
        public System.Threading.Tasks.Task SetFileAccessCredentialsForFileUploadAsync(string domain, string username, string password) {
            return base.Channel.SetFileAccessCredentialsForFileUploadAsync(domain, username, password);
        }
        
        public AdvancedJustWareAPI.api.Name GetName(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetName(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Name> GetNameAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNameAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Name> FindNames(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNames(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Name>> FindNamesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNamesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.Address GetAddress(int justWareID) {
            return base.Channel.GetAddress(justWareID);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Address> GetAddressAsync(int justWareID) {
            return base.Channel.GetAddressAsync(justWareID);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Address> FindAddresses(string query) {
            return base.Channel.FindAddresses(query);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Address>> FindAddressesAsync(string query) {
            return base.Channel.FindAddressesAsync(query);
        }
        
        public AdvancedJustWareAPI.api.Case GetCase(string justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCase(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Case> GetCaseAsync(string justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCaseAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Case> FindCases(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCases(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Case>> FindCasesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCasesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.CaseInvolvedName GetInvolvedName(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetInvolvedName(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseInvolvedName> GetInvolvedNameAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetInvolvedNameAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseInvolvedName> FindInvolvedNames(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindInvolvedNames(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseInvolvedName>> FindInvolvedNamesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindInvolvedNamesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.Phone GetPhone(int justWareID) {
            return base.Channel.GetPhone(justWareID);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Phone> GetPhoneAsync(int justWareID) {
            return base.Channel.GetPhoneAsync(justWareID);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Phone> FindPhones(string query) {
            return base.Channel.FindPhones(query);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Phone>> FindPhonesAsync(string query) {
            return base.Channel.FindPhonesAsync(query);
        }
        
        public AdvancedJustWareAPI.api.Email GetEmail(int justWareID) {
            return base.Channel.GetEmail(justWareID);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Email> GetEmailAsync(int justWareID) {
            return base.Channel.GetEmailAsync(justWareID);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Email> FindEmails(string query) {
            return base.Channel.FindEmails(query);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Email>> FindEmailsAsync(string query) {
            return base.Channel.FindEmailsAsync(query);
        }
        
        public AdvancedJustWareAPI.api.NameNumber GetNameNumber(int justWareID) {
            return base.Channel.GetNameNumber(justWareID);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameNumber> GetNameNumberAsync(int justWareID) {
            return base.Channel.GetNameNumberAsync(justWareID);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NameNumber> FindNameNumbers(string query) {
            return base.Channel.FindNameNumbers(query);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameNumber>> FindNameNumbersAsync(string query) {
            return base.Channel.FindNameNumbersAsync(query);
        }
        
        public AdvancedJustWareAPI.api.NameAttribute GetNameAttribute(int justWareID) {
            return base.Channel.GetNameAttribute(justWareID);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameAttribute> GetNameAttributeAsync(int justWareID) {
            return base.Channel.GetNameAttributeAsync(justWareID);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NameAttribute> FindNameAttributes(string query) {
            return base.Channel.FindNameAttributes(query);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameAttribute>> FindNameAttributesAsync(string query) {
            return base.Channel.FindNameAttributesAsync(query);
        }
        
        public AdvancedJustWareAPI.api.NameNote GetNameNote(int justWareID) {
            return base.Channel.GetNameNote(justWareID);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameNote> GetNameNoteAsync(int justWareID) {
            return base.Channel.GetNameNoteAsync(justWareID);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NameNote> FindNameNotes(string query) {
            return base.Channel.FindNameNotes(query);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameNote>> FindNameNotesAsync(string query) {
            return base.Channel.FindNameNotesAsync(query);
        }
        
        public AdvancedJustWareAPI.api.NameEvent GetNameEvent(int justWareID) {
            return base.Channel.GetNameEvent(justWareID);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameEvent> GetNameEventAsync(int justWareID) {
            return base.Channel.GetNameEventAsync(justWareID);
        }
        
        public AdvancedJustWareAPI.api.NameEvent GetNameEventWithNameID(int justWareID, int nameID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNameEventWithNameID(justWareID, nameID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameEvent> GetNameEventWithNameIDAsync(int justWareID, int nameID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNameEventWithNameIDAsync(justWareID, nameID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NameEvent> FindNameEvents(string query) {
            return base.Channel.FindNameEvents(query);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameEvent>> FindNameEventsAsync(string query) {
            return base.Channel.FindNameEventsAsync(query);
        }
        
        public AdvancedJustWareAPI.api.EventInvolvedName GetEventInvolvedName(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetEventInvolvedName(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.EventInvolvedName> GetEventInvolvedNameAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetEventInvolvedNameAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.EventInvolvedName> FindEventInvolvedNames(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindEventInvolvedNames(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.EventInvolvedName>> FindEventInvolvedNamesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindEventInvolvedNamesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.CaseAttribute GetCaseAttribute(int justWareID) {
            return base.Channel.GetCaseAttribute(justWareID);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseAttribute> GetCaseAttributeAsync(int justWareID) {
            return base.Channel.GetCaseAttributeAsync(justWareID);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseAttribute> FindCaseAttributes(string query) {
            return base.Channel.FindCaseAttributes(query);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseAttribute>> FindCaseAttributesAsync(string query) {
            return base.Channel.FindCaseAttributesAsync(query);
        }
        
        public AdvancedJustWareAPI.api.CaseNote GetCaseNote(int justWareID) {
            return base.Channel.GetCaseNote(justWareID);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseNote> GetCaseNoteAsync(int justWareID) {
            return base.Channel.GetCaseNoteAsync(justWareID);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseNote> FindCaseNotes(string query) {
            return base.Channel.FindCaseNotes(query);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseNote>> FindCaseNotesAsync(string query) {
            return base.Channel.FindCaseNotesAsync(query);
        }
        
        public AdvancedJustWareAPI.api.CaseEvent GetCaseEvent(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCaseEvent(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseEvent> GetCaseEventAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCaseEventAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseEvent> FindCaseEvents(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseEvents(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseEvent>> FindCaseEventsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseEventsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.Agency GetAgency(int justWareID) {
            return base.Channel.GetAgency(justWareID);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Agency> GetAgencyAsync(int justWareID) {
            return base.Channel.GetAgencyAsync(justWareID);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Agency> FindAgencies(string query) {
            return base.Channel.FindAgencies(query);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Agency>> FindAgenciesAsync(string query) {
            return base.Channel.FindAgenciesAsync(query);
        }
        
        public AdvancedJustWareAPI.api.Location GetLocation(int justWareID) {
            return base.Channel.GetLocation(justWareID);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Location> GetLocationAsync(int justWareID) {
            return base.Channel.GetLocationAsync(justWareID);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Location> FindLocations(string query) {
            return base.Channel.FindLocations(query);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Location>> FindLocationsAsync(string query) {
            return base.Channel.FindLocationsAsync(query);
        }
        
        public AdvancedJustWareAPI.api.Charge GetCharge(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCharge(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Charge> GetChargeAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetChargeAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Charge> FindCharges(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCharges(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Charge>> FindChargesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindChargesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.ChargeInvolvedName GetChargeInvolvedName(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetChargeInvolvedName(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.ChargeInvolvedName> GetChargeInvolvedNameAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetChargeInvolvedNameAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeInvolvedName> FindChargeInvolvedNames(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindChargeInvolvedNames(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeInvolvedName>> FindChargeInvolvedNamesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindChargeInvolvedNamesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.ChargeAttribute GetChargeAttribute(int justWareID) {
            return base.Channel.GetChargeAttribute(justWareID);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.ChargeAttribute> GetChargeAttributeAsync(int justWareID) {
            return base.Channel.GetChargeAttributeAsync(justWareID);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAttribute> FindChargeAttributes(string query) {
            return base.Channel.FindChargeAttributes(query);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAttribute>> FindChargeAttributesAsync(string query) {
            return base.Channel.FindChargeAttributesAsync(query);
        }
        
        public AdvancedJustWareAPI.api.Judgment GetJudgment(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetJudgment(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Judgment> GetJudgmentAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetJudgmentAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Judgment> FindJudgments(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindJudgments(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Judgment>> FindJudgmentsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindJudgmentsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.Sentence GetSentence(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetSentence(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Sentence> GetSentenceAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetSentenceAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Sentence> FindSentences(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindSentences(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Sentence>> FindSentencesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindSentencesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.CaseTask GetCaseTask(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCaseTask(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseTask> GetCaseTaskAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCaseTaskAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseTask> FindCaseTasks(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseTasks(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseTask>> FindCaseTasksAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseTasksAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.NameTask GetNameTask(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNameTask(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameTask> GetNameTaskAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNameTaskAsync(justWareID, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.NameTask GetNameTaskWithNameID(int justWareID, int nameID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNameTaskWithNameID(justWareID, nameID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameTask> GetNameTaskWithNameIDAsync(int justWareID, int nameID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNameTaskWithNameIDAsync(justWareID, nameID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NameTask> FindNameTasks(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNameTasks(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameTask>> FindNameTasksAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNameTasksAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.TaskInvolvedName GetTaskInvolvedName(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetTaskInvolvedName(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.TaskInvolvedName> GetTaskInvolvedNameAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetTaskInvolvedNameAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.TaskInvolvedName> FindTaskInvolvedNames(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindTaskInvolvedNames(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.TaskInvolvedName>> FindTaskInvolvedNamesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindTaskInvolvedNamesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.CorrespondenceInvolvedName GetCorrespondenceInvolvedName(int justWareID) {
            return base.Channel.GetCorrespondenceInvolvedName(justWareID);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CorrespondenceInvolvedName> GetCorrespondenceInvolvedNameAsync(int justWareID) {
            return base.Channel.GetCorrespondenceInvolvedNameAsync(justWareID);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CorrespondenceInvolvedName> FindCorrespondenceInvolvedNames(string query) {
            return base.Channel.FindCorrespondenceInvolvedNames(query);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CorrespondenceInvolvedName>> FindCorrespondenceInvolvedNamesAsync(string query) {
            return base.Channel.FindCorrespondenceInvolvedNamesAsync(query);
        }
        
        public AdvancedJustWareAPI.api.NameCorrespondence GetNameCorrespondence(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNameCorrespondence(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameCorrespondence> GetNameCorrespondenceAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNameCorrespondenceAsync(justWareID, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.NameCorrespondence GetNameCorrespondenceWithNameID(int justWareID, int nameID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNameCorrespondenceWithNameID(justWareID, nameID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameCorrespondence> GetNameCorrespondenceWithNameIDAsync(int justWareID, int nameID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNameCorrespondenceWithNameIDAsync(justWareID, nameID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NameCorrespondence> FindNameCorrespondences(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNameCorrespondences(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameCorrespondence>> FindNameCorrespondencesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNameCorrespondencesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.CaseCorrespondence GetCaseCorrespondence(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCaseCorrespondence(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseCorrespondence> GetCaseCorrespondenceAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCaseCorrespondenceAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseCorrespondence> FindCaseCorrespondences(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseCorrespondences(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseCorrespondence>> FindCaseCorrespondencesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseCorrespondencesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.Condition GetCondition(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCondition(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Condition> GetConditionAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetConditionAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Condition> FindConditions(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindConditions(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Condition>> FindConditionsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindConditionsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.ChargeAgency GetChargeAgency(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetChargeAgency(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.ChargeAgency> GetChargeAgencyAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetChargeAgencyAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAgency> FindChargeAgencies(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindChargeAgencies(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeAgency>> FindChargeAgenciesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindChargeAgenciesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.ChargeEnhancement GetChargeEnhancement(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetChargeEnhancement(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.ChargeEnhancement> GetChargeEnhancementAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetChargeEnhancementAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeEnhancement> FindChargeEnhancements(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindChargeEnhancements(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeEnhancement>> FindChargeEnhancementsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindChargeEnhancementsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.PendingTimeTrackingEntry GetPendingTimeTrackingEntry(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetPendingTimeTrackingEntry(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.PendingTimeTrackingEntry> GetPendingTimeTrackingEntryAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetPendingTimeTrackingEntryAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.PendingTimeTrackingEntry> FindPendingTimeTrackingEntries(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindPendingTimeTrackingEntries(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.PendingTimeTrackingEntry>> FindPendingTimeTrackingEntriesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindPendingTimeTrackingEntriesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.Intoxicant GetIntoxicant(int justWareID) {
            return base.Channel.GetIntoxicant(justWareID);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Intoxicant> GetIntoxicantAsync(int justWareID) {
            return base.Channel.GetIntoxicantAsync(justWareID);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Intoxicant> FindIntoxicants(string query) {
            return base.Channel.FindIntoxicants(query);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Intoxicant>> FindIntoxicantsAsync(string query) {
            return base.Channel.FindIntoxicantsAsync(query);
        }
        
        public AdvancedJustWareAPI.api.Exhibit GetExhibit(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetExhibit(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Exhibit> GetExhibitAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetExhibitAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Exhibit> FindExhibits(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindExhibits(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Exhibit>> FindExhibitsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindExhibitsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.NameNonCollectableFinancial GetNameNonCollectableFinancial(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNameNonCollectableFinancial(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameNonCollectableFinancial> GetNameNonCollectableFinancialAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNameNonCollectableFinancialAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NameNonCollectableFinancial> FindNameNonCollectableFinancials(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNameNonCollectableFinancials(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameNonCollectableFinancial>> FindNameNonCollectableFinancialsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNameNonCollectableFinancialsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.PhysicalLocation GetPhysicalLocation(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetPhysicalLocation(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.PhysicalLocation> GetPhysicalLocationAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetPhysicalLocationAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.PhysicalLocation> FindPhysicalLocations(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindPhysicalLocations(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.PhysicalLocation>> FindPhysicalLocationsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindPhysicalLocationsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.CaseNonCollectableFinancial GetCaseNonCollectableFinancial(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCaseNonCollectableFinancial(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseNonCollectableFinancial> GetCaseNonCollectableFinancialAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCaseNonCollectableFinancialAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseNonCollectableFinancial> FindCaseNonCollectableFinancials(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseNonCollectableFinancials(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseNonCollectableFinancial>> FindCaseNonCollectableFinancialsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseNonCollectableFinancialsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.NonCollectableFinancialInvolvedName GetNonCollectableFinancialInvolvedName(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNonCollectableFinancialInvolvedName(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NonCollectableFinancialInvolvedName> GetNonCollectableFinancialInvolvedNameAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNonCollectableFinancialInvolvedNameAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCollectableFinancialInvolvedName> FindNonCollectableFinancialInvolvedNames(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNonCollectableFinancialInvolvedNames(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCollectableFinancialInvolvedName>> FindNonCollectableFinancialInvolvedNamesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNonCollectableFinancialInvolvedNamesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.NameDocument GetNameDocument(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNameDocument(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NameDocument> GetNameDocumentAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNameDocumentAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NameDocument> FindNameDocuments(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNameDocuments(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NameDocument>> FindNameDocumentsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNameDocumentsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.CaseDocument GetCaseDocument(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCaseDocument(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseDocument> GetCaseDocumentAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCaseDocumentAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseDocument> FindCaseDocuments(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseDocuments(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseDocument>> FindCaseDocumentsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseDocumentsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.DocumentInvolvedName GetDocumentInvolvedName(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetDocumentInvolvedName(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.DocumentInvolvedName> GetDocumentInvolvedNameAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetDocumentInvolvedNameAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.DocumentInvolvedName> FindDocumentInvolvedNames(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindDocumentInvolvedNames(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.DocumentInvolvedName>> FindDocumentInvolvedNamesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindDocumentInvolvedNamesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.ApplicationPerson GetApplicationPerson(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetApplicationPerson(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.ApplicationPerson> GetApplicationPersonAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetApplicationPersonAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ApplicationPerson> FindApplicationPersons(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindApplicationPersons(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ApplicationPerson>> FindApplicationPersonsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindApplicationPersonsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.ChargeHistory GetChargeHistory(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetChargeHistory(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.ChargeHistory> GetChargeHistoryAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetChargeHistoryAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeHistory> FindChargeHistories(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindChargeHistories(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.ChargeHistory>> FindChargeHistoriesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindChargeHistoriesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.Statute GetStatute(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetStatute(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Statute> GetStatuteAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetStatuteAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Statute> FindStatutes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindStatutes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Statute>> FindStatutesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindStatutesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.StatuteAttribute GetStatuteAttribute(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetStatuteAttribute(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.StatuteAttribute> GetStatuteAttributeAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetStatuteAttributeAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteAttribute> FindStatuteAttributes(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindStatuteAttributes(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteAttribute>> FindStatuteAttributesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindStatuteAttributesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.StatuteText GetStatuteText(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetStatuteText(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.StatuteText> GetStatuteTextAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetStatuteTextAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteText> FindStatuteTexts(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindStatuteTexts(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.StatuteText>> FindStatuteTextsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindStatuteTextsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.Obligation GetObligation(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetObligation(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Obligation> GetObligationAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetObligationAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Obligation> FindObligations(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindObligations(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Obligation>> FindObligationsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindObligationsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.Payment GetPayment(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetPayment(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Payment> GetPaymentAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetPaymentAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Payment> FindPayments(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindPayments(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Payment>> FindPaymentsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindPaymentsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.Transfer GetTransfer(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetTransfer(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Transfer> GetTransferAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetTransferAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Transfer> FindTransfers(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindTransfers(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Transfer>> FindTransfersAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindTransfersAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.PrimaryNameRelationship GetPrimaryNameRelationship(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetPrimaryNameRelationship(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.PrimaryNameRelationship> GetPrimaryNameRelationshipAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetPrimaryNameRelationshipAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.PrimaryNameRelationship> FindPrimaryNameRelationships(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindPrimaryNameRelationships(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.PrimaryNameRelationship>> FindPrimaryNameRelationshipsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindPrimaryNameRelationshipsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.SecondaryNameRelationship GetSecondaryNameRelationship(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetSecondaryNameRelationship(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.SecondaryNameRelationship> GetSecondaryNameRelationshipAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetSecondaryNameRelationshipAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.SecondaryNameRelationship> FindSecondaryNameRelationships(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindSecondaryNameRelationships(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.SecondaryNameRelationship>> FindSecondaryNameRelationshipsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindSecondaryNameRelationshipsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.CaseRelationship GetCaseRelationship(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCaseRelationship(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseRelationship> GetCaseRelationshipAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCaseRelationshipAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseRelationship> FindCaseRelationships(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseRelationships(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseRelationship>> FindCaseRelationshipsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseRelationshipsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.NonCasePayment GetNonCasePayment(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNonCasePayment(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NonCasePayment> GetNonCasePaymentAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNonCasePaymentAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCasePayment> FindNonCasePayments(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNonCasePayments(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCasePayment>> FindNonCasePaymentsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNonCasePaymentsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.NonCasePaymentItem GetNonCasePaymentItem(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNonCasePaymentItem(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.NonCasePaymentItem> GetNonCasePaymentItemAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetNonCasePaymentItemAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCasePaymentItem> FindNonCasePaymentItems(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNonCasePaymentItems(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.NonCasePaymentItem>> FindNonCasePaymentItemsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindNonCasePaymentItemsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.CalendarDocket GetCalendarDocket(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCalendarDocket(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CalendarDocket> GetCalendarDocketAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCalendarDocketAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CalendarDocket> FindCalendarDockets(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCalendarDockets(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CalendarDocket>> FindCalendarDocketsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCalendarDocketsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.DocketInstance GetDocketInstance(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetDocketInstance(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.DocketInstance> GetDocketInstanceAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetDocketInstanceAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.DocketInstance> FindDocketInstances(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindDocketInstances(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.DocketInstance>> FindDocketInstancesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindDocketInstancesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.Bond GetBond(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetBond(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.Bond> GetBondAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetBondAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Bond> FindBonds(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindBonds(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Bond>> FindBondsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindBondsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.BondCondition GetBondCondition(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetBondCondition(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.BondCondition> GetBondConditionAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetBondConditionAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.BondCondition> FindBondConditions(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindBondConditions(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.BondCondition>> FindBondConditionsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindBondConditionsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.BondAmendment GetBondAmendment(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetBondAmendment(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.BondAmendment> GetBondAmendmentAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetBondAmendmentAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.BondAmendment> FindBondAmendments(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindBondAmendments(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.BondAmendment>> FindBondAmendmentsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindBondAmendmentsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.OnlineDocument GetOnlineDocument(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetOnlineDocument(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.OnlineDocument> GetOnlineDocumentAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetOnlineDocumentAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.OnlineDocument> FindOnlineDocuments(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindOnlineDocuments(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.OnlineDocument>> FindOnlineDocumentsAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindOnlineDocumentsAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.OnlineDocumentAuthorizedName GetOnlineDocumentAuthorizedName(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetOnlineDocumentAuthorizedName(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.OnlineDocumentAuthorizedName> GetOnlineDocumentAuthorizedNameAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetOnlineDocumentAuthorizedNameAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.OnlineDocumentAuthorizedName> FindOnlineDocumentAuthorizedNames(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindOnlineDocumentAuthorizedNames(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.OnlineDocumentAuthorizedName>> FindOnlineDocumentAuthorizedNamesAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindOnlineDocumentAuthorizedNamesAsync(query, includedCollections);
        }
        
        public AdvancedJustWareAPI.api.CaseStatusHistory GetCaseStatusHistory(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCaseStatusHistory(justWareID, includedCollections);
        }
        
        public System.Threading.Tasks.Task<AdvancedJustWareAPI.api.CaseStatusHistory> GetCaseStatusHistoryAsync(int justWareID, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.GetCaseStatusHistoryAsync(justWareID, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseStatusHistory> FindCaseStatusHistory(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseStatusHistory(query, includedCollections);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.CaseStatusHistory>> FindCaseStatusHistoryAsync(string query, System.Collections.Generic.List<string> includedCollections) {
            return base.Channel.FindCaseStatusHistoryAsync(query, includedCollections);
        }
        
        public System.Collections.Generic.List<AdvancedJustWareAPI.api.Key> Submit(AdvancedJustWareAPI.api.DataContractBase data) {
            return base.Channel.Submit(data);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdvancedJustWareAPI.api.Key>> SubmitAsync(AdvancedJustWareAPI.api.DataContractBase data) {
            return base.Channel.SubmitAsync(data);
        }
    }
}
